\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 15 14:43:08 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=30000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Apr 15 14:43:08 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onPostResult()].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onPostResult()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "e5095ad740f809525e4c4689dcc12514a0ca06cc"))

(autoModeTime "21835")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "7"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "assignment" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "Query_axiom_for_resultReady_in_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "6") (term "0") (inst "resultReady_sk=resultReady_sk_0") (inst "#self=s") (inst "#res=x") (ifseqformula "3"))
(rule "eqSymm" (formula "6") (term "0,1"))
(rule "applyEqRigid" (formula "6") (term "1,0,1") (ifseqformula "7"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "boxToDiamond" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_onPostResult,savedHeapBefore_onPostResult"))
(builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "_result"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_resultReady,savedHeapBefore_resultReady"))
(builtin "One Step Simplification" (formula "9"))
(rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_getResult,result_0,exc_1,heapAfter_getResult,anon_heap_getResult") (contract "de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server::getResult()].JML operation contract.0"))
(branch "Post (getResult)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,1,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,0,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
   (rule "true_left" (formula "14"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "notLeft" (formula "13"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "assignment" (formula "17") (term "1"))
   (builtin "One Step Simplification" (formula "17"))
   (builtin "Loop Invariant" (formula "14") (newnames "heapBeforeLoop_4,iBeforeLoop_1,i_3,anon_heap_loop_4,o,f,variant_4,b_6"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "14") (term "0,0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "14") (term "0,1"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_geqRight" (formula "14"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_73"))
      (rule "inequality_comparison_simple" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "ifSplit" (formula "18"))
      (branch "if x_73 true"
         (builtin "One Step Simplification" (formula "19"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallUnfoldTarget" (formula "18") (term "1") (inst "#v0=s"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "s_2"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "pullOutSelect" (formula "18") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "19") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallUnfoldArguments" (formula "18") (term "1"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "var_10"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "var_11"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "var_12"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "var_13"))
         (rule "stringAssignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "eqSymm" (formula "18"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_14"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_sendTo_1,exc_10,heapAfter_sendTo_1,anon_heap_sendTo_1") (contract "de.uni.trier.infsec.functionalities.amt.Sender[de.uni.trier.infsec.functionalities.amt.Sender::sendTo([B,int,java.lang.String,int)].JML operation contract.0"))
         (branch "Post (sendTo)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "typeEqDerived" (formula "18") (term "0,1,1,1") (ifseqformula "17"))
            (rule "typeEqDerived" (formula "18") (term "0,1,0,1,1") (ifseqformula "17"))
            (rule "typeEqDerived" (formula "18") (term "0,1,0,0,1,1") (ifseqformula "17"))
            (rule "typeEqDerived" (formula "18") (term "0,0,0,0,1,1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
            (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
            (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "16"))
            (rule "simplifySelectOfCreate" (formula "16"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "16"))
            (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "16"))
            (rule "hideAuxiliaryEq" (formula "16"))
            (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_8"))
            (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "replaceKnownSelect_taclet2_0" (formula "18") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "18") (term "2,0"))
            (rule "elementOfUnion" (formula "18") (term "0,0"))
            (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "commuteUnion" (formula "16") (term "1,0"))
            (rule "commuteUnion" (formula "19") (term "1"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "tryEmpty" (formula "24") (term "1"))
            (rule "emptyModality" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "allRight" (formula "24") (inst "sk=f_150"))
            (rule "allRight" (formula "24") (inst "sk=o_150"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "eqSymm" (formula "27"))
            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_150_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "28"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_150_1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__299"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "eqSymm" (formula "2") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_150_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__300"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "commute_and" (formula "28"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "cut_direct" (formula "17") (term "0"))
            (branch "CUT: result_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "ifthenelse_split" (formula "21") (term "0"))
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                  (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "cut_direct" (formula "29") (term "0,0"))
                  (branch "CUT: o_150 = null TRUE"
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "false_right" (formula "30"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_150 = null FALSE"
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notRight" (formula "30"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "false_right" (formula "29"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "30"))
                        (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "30") (term "0") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "30") (ifseqformula "1"))
                     )
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "31") (ifseqformula "2"))
                     )
                  )
               )
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "cut_direct" (formula "28") (term "0,0"))
                  (branch "CUT: o_150 = null TRUE"
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "false_right" (formula "29"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_150 = null FALSE"
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "notRight" (formula "29"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "false_right" (formula "28"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "29"))
                        (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "29") (ifseqformula "1"))
                        (rule "closeTrue" (formula "29"))
                     )
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "30") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "CUT: result_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "17"))
               (rule "ifthenelse_split" (formula "21") (term "0"))
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                  (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "cut_direct" (formula "30") (term "0,0"))
                  (branch "CUT: o_150 = null TRUE"
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "29") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "closeTrue" (formula "29"))
                  )
                  (branch "CUT: o_150 = null FALSE"
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "notRight" (formula "31"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "false_right" (formula "30"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "31"))
                        (rule "applyEqRigid" (formula "31") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "30") (term "1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "31") (ifseqformula "1"))
                        (rule "closeTrue" (formula "31"))
                     )
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "32") (ifseqformula "2"))
                     )
                  )
               )
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "cut_direct" (formula "29") (term "0,0"))
                  (branch "CUT: o_150 = null TRUE"
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "false_right" (formula "30"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "closeTrue" (formula "27"))
                  )
                  (branch "CUT: o_150 = null FALSE"
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notRight" (formula "30"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "false_right" (formula "29"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "31") (ifseqformula "1"))
                        (rule "closeTrue" (formula "31"))
                     )
                     (branch "f_150 = <created> ∧ o_150 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "31") (ifseqformula "2"))
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (sendTo)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "17"))
            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_6"))
            (rule "simplifySelectOfCreate" (formula "16"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "16"))
            (rule "hideAuxiliaryEq" (formula "16"))
            (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=java_lang_Object_created__242"))
            (rule "simplifySelectOfCreate" (formula "17"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "castDel" (formula "17") (term "1,0"))
            (rule "eqSymm" (formula "17") (term "0,1,0,0"))
            (rule "eqSymm" (formula "17") (term "0,0,0"))
            (rule "replace_known_right" (formula "17") (term "0,1,0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "sortsDisjointModuloNull" (formula "17") (term "0,0"))
            (rule "eqSymm" (formula "17") (term "1,0,0"))
            (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")))
            (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")))
            (rule "ifthenelse_negated" (formula "17") (term "0"))
            (rule "commute_or_2" (formula "19") (term "0"))
            (rule "commute_or_2" (formula "19"))
            (rule "commute_or" (formula "19") (term "0,0"))
            (rule "commute_or_2" (formula "19") (term "0"))
            (rule "commuteUnion" (formula "16") (term "1,0"))
            (rule "methodCallThrow" (formula "25") (term "1"))
            (rule "tryCatchThrow" (formula "25") (term "1"))
            (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_74"))
            (rule "equality_comparison_simple" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
            (rule "ifElseSplit" (formula "27"))
            (branch "if x_74 true"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_74 false"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "27"))
               (branch "if exc_10 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "27") (term "1") (newnames "e_9"))
                  (rule "reference_type_cast" (formula "27"))
                  (branch "Normal Execution (exc_10 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "assignment" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "emptyModality" (formula "27") (term "1"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")))
                     (rule "eqSymm" (formula "27") (term "1,0,0,1"))
                     (rule "commute_or_2" (formula "27") (term "0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0"))
                     (rule "commute_or_2" (formula "27") (term "0"))
                     (rule "commute_or" (formula "27") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0,0"))
                     (rule "commute_or_2" (formula "27") (term "0,0"))
                     (rule "ifthenelse_split" (formula "19") (term "0"))
                     (branch "exc_10.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "20"))
                        (rule "hideAuxiliaryEq" (formula "20"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "cut_direct" (formula "11") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                           (rule "cut_direct" (formula "20") (term "0,0,0"))
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allRight" (formula "26") (inst "sk=f_149"))
                              (rule "allRight" (formula "26") (inst "sk=o_149"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_149_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "30"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__297"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_149_1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__298"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_149_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "30"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "cut_direct" (formula "31") (term "0,0"))
                                 (branch "CUT: o_149 = null TRUE"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "closeTrue" (formula "29"))
                                 )
                                 (branch "CUT: o_149 = null FALSE"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "notRight" (formula "32"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "false_right" (formula "31"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_149 = <created> ∧ o_149 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "29") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "applyEqRigid" (formula "30") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "30") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "30"))
                                    )
                                    (branch "f_149 = <created> ∧ o_149 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "31") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "cut_direct" (formula "32") (term "0,0"))
                                 (branch "CUT: o_149 = null TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_149 = null FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_149 = <created> ∧ o_149 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "31") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "31") (ifseqformula "1"))
                                    )
                                    (branch "f_149 = <created> ∧ o_149 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "32") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "27") (term "0,0,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "cut_direct" (formula "16") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "allRight" (formula "27") (inst "sk=f_148"))
                                    (rule "allRight" (formula "27") (inst "sk=o_148"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_148_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__295"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_148_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__296"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_148_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "31"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "32") (term "0,0"))
                                    (branch "CUT: o_148 = null TRUE"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "false_right" (formula "33"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_148 = null FALSE"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "notRight" (formula "33"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_148 = <created> ∧ o_148 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "32"))
                                       )
                                       (branch "f_148 = <created> ∧ o_148 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "32") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: java.lang.Error::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "allRight" (formula "28") (inst "sk=f_147"))
                                       (rule "allRight" (formula "28") (inst "sk=o_147"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_147_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__293"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_147_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__294"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_147_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "32"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "33") (term "0,0"))
                                       (branch "CUT: o_147 = null TRUE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: o_147 = null FALSE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "notRight" (formula "34"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_147 = <created> ∧ o_147 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "33") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "33"))
                                          )
                                          (branch "f_147 = <created> ∧ o_147 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "33") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "20")))
                                       (rule "allRight" (formula "29") (inst "sk=f_146"))
                                       (rule "allRight" (formula "29") (inst "sk=o_146"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_146_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_146_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__291"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_146_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__292"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "33"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_146 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_146 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_146 = <created> ∧ o_146 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "34") (ifseqformula "1"))
                                          )
                                          (branch "f_146 = <created> ∧ o_146 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allRight" (formula "28") (inst "sk=f_145"))
                                    (rule "allRight" (formula "28") (inst "sk=o_145"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_145_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_145_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__289"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_145_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__290"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "32"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "33") (term "0,0"))
                                    (branch "CUT: o_145 = null TRUE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_145 = null FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "false_right" (formula "33"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_145 = <created> ∧ o_145 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "33") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "f_145 = <created> ∧ o_145 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "33") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allRight" (formula "29") (inst "sk=f_144"))
                                       (rule "allRight" (formula "29") (inst "sk=o_144"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_144_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_144_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__287"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_144_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__288"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "33"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_144 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_144 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_144 = <created> ∧ o_144 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "33") (term "0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "33") (ifseqformula "1"))
                                          )
                                          (branch "f_144 = <created> ∧ o_144 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "30") (term "1,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                       (rule "allRight" (formula "30") (inst "sk=f_143"))
                                       (rule "allRight" (formula "30") (inst "sk=o_143"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_143_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_143_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__285"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_143_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__286"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_143 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "CUT: o_143 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_143 = <created> ∧ o_143 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "35"))
                                          )
                                          (branch "f_143 = <created> ∧ o_143 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "cut_direct" (formula "20") (term "0,0,0"))
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allRight" (formula "27") (inst "sk=f_142"))
                              (rule "allRight" (formula "27") (inst "sk=o_142"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_142_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__283"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_142_1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__284"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_142_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "31"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "cut_direct" (formula "32") (term "0,0"))
                                 (branch "CUT: o_142 = null TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "closeTrue" (formula "31"))
                                 )
                                 (branch "CUT: o_142 = null FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_142 = <created> ∧ o_142 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEqRigid" (formula "31") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "30") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "31") (ifseqformula "1"))
                                    )
                                    (branch "f_142 = <created> ∧ o_142 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "32") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "cut_direct" (formula "33") (term "0,0"))
                                 (branch "CUT: o_142 = null TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "31") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "closeTrue" (formula "31"))
                                 )
                                 (branch "CUT: o_142 = null FALSE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "notRight" (formula "34"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_142 = <created> ∧ o_142 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch "f_142 = <created> ∧ o_142 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "33") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "28") (term "0,0,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "cut_direct" (formula "16") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allRight" (formula "28") (inst "sk=f_141"))
                                    (rule "allRight" (formula "28") (inst "sk=o_141"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_141_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_141_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__281"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_141_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__282"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "32"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "33") (term "0,0"))
                                    (branch "CUT: o_141 = null TRUE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_141 = null FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "false_right" (formula "33"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_141 = <created> ∧ o_141 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "32"))
                                       )
                                       (branch "f_141 = <created> ∧ o_141 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "33") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allRight" (formula "29") (inst "sk=f_140"))
                                       (rule "allRight" (formula "29") (inst "sk=o_140"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_140_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_140_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__279"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_140_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__280"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "33"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_140 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "closeTrue" (formula "32"))
                                       )
                                       (branch "CUT: o_140 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_140 = <created> ∧ o_140 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "34"))
                                          )
                                          (branch "f_140 = <created> ∧ o_140 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "20")))
                                       (rule "allRight" (formula "30") (inst "sk=f_139"))
                                       (rule "allRight" (formula "30") (inst "sk=o_139"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_139_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_139_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__277"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_139_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__278"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_139 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "CUT: o_139 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_139 = <created> ∧ o_139 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "35") (ifseqformula "1"))
                                          )
                                          (branch "f_139 = <created> ∧ o_139 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allRight" (formula "29") (inst "sk=f_138"))
                                    (rule "allRight" (formula "29") (inst "sk=o_138"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_138_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_138_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__275"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_138_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__276"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "33"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "34") (term "0,0"))
                                    (branch "CUT: o_138 = null TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "closeTrue" (formula "33"))
                                    )
                                    (branch "CUT: o_138 = null FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "notRight" (formula "35"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_138 = <created> ∧ o_138 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "f_138 = <created> ∧ o_138 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "34") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allRight" (formula "30") (inst "sk=f_137"))
                                       (rule "allRight" (formula "30") (inst "sk=o_137"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_137_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_137_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__273"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_137_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__274"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_137 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "CUT: o_137 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_137 = <created> ∧ o_137 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "35") (ifseqformula "1"))
                                          )
                                          (branch "f_137 = <created> ∧ o_137 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "31") (term "1,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "21")))
                                       (rule "allRight" (formula "31") (inst "sk=f_136"))
                                       (rule "allRight" (formula "31") (inst "sk=o_136"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_136_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_136_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__271"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_136_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__272"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "35"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_136 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "CUT: o_136 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_136 = <created> ∧ o_136 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_136 = <created> ∧ o_136 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "exc_10.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "cut_direct" (formula "11") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                           (rule "cut_direct" (formula "20") (term "0,0,0"))
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allRight" (formula "27") (inst "sk=f_135"))
                              (rule "allRight" (formula "27") (inst "sk=o_135"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_135_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__269"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_135_1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__270"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_135_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "31"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "cut_direct" (formula "32") (term "0,0"))
                                 (branch "CUT: o_135 = null TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "closeTrue" (formula "30"))
                                 )
                                 (branch "CUT: o_135 = null FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_135 = <created> ∧ o_135 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch "f_135 = <created> ∧ o_135 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "32") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "cut_direct" (formula "33") (term "0,0"))
                                 (branch "CUT: o_135 = null TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "CUT: o_135 = null FALSE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "notRight" (formula "34"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_135 = <created> ∧ o_135 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch "f_135 = <created> ∧ o_135 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "33") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "28") (term "0,0,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "cut_direct" (formula "16") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allRight" (formula "28") (inst "sk=f_134"))
                                    (rule "allRight" (formula "28") (inst "sk=o_134"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_134_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_134_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__267"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_134_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__268"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "32"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "33") (term "0,0"))
                                    (branch "CUT: o_134 = null TRUE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_134 = null FALSE"
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "false_right" (formula "33"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_134 = <created> ∧ o_134 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "33") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "33") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "f_134 = <created> ∧ o_134 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "33") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "allRight" (formula "29") (inst "sk=f_133"))
                                       (rule "allRight" (formula "29") (inst "sk=o_133"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_133_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_133_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__265"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_133_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__266"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "33"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_133 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_133 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_133 = <created> ∧ o_133 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "33") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "33") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "33"))
                                          )
                                          (branch "f_133 = <created> ∧ o_133 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "20")))
                                       (rule "allRight" (formula "30") (inst "sk=f_132"))
                                       (rule "allRight" (formula "30") (inst "sk=o_132"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_132_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_132_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__263"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_132_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__264"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_132 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_132 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_132 = <created> ∧ o_132 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "34") (ifseqformula "1"))
                                          )
                                          (branch "f_132 = <created> ∧ o_132 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "cut_direct" (formula "20") (term "0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allRight" (formula "29") (inst "sk=f_131"))
                                    (rule "allRight" (formula "29") (inst "sk=o_131"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_131_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__261"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_131_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__262"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_131_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "33"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "34") (term "0,0"))
                                    (branch "CUT: o_131 = null TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_131 = null FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "notRight" (formula "35"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_131 = <created> ∧ o_131 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "f_131 = <created> ∧ o_131 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "34") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allRight" (formula "30") (inst "sk=f_130"))
                                       (rule "allRight" (formula "30") (inst "sk=o_130"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_130_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_130_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__259"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_130_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__260"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_130 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_130 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_130 = <created> ∧ o_130 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "34") (ifseqformula "1"))
                                          )
                                          (branch "f_130 = <created> ∧ o_130 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "31") (term "1,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "21")))
                                       (rule "allRight" (formula "31") (inst "sk=f_129"))
                                       (rule "allRight" (formula "31") (inst "sk=o_129"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_129_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__257"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_129_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__258"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_129_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "35"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_129 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "CUT: o_129 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_129 = <created> ∧ o_129 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "35"))
                                          )
                                          (branch "f_129 = <created> ∧ o_129 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "cut_direct" (formula "20") (term "0,0,0"))
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "allRight" (formula "28") (inst "sk=f_128"))
                              (rule "allRight" (formula "28") (inst "sk=o_128"))
                              (rule "orRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_128_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "32"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__255"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_128_1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__256"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_128_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_and" (formula "32"))
                              (rule "commute_and" (formula "3") (term "0,0"))
                              (rule "commute_and" (formula "2") (term "0,0"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "cut_direct" (formula "33") (term "0,0"))
                                 (branch "CUT: o_128 = null TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_128 = null FALSE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "notRight" (formula "34"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_128 = <created> ∧ o_128 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch "f_128 = <created> ∧ o_128 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "33") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "cut_direct" (formula "34") (term "0,0"))
                                 (branch "CUT: o_128 = null TRUE"
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_128 = null FALSE"
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "notRight" (formula "35"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "false_right" (formula "34"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_128 = <created> ∧ o_128 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "applyEq" (formula "33") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "33") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "33"))
                                    )
                                    (branch "f_128 = <created> ∧ o_128 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "34") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_10) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "29") (term "0,0,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "cut_direct" (formula "16") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "cut_direct" (formula "20") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allRight" (formula "29") (inst "sk=f_127"))
                                    (rule "allRight" (formula "29") (inst "sk=o_127"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_127_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_127_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__253"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_127_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__254"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "33"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "34") (term "0,0"))
                                    (branch "CUT: o_127 = null TRUE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_127 = null FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "notRight" (formula "35"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_127 = <created> ∧ o_127 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "32") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "33") (ifseqformula "1"))
                                       )
                                       (branch "f_127 = <created> ∧ o_127 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "34") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "allRight" (formula "30") (inst "sk=f_126"))
                                       (rule "allRight" (formula "30") (inst "sk=o_126"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_126_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_126_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__251"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_126_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__252"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "34"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_126 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_126 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_126 = <created> ∧ o_126 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "34") (ifseqformula "1"))
                                          )
                                          (branch "f_126 = <created> ∧ o_126 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "20")))
                                       (rule "allRight" (formula "31") (inst "sk=f_125"))
                                       (rule "allRight" (formula "31") (inst "sk=o_125"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_125_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__249"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_125_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__250"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_125_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "35"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_125 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_125 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_125 = <created> ∧ o_125 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_125 = <created> ∧ o_125 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "cut_direct" (formula "20") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allRight" (formula "30") (inst "sk=f_124"))
                                    (rule "allRight" (formula "30") (inst "sk=o_124"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_124_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_124_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__247"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_124_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__248"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "34"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "35") (term "0,0"))
                                    (branch "CUT: o_124 = null TRUE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_124 = null FALSE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "notRight" (formula "36"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_124 = <created> ∧ o_124 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "f_124 = <created> ∧ o_124 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "35") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_10) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "31") (term "1,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "allRight" (formula "31") (inst "sk=f_123"))
                                       (rule "allRight" (formula "31") (inst "sk=o_123"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_123_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__245"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_123_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__246"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_123_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "35"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_123 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: o_123 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_123 = <created> ∧ o_123 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "36") (term "0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "36") (ifseqformula "1"))
                                          )
                                          (branch "f_123 = <created> ∧ o_123 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_10) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                       (rule "allRight" (formula "32") (inst "sk=f_122"))
                                       (rule "allRight" (formula "32") (inst "sk=o_122"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_122_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__243"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_122_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__244"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_122_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_122 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "CUT: o_122 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_122 = <created> ∧ o_122 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_122 = <created> ∧ o_122 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_10 instanceof java.lang.Throwable))"
                     (rule "false_right" (formula "28"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")))
                     (rule "instanceof_static_type" (formula "27") (term "0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "closeTrue" (formula "27"))
                  )
               )
               (branch "if exc_10 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
         )
         (branch "Pre (sendTo)"
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "wellFormedCreate" (formula "19") (term "0,0,1"))
            (rule "wellFormedAnonEQ" (formula "19") (term "0,0,1") (ifseqformula "12"))
            (rule "eqSymm" (formula "19") (term "0,1,1"))
            (rule "eqSymm" (formula "19") (term "0,0"))
            (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")) (ifInst ""  (formula "11")) (ifInst ""  (formula "18")))
            (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=java_lang_Object_created__240"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "20") (term "0,1") (inst "selectSK=java_lang_Object_created__241"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "15"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "orRight" (formula "15"))
            (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "14"))
         )
         (branch "Null reference (var_10 = null)"
            (builtin "One Step Simplification" (formula "19"))
            (rule "notRight" (formula "19"))
            (rule "cut_direct" (formula "15") (term "0"))
            (branch "CUT: result_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
               (rule "cut_direct" (formula "12") (term "0"))
               (branch "CUT: self_0.votesForCandidates = null TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "disjointDefinition" (formula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "eqSymm" (formula "23"))
                  (rule "disjointDefinition" (formula "11"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "eqSymm" (formula "22"))
                  (rule "disjointDefinition" (formula "10"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "eqSymm" (formula "21"))
                  (rule "disjointDefinition" (formula "9"))
                  (rule "disjointDefinition" (formula "8"))
                  (rule "disjointDefinition" (formula "7"))
                  (rule "sortsDisjointModuloNull" (formula "23"))
                  (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "sortsDisjointModuloNull" (formula "22"))
                  (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "15")))
                  (rule "false_right" (formula "22"))
                  (rule "sortsDisjointModuloNull" (formula "21"))
                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
                  (rule "false_right" (formula "21"))
                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "15"))
                  (rule "commuteIntersection" (formula "8") (term "0"))
                  (rule "commuteIntersection" (formula "7") (term "0"))
                  (rule "commuteIntersection" (formula "9") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "11"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "closeFalse" (formula "11"))
               )
               (branch "CUT: self_0.votesForCandidates = null FALSE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "close" (formula "18") (ifseqformula "1"))
               )
            )
            (branch "CUT: result_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "15"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
               (rule "cut_direct" (formula "12") (term "0"))
               (branch "CUT: self_0.votesForCandidates = null TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "7"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                  (rule "arrayLengthNotNegative" (formula "7") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "CUT: self_0.votesForCandidates = null FALSE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "7"))
                  (rule "inEqSimp_commuteLeq" (formula "7"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
      )
      (branch "if x_73 false"
         (builtin "One Step Simplification" (formula "19"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
      (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1"))
      (rule "andLeft" (formula "14"))
      (rule "impRight" (formula "17"))
      (rule "andLeft" (formula "15"))
      (rule "eqSymm" (formula "19") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "inEqSimp_commuteLeq" (formula "16"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_6_2"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "rtrn_5"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "returnExpr_5"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_8"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc_5"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "compound_less_than_comparison_2" (formula "17") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_57"))
      (rule "assignment" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_58"))
      (rule "assignment_read_attribute_this" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "less_than_comparison_simple" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_59"))
      (rule "emptyModality" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "notRight" (formula "17"))
      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0"))
      (rule "qeq_literals" (formula "16") (term "0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "inequality_comparison_simple" (formula "21") (term "1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "replace_known_right" (formula "21") (term "0,0,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_60"))
      (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_62") (inst "#v0=x_61"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_61"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_62"))
      (rule "assignment_read_attribute_this" (formula "19"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "less_than_comparison_simple" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
      (rule "replace_known_left" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "ifSplit" (formula "22"))
      (branch "if x_59 true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "1"))
         (rule "methodCallUnfoldTarget" (formula "22") (term "1") (inst "#v0=s"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "s_1"))
         (rule "assignment_read_attribute_this" (formula "22"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallUnfoldArguments" (formula "22") (term "1"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_5"))
         (rule "assignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_6"))
         (rule "assignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_7"))
         (rule "assignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_8"))
         (rule "stringAssignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "eqSymm" (formula "22"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "var_9"))
         (rule "assignment" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_sendTo_0,exc_9,heapAfter_sendTo_0,anon_heap_sendTo_0") (contract "de.uni.trier.infsec.functionalities.amt.Sender[de.uni.trier.infsec.functionalities.amt.Sender::sendTo([B,int,java.lang.String,int)].JML operation contract.0"))
         (branch "Post (sendTo)"
            (builtin "One Step Simplification" (formula "19"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,0,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,0,0,0,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,0,0,1,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_4"))
            (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "19"))
            (rule "simplifySelectOfCreate" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_5"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "replaceKnownSelect_taclet2_0" (formula "21") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "21") (term "2,0"))
            (rule "elementOfUnion" (formula "21") (term "0,0"))
            (rule "elementOfSingleton" (formula "21") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "commuteUnion" (formula "19") (term "1,0"))
            (rule "commuteUnion" (formula "22") (term "1"))
            (rule "methodCallEmpty" (formula "28") (term "1"))
            (rule "tryEmpty" (formula "28") (term "1"))
            (rule "emptyModality" (formula "28") (term "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "allRight" (formula "28") (inst "sk=f_121"))
            (rule "allRight" (formula "28") (inst "sk=o_121"))
            (rule "orRight" (formula "28"))
            (rule "orRight" (formula "28"))
            (rule "orRight" (formula "28"))
            (rule "eqSymm" (formula "31"))
            (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_121_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "32"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_121_1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__238"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,1,0,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_121_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__239"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "commute_and" (formula "32"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "ifSplit" (formula "27"))
            (branch "if x_60 true"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "5"))
               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1,0") (ifseqformula "5"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,0,1,0") (ifseqformula "5"))
               (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_70"))
               (rule "compound_assignment_2" (formula "30") (term "1") (inst "#v=x_71"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_71"))
               (rule "eval_order_array_access4" (formula "30") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_arr_8"))
               (rule "assignment_read_attribute_this" (formula "30"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "assignment_array2" (formula "30"))
               (branch "Normal Execution (x_arr_8 != null)"
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "compound_assignment_1_new" (formula "30") (term "1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "ifSplit" (formula "30"))
                  (branch "if x_70 true"
                     (builtin "One Step Simplification" (formula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "blockBreakNoLabel" (formula "31") (term "1"))
                     (rule "blockBreakLabel" (formula "31") (term "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "tryEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "emptyModality" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallReturn" (formula "31") (term "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "emptyModality" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
                  (branch "if x_70 false"
                     (builtin "One Step Simplification" (formula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "blockEmpty" (formula "31") (term "1"))
                     (rule "preincrement" (formula "31") (term "1"))
                     (rule "compound_int_cast_expression" (formula "31") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "31") (term "1"))
                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_72"))
                     (rule "remove_parentheses_right" (formula "31") (term "1"))
                     (rule "assignmentAdditionInt" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "translateJavaAddInt" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
                     (rule "unusedLabel" (formula "31") (term "1"))
                     (rule "widening_identity_cast_5" (formula "31") (term "1"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "tryEmpty" (formula "31") (term "1"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (rule "emptyModality" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "5")) (ifInst ""  (formula "10")))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,0,0,1"))
                     (rule "precOfInt" (formula "31") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1,1"))
                     (rule "add_literals" (formula "31") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "31") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "31") (term "0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "31") (term "0,1"))
                     (rule "times_zero_2" (formula "31") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1,1"))
                     (rule "add_literals" (formula "31") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "31") (term "0,1,1"))
                     (rule "leq_literals" (formula "31") (term "1,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                     (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0"))
                     (rule "mul_literals" (formula "31") (term "1,0"))
                     (rule "inEqSimp_subsumption1" (formula "31") (term "0") (ifseqformula "22"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "allRight" (formula "31") (inst "sk=j_10"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "ifthenelse_split" (formula "5") (term "0"))
                     (branch "o_121 = strPool(\"localhost\") TRUE"
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqRigid" (formula "4") (term "1,2,0") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "38") (term "0,0,0") (ifseqformula "5"))
                        (rule "eqSymm" (formula "38") (term "0,0"))
                        (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "notRight" (formula "38"))
                        (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "38") (term "0,1") (ifseqformula "6"))
                        (rule "eqSymm" (formula "38") (term "1"))
                        (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "false_right" (formula "38"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "6"))
                        (rule "ifthenelse_split" (formula "30") (term "0"))
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "cut_direct" (formula "17") (term "0"))
                           (branch "CUT: self_0.votesForCandidates = null TRUE"
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "17"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "39") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "39") (term "1") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "40"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "41") (ifseqformula "5"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.votesForCandidates = null FALSE"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "39") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "40"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "41") (ifseqformula "5"))
                                    )
                                 )
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "40"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "41") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "40") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "41"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "42") (ifseqformula "5"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "hideAuxiliaryEq" (formula "30"))
                           (rule "cut_direct" (formula "17") (term "0"))
                           (branch "CUT: self_0.votesForCandidates = null TRUE"
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "17"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "36") (term "1") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "38") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "39") (ifseqformula "5"))
                                    )
                                 )
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "39") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.votesForCandidates = null FALSE"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "39") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "cut_direct" (formula "22") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "39"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "40") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_121 = <created> TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "5"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "40"))
                                    )
                                    (branch "f_121 = <created> FALSE"
                                       (rule "close" (formula "41") (ifseqformula "5"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "o_121 = strPool(\"localhost\") FALSE"
                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
               (branch "Null Reference (x_arr_8 = null)"
                  (builtin "One Step Simplification" (formula "31"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "31"))
                  (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "cut_direct" (formula "34") (term "1"))
                  (branch "CUT: o_121 = null TRUE"
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "replace_known_left" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "CUT: o_121 = null FALSE"
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "notRight" (formula "35"))
                     (rule "ifthenelse_negated" (formula "5") (term "0"))
                     (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "26") (term "0"))
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "4"))
                              (rule "eqSymm" (formula "34"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                              (rule "closeTrue" (formula "34"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "35") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                              (rule "closeTrue" (formula "36"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "36") (ifseqformula "3"))
                           )
                        )
                     )
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                              (rule "closeTrue" (formula "34"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "34") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "35") (ifseqformula "1"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "35") (ifseqformula "3"))
                           )
                        )
                     )
                  )
               )
               (branch "Index Out of Bounds (x_arr_8 != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "31"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "31"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "22"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "cut_direct" (formula "36") (term "1"))
                  (branch "CUT: o_121 = null TRUE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "replace_known_left" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "false_right" (formula "37"))
                     (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "4") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "CUT: o_121 = null FALSE"
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "false_right" (formula "37"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "notRight" (formula "37"))
                     (rule "ifthenelse_negated" (formula "5") (term "0"))
                     (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "27") (term "0"))
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "35") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                              (rule "eqSymm" (formula "36"))
                              (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "4"))
                              (rule "close" (formula "36") (ifseqformula "1"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "37") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "36") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                              (rule "eqSymm" (formula "37"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                              (rule "closeTrue" (formula "37"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "38") (ifseqformula "3"))
                           )
                        )
                     )
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                              (rule "closeTrue" (formula "36"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "36") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "3"))
                              (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                              (rule "closeTrue" (formula "37"))
                           )
                           (branch "f_121 = <created> ∧ o_121 = strPool(\"localhost\") FALSE"
                              (rule "close" (formula "37") (ifseqformula "3"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "if x_60 false"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (sendTo)"
            (builtin "One Step Simplification" (formula "19"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0") (ifseqformula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "20"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_3"))
            (rule "simplifySelectOfCreate" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=java_lang_Object_created__127"))
            (rule "simplifySelectOfCreate" (formula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "castDel" (formula "20") (term "1,0"))
            (rule "eqSymm" (formula "20") (term "0,1,0,0"))
            (rule "eqSymm" (formula "20") (term "0,0,0"))
            (rule "replace_known_right" (formula "20") (term "0,1,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
            (rule "eqSymm" (formula "20") (term "1,0,0"))
            (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
            (rule "ifthenelse_negated" (formula "20") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commuteUnion" (formula "19") (term "1,0"))
            (rule "methodCallThrow" (formula "29") (term "1"))
            (rule "tryCatchThrow" (formula "29") (term "1"))
            (rule "ifSplit" (formula "25"))
            (branch "if x_60 true"
               (builtin "One Step Simplification" (formula "26"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
               (rule "ifElseUnfold" (formula "31") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_66"))
               (rule "equality_comparison_simple" (formula "31") (term "1"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_67"))
               (rule "compound_assignment_2" (formula "27") (term "1") (inst "#v=x_68"))
               (rule "variableDeclarationAssign" (formula "27") (term "1"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_68"))
               (rule "eval_order_array_access4" (formula "27") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "27") (term "1"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr_7"))
               (rule "assignment_read_attribute_this" (formula "27"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "assignment_array2" (formula "27"))
               (branch "Normal Execution (x_arr_7 != null)"
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "compound_assignment_1_new" (formula "27") (term "1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,1,0") (ifseqformula "2"))
                  (rule "ifElseSplit" (formula "32"))
                  (branch "if x_66 true"
                     (builtin "One Step Simplification" (formula "33"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_66 false"
                     (builtin "One Step Simplification" (formula "33"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifSplit" (formula "28"))
                     (branch "if x_67 true"
                        (builtin "One Step Simplification" (formula "29"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "assignment" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "blockBreakNoLabel" (formula "29") (term "1"))
                        (rule "blockBreakLabel" (formula "29") (term "1"))
                        (rule "blockEmpty" (formula "29") (term "1"))
                        (rule "tryEmpty" (formula "29") (term "1"))
                        (rule "methodCallEmpty" (formula "29") (term "1"))
                        (rule "emptyModality" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "methodCallReturn" (formula "29") (term "1"))
                        (rule "assignment" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "methodCallEmpty" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "emptyModality" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "closeTrue" (formula "29"))
                     )
                     (branch "if x_67 false"
                        (builtin "One Step Simplification" (formula "29"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "29") (term "1"))
                        (rule "unusedLabel" (formula "29") (term "1"))
                        (rule "preincrement" (formula "29") (term "1"))
                        (rule "compound_int_cast_expression" (formula "29") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "29") (term "1"))
                        (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_69"))
                        (rule "remove_parentheses_right" (formula "29") (term "1"))
                        (rule "assignmentAdditionInt" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "29") (term "1"))
                        (rule "assignment" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "tryEmpty" (formula "29") (term "1"))
                        (rule "methodCallEmpty" (formula "29") (term "1"))
                        (rule "emptyModality" (formula "29") (term "1"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,0,1"))
                        (rule "mul_literals" (formula "29") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "29") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,1,1"))
                        (rule "add_literals" (formula "29") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "29") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "29") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1"))
                        (rule "times_zero_2" (formula "29") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "29") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,1"))
                        (rule "add_literals" (formula "29") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "29") (term "0,1,1"))
                        (rule "leq_literals" (formula "29") (term "1,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                        (rule "mul_literals" (formula "29") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                        (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0"))
                        (rule "mul_literals" (formula "29") (term "1,0"))
                        (rule "inEqSimp_subsumption1" (formula "29") (term "0") (ifseqformula "19"))
                        (rule "leq_literals" (formula "29") (term "0,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "allRight" (formula "29") (inst "sk=j_9"))
                        (rule "orRight" (formula "29"))
                        (rule "orRight" (formula "29"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "inEqSimp_leqRight" (formula "30"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "ifElseSplit" (formula "35"))
                        (branch "if exc_9 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                           (rule "instanceof_static_type" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "35") (term "1") (newnames "e_8"))
                           (rule "reference_type_cast" (formula "35"))
                           (branch "Normal Execution (exc_9 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "assignment" (formula "35") (term "1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "emptyModality" (formula "35") (term "1"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "29")))
                              (rule "eqSymm" (formula "35") (term "1,0,0,1"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "commute_or_2" (formula "35") (term "0,0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "commute_or_2" (formula "35") (term "0"))
                              (rule "commute_or" (formula "35") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0,0"))
                              (rule "commute_or_2" (formula "35") (term "0,0"))
                              (rule "allLeft" (formula "23") (inst "t=j_9"))
                              (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "2"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,0"))
                              (rule "times_zero_1" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
                              (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "21"))
                              (rule "close" (formula "30") (ifseqformula "1"))
                           )
                           (branch "ClassCastException (!(exc_9 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "36"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "29")))
                              (rule "false_right" (formula "36"))
                              (rule "instanceof_static_type" (formula "35") (term "0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "closeTrue" (formula "35"))
                           )
                        )
                        (branch "if exc_9 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                           (rule "notLeft" (formula "1"))
                           (rule "instanceof_static_type" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "closeTrue" (formula "29"))
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_7 = null)"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "false_right" (formula "28"))
                  (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "ifElseSplit" (formula "31"))
                  (branch "if x_66 true"
                     (builtin "One Step Simplification" (formula "32"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_66 false"
                     (builtin "One Step Simplification" (formula "32"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "31"))
                     (branch "if exc_9 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                        (rule "instanceof_static_type" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "31") (term "1") (newnames "e_7"))
                        (rule "reference_type_cast" (formula "31"))
                        (branch "Normal Execution (exc_9 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "assignment" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "emptyModality" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                           (rule "eqSymm" (formula "31") (term "1,0,0,1"))
                           (rule "commute_or_2" (formula "31") (term "0"))
                           (rule "commute_or_2" (formula "31") (term "0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0"))
                           (rule "commute_or_2" (formula "31") (term "0"))
                           (rule "commute_or" (formula "31") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0"))
                           (rule "ifthenelse_split" (formula "23") (term "0"))
                           (branch "exc_9.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "cut_direct" (formula "12") (term "0"))
                              (branch "CUT: self_0.votesForCandidates = null TRUE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allRight" (formula "30") (inst "sk=f_120"))
                                    (rule "allRight" (formula "30") (inst "sk=o_120"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_120_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_120_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__236"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_120_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__237"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "34"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch "CUT: o_120 = null TRUE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_120 = null FALSE"
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_120 = <created> ∧ o_120 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "34"))
                                          )
                                          (branch "f_120 = <created> ∧ o_120 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "35") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_120 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "CUT: o_120 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_120 = <created> ∧ o_120 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "35") (ifseqformula "1"))
                                          )
                                          (branch "f_120 = <created> ∧ o_120 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "31") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "cut_direct" (formula "17") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "allRight" (formula "31") (inst "sk=f_119"))
                                          (rule "allRight" (formula "31") (inst "sk=o_119"))
                                          (rule "orRight" (formula "31"))
                                          (rule "orRight" (formula "31"))
                                          (rule "orRight" (formula "31"))
                                          (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_119_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__234"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_119_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__235"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_119_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "35"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "36") (term "0,0"))
                                          (branch "CUT: o_119 = null TRUE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_119 = null FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "notRight" (formula "37"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_119 = <created> ∧ o_119 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "35"))
                                             )
                                             (branch "f_119 = <created> ∧ o_119 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "36") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "32") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "cut_direct" (formula "24") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "allRight" (formula "32") (inst "sk=f_118"))
                                             (rule "allRight" (formula "32") (inst "sk=o_118"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_118_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__232"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_118_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__233"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_118_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "36"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "37") (term "0,0"))
                                             (branch "CUT: o_118 = null TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_118 = null FALSE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "notRight" (formula "38"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "false_right" (formula "37"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_118 = <created> ∧ o_118 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "36"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "36") (ifseqformula "1"))
                                                )
                                                (branch "f_118 = <created> ∧ o_118 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "37") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "25")))
                                             (rule "allRight" (formula "33") (inst "sk=f_117"))
                                             (rule "allRight" (formula "33") (inst "sk=o_117"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_117_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_117_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__230"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_117_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__231"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "37"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: o_117 = null TRUE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_117 = null FALSE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "notRight" (formula "39"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_117 = <created> ∧ o_117 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_117 = <created> ∧ o_117 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "38") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allRight" (formula "32") (inst "sk=f_116"))
                                          (rule "allRight" (formula "32") (inst "sk=o_116"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_116_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__228"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_116_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__229"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_116_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "36"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "37") (term "0,0"))
                                          (branch "CUT: o_116 = null TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_116 = null FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notRight" (formula "38"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_116 = <created> ∧ o_116 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "35") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "36") (term "0") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "36") (ifseqformula "1"))
                                             )
                                             (branch "f_116 = <created> ∧ o_116 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "37") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "cut_direct" (formula "24") (term "1"))
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "allRight" (formula "33") (inst "sk=f_115"))
                                             (rule "allRight" (formula "33") (inst "sk=o_115"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_115_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_115_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__226"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_115_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__227"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "37"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: o_115 = null TRUE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_115 = null FALSE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "notRight" (formula "39"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_115 = <created> ∧ o_115 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "37"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "37") (ifseqformula "1"))
                                                )
                                                (branch "f_115 = <created> ∧ o_115 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "38") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")))
                                             (rule "allRight" (formula "34") (inst "sk=f_114"))
                                             (rule "allRight" (formula "34") (inst "sk=o_114"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_114_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__224"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_114_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__225"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_114_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "38"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_114 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "CUT: o_114 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_114 = <created> ∧ o_114 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "39"))
                                                )
                                                (branch "f_114 = <created> ∧ o_114 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self_0.votesForCandidates = null FALSE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "24") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allRight" (formula "31") (inst "sk=f_113"))
                                    (rule "allRight" (formula "31") (inst "sk=o_113"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_113_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__222"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_113_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__223"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_113_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_113 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_113 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_113 = <created> ∧ o_113 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "35"))
                                          )
                                          (branch "f_113 = <created> ∧ o_113 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_113 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_113 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_113 = <created> ∧ o_113 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_113 = <created> ∧ o_113 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "32") (term "1,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "cut_direct" (formula "17") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allRight" (formula "32") (inst "sk=f_112"))
                                          (rule "allRight" (formula "32") (inst "sk=o_112"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_112_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__220"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_112_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__221"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_112_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "36"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "37") (term "0,0"))
                                          (branch "CUT: o_112 = null TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_112 = null FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notRight" (formula "38"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_112 = <created> ∧ o_112 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "35") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "36"))
                                             )
                                             (branch "f_112 = <created> ∧ o_112 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "37") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "33") (inst "sk=f_111"))
                                          (rule "allRight" (formula "33") (inst "sk=o_111"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_111_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_111_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__218"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_111_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__219"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: o_111 = null TRUE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_111 = null FALSE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "notRight" (formula "39"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_111 = <created> ∧ o_111 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_111 = <created> ∧ o_111 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "38") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_111 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_111 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_111 = <created> ∧ o_111 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_111 = <created> ∧ o_111 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_110"))
                                          (rule "allRight" (formula "33") (inst "sk=o_110"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_110_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_110_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__216"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_110_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__217"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_110 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_110 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_110 = <created> ∧ o_110 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "f_110 = <created> ∧ o_110 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "34") (inst "sk=f_109"))
                                          (rule "allRight" (formula "34") (inst "sk=o_109"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_109_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_109_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__214"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_109_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__215"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_109 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_109 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_109 = <created> ∧ o_109 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "38") (ifseqformula "1"))
                                                )
                                                (branch "f_109 = <created> ∧ o_109 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_109 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_109 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_109 = <created> ∧ o_109 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "39"))
                                                   (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "39") (ifseqformula "1"))
                                                )
                                                (branch "f_109 = <created> ∧ o_109 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "exc_9.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "cut_direct" (formula "12") (term "0"))
                              (branch "CUT: self_0.votesForCandidates = null TRUE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                                 (rule "cut_direct" (formula "24") (term "1,0"))
                                 (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "31") (term "1,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allRight" (formula "31") (inst "sk=f_108"))
                                    (rule "allRight" (formula "31") (inst "sk=o_108"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_108_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_108_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__212"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_108_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__213"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_108 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_108 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_108 = <created> ∧ o_108 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_108 = <created> ∧ o_108 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_108 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "CUT: o_108 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_108 = <created> ∧ o_108 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_108 = <created> ∧ o_108 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "cut_direct" (formula "17") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allRight" (formula "32") (inst "sk=f_107"))
                                          (rule "allRight" (formula "32") (inst "sk=o_107"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_107_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_107_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__210"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_107_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__211"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "36"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "37") (term "0,0"))
                                          (branch "CUT: o_107 = null TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "35"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "closeTrue" (formula "35"))
                                          )
                                          (branch "CUT: o_107 = null FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notRight" (formula "38"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_107 = <created> ∧ o_107 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "36"))
                                             )
                                             (branch "f_107 = <created> ∧ o_107 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "37") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "33") (inst "sk=f_106"))
                                          (rule "allRight" (formula "33") (inst "sk=o_106"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_106_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__208"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_106_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__209"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_106_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "cut_direct" (formula "38") (term "0,0"))
                                             (branch "CUT: o_106 = null TRUE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_106 = null FALSE"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "notRight" (formula "39"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_106 = <created> ∧ o_106 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "37"))
                                                   (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                                (branch "f_106 = <created> ∧ o_106 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "38") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_106 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "CUT: o_106 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_106 = <created> ∧ o_106 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "39"))
                                                )
                                                (branch "f_106 = <created> ∧ o_106 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_105"))
                                          (rule "allRight" (formula "33") (inst "sk=o_105"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_105_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__206"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_105_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__207"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_105_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_105 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_105 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_105 = <created> ∧ o_105 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "37") (ifseqformula "1"))
                                             )
                                             (branch "f_105 = <created> ∧ o_105 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "34") (inst "sk=f_104"))
                                          (rule "allRight" (formula "34") (inst "sk=o_104"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_104_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_104_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__204"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_104_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__205"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_104 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "CUT: o_104 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_104 = <created> ∧ o_104 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_104 = <created> ∧ o_104 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_104 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_104 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_104 = <created> ∧ o_104 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_104 = <created> ∧ o_104 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self_0.votesForCandidates = null FALSE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "24") (term "1,0"))
                                 (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allRight" (formula "32") (inst "sk=f_103"))
                                    (rule "allRight" (formula "32") (inst "sk=o_103"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_103_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__202"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_103_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__203"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_103_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "20") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_103 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: o_103 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_103 = <created> ∧ o_103 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_103 = <created> ∧ o_103 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_103 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_103 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_103 = <created> ∧ o_103 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_103 = <created> ∧ o_103 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "17") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "cut_direct" (formula "24") (term "1,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_102"))
                                          (rule "allRight" (formula "33") (inst "sk=o_102"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_102_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_102_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__200"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_102_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__201"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_102 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_102 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_102 = <created> ∧ o_102 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "f_102 = <created> ∧ o_102 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "cut_direct" (formula "24") (term "1"))
                                          (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "allRight" (formula "34") (inst "sk=f_101"))
                                             (rule "allRight" (formula "34") (inst "sk=o_101"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_101_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_101_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__198"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_101_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__199"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "38"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_101 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_101 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_101 = <created> ∧ o_101 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_101 = <created> ∧ o_101 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                                             (rule "allRight" (formula "35") (inst "sk=f_100"))
                                             (rule "allRight" (formula "35") (inst "sk=o_100"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_100_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_100_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__196"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_100_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__197"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_100 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_100 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_100 = <created> ∧ o_100 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_100 = <created> ∧ o_100 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "cut_direct" (formula "24") (term "1,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_99"))
                                          (rule "allRight" (formula "34") (inst "sk=o_99"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_99_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__194"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_99_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__195"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_99_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_99 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "CUT: o_99 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_99 = <created> ∧ o_99 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                             (branch "f_99 = <created> ∧ o_99 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "35") (term "1,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "24") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "allRight" (formula "35") (inst "sk=f_98"))
                                             (rule "allRight" (formula "35") (inst "sk=o_98"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_98_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__192"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_98_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__193"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_98_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_98 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_98 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_98 = <created> ∧ o_98 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_98 = <created> ∧ o_98 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "24")))
                                             (rule "allRight" (formula "36") (inst "sk=f_97"))
                                             (rule "allRight" (formula "36") (inst "sk=o_97"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_97_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__190"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_97_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__191"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_97_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_97 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_97 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_97 = <created> ∧ o_97 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_97 = <created> ∧ o_97 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(exc_9 instanceof java.lang.Throwable))"
                           (rule "false_right" (formula "32"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                           (rule "instanceof_static_type" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "closeTrue" (formula "31"))
                        )
                     )
                     (branch "if exc_9 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                        (rule "notLeft" (formula "1"))
                        (rule "instanceof_static_type" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "closeTrue" (formula "26"))
                     )
                  )
               )
               (branch "Index Out of Bounds (x_arr_7 != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "28"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "28"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifElseSplit" (formula "33"))
                  (branch "if x_66 true"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_66 false"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "33"))
                     (branch "if exc_9 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "instanceof_static_type" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "33") (term "1") (newnames "e_6"))
                        (rule "reference_type_cast" (formula "33"))
                        (branch "Normal Execution (exc_9 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "assignment" (formula "33") (term "1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "emptyModality" (formula "33") (term "1"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
                           (rule "eqSymm" (formula "33") (term "1,0,0,1"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "commute_or_2" (formula "33") (term "0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "commute_or" (formula "33") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0"))
                           (rule "ifthenelse_split" (formula "24") (term "0"))
                           (branch "exc_9.<created> = TRUE TRUE"
                              (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "cut_direct" (formula "12") (term "0"))
                              (branch "CUT: self_0.votesForCandidates = null TRUE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                                 (rule "cut_direct" (formula "17") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=f_96"))
                                       (rule "allRight" (formula "32") (inst "sk=o_96"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_96_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__188"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_96_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__189"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_96_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_96 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "CUT: o_96 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_96 = <created> ∧ o_96 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_96 = <created> ∧ o_96 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "25") (term "0,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_95"))
                                          (rule "allRight" (formula "33") (inst "sk=o_95"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_95_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__186"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_95_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__187"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_95_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_95 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_95 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_95 = <created> ∧ o_95 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "f_95 = <created> ∧ o_95 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "cut_direct" (formula "25") (term "1"))
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "allRight" (formula "34") (inst "sk=f_94"))
                                             (rule "allRight" (formula "34") (inst "sk=o_94"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_94_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_94_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__184"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_94_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__185"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "38"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "39") (term "0,0"))
                                             (branch "CUT: o_94 = null TRUE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_94 = null FALSE"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "notRight" (formula "40"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_94 = <created> ∧ o_94 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "38"))
                                                )
                                                (branch "f_94 = <created> ∧ o_94 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "39") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "26")))
                                             (rule "allRight" (formula "35") (inst "sk=f_93"))
                                             (rule "allRight" (formula "35") (inst "sk=o_93"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_93_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_93_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__182"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_93_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__183"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_93 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "CUT: o_93 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_93 = <created> ∧ o_93 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_93 = <created> ∧ o_93 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_92"))
                                       (rule "allRight" (formula "33") (inst "sk=o_92"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_92_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__180"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_92_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__181"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_92_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_92 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "CUT: o_92 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_92 = <created> ∧ o_92 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_92 = <created> ∧ o_92 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "25") (term "1,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_91"))
                                          (rule "allRight" (formula "34") (inst "sk=o_91"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_91_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_91_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__178"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_91_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__179"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_91 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_91 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_91 = <created> ∧ o_91 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_91 = <created> ∧ o_91 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "35") (term "1,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "25") (term "1"))
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "allRight" (formula "35") (inst "sk=f_90"))
                                             (rule "allRight" (formula "35") (inst "sk=o_90"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_90_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_90_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__176"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_90_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__177"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_90 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_90 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_90 = <created> ∧ o_90 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_90 = <created> ∧ o_90 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
                                             (rule "allRight" (formula "36") (inst "sk=f_89"))
                                             (rule "allRight" (formula "36") (inst "sk=o_89"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_89_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_89_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__174"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_89_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__175"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_89 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_89 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_89 = <created> ∧ o_89 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "39") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_89 = <created> ∧ o_89 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self_0.votesForCandidates = null FALSE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "17") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_88"))
                                       (rule "allRight" (formula "33") (inst "sk=o_88"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_88_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_88_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__172"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_88_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__173"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_88 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_88 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_88 = <created> ∧ o_88 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_88 = <created> ∧ o_88 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "25") (term "1,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_87"))
                                          (rule "allRight" (formula "34") (inst "sk=o_87"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_87_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_87_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__170"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_87_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__171"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_87 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_87 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_87 = <created> ∧ o_87 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_87 = <created> ∧ o_87 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "35") (term "1,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "allRight" (formula "35") (inst "sk=f_86"))
                                             (rule "allRight" (formula "35") (inst "sk=o_86"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_86_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__168"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_86_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__169"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_86_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_86 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_86 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_86 = <created> ∧ o_86 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "39"))
                                                   (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "39"))
                                                )
                                                (branch "f_86 = <created> ∧ o_86 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                                             (rule "allRight" (formula "36") (inst "sk=f_85"))
                                             (rule "allRight" (formula "36") (inst "sk=o_85"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_85_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__166"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_85_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__167"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_85_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_85 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "CUT: o_85 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_85 = <created> ∧ o_85 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_85 = <created> ∧ o_85 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_84"))
                                       (rule "allRight" (formula "34") (inst "sk=o_84"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_84_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__164"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_84_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__165"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_84_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_84 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_84 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_84 = <created> ∧ o_84 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_84 = <created> ∧ o_84 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "25") (term "1"))
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_83"))
                                          (rule "allRight" (formula "35") (inst "sk=o_83"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_83_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_83_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__162"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_83_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__163"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_83 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_83 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_83 = <created> ∧ o_83 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_83 = <created> ∧ o_83 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
                                          (rule "allRight" (formula "36") (inst "sk=f_82"))
                                          (rule "allRight" (formula "36") (inst "sk=o_82"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_82_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_82_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__160"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_82_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__161"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "28") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_82 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_82 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_82 = <created> ∧ o_82 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "41") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "39") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "40") (ifseqformula "1"))
                                                )
                                                (branch "f_82 = <created> ∧ o_82 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "cut_direct" (formula "42") (term "0,0"))
                                             (branch "CUT: o_82 = null TRUE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "false_right" (formula "43"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "CUT: o_82 = null FALSE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "notRight" (formula "43"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_82 = <created> ∧ o_82 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "41"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "41") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "41") (ifseqformula "1"))
                                                )
                                                (branch "f_82 = <created> ∧ o_82 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "42") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "exc_9.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "cut_direct" (formula "12") (term "0"))
                              (branch "CUT: self_0.votesForCandidates = null TRUE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                                 (rule "cut_direct" (formula "17") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_81"))
                                       (rule "allRight" (formula "33") (inst "sk=o_81"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_81_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_81_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__158"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_81_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__159"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_81 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "CUT: o_81 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_81 = <created> ∧ o_81 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_81 = <created> ∧ o_81 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "25") (term "0,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_80"))
                                          (rule "allRight" (formula "34") (inst "sk=o_80"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_80_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_80_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__156"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_80_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__157"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_80 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_80 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_80 = <created> ∧ o_80 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_80 = <created> ∧ o_80 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "allRight" (formula "35") (inst "sk=f_79"))
                                             (rule "allRight" (formula "35") (inst "sk=o_79"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "orRight" (formula "35"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_79_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_79_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__154"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_79_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__155"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "39"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "40") (term "0,0"))
                                             (branch "CUT: o_79 = null TRUE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "CUT: o_79 = null FALSE"
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "notRight" (formula "41"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_79 = <created> ∧ o_79 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "40") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "39"))
                                                   (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "39") (ifseqformula "1"))
                                                )
                                                (branch "f_79 = <created> ∧ o_79 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "40") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
                                             (rule "allRight" (formula "36") (inst "sk=f_78"))
                                             (rule "allRight" (formula "36") (inst "sk=o_78"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_78_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_78_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__152"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_78_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__153"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_78 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_78 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_78 = <created> ∧ o_78 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_78 = <created> ∧ o_78 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_77"))
                                       (rule "allRight" (formula "34") (inst "sk=o_77"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_77_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__150"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_77_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__151"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_77_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_77 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: o_77 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_77 = <created> ∧ o_77 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_77 = <created> ∧ o_77 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "25") (term "1,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_76"))
                                          (rule "allRight" (formula "35") (inst "sk=o_76"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_76_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__148"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_76_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__149"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_76_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_76 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_76 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_76 = <created> ∧ o_76 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_76 = <created> ∧ o_76 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "allRight" (formula "36") (inst "sk=f_75"))
                                             (rule "allRight" (formula "36") (inst "sk=o_75"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_75_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__146"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_75_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__147"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_75_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_75 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_75 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_75 = <created> ∧ o_75 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "40"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "40"))
                                                )
                                                (branch "f_75 = <created> ∧ o_75 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "26")))
                                             (rule "allRight" (formula "37") (inst "sk=f_74"))
                                             (rule "allRight" (formula "37") (inst "sk=o_74"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_74_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_74_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__144"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_74_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__145"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "41"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "42") (term "0,0"))
                                             (branch "CUT: o_74 = null TRUE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "false_right" (formula "43"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_74 = null FALSE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "notRight" (formula "43"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_74 = <created> ∧ o_74 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "41"))
                                                   (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "41"))
                                                )
                                                (branch "f_74 = <created> ∧ o_74 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "42") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self_0.votesForCandidates = null FALSE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "17") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_73"))
                                       (rule "allRight" (formula "34") (inst "sk=o_73"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_73_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_73_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__142"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_73_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__143"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_73 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_73 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_73 = <created> ∧ o_73 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "6"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "38") (ifseqformula "1"))
                                          )
                                          (branch "f_73 = <created> ∧ o_73 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "25") (term "0,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_72"))
                                          (rule "allRight" (formula "35") (inst "sk=o_72"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_72_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_72_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__140"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_72_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__141"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_72 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_72 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_72 = <created> ∧ o_72 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_72 = <created> ∧ o_72 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "36") (term "0,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "cut_direct" (formula "25") (term "1"))
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "allRight" (formula "36") (inst "sk=f_71"))
                                             (rule "allRight" (formula "36") (inst "sk=o_71"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "orRight" (formula "36"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_71_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "40"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_71_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__138"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_71_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__139"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "40"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "41") (term "0,0"))
                                             (branch "CUT: o_71 = null TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "CUT: o_71 = null FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "notRight" (formula "42"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_71 = <created> ∧ o_71 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "41"))
                                                )
                                                (branch "f_71 = <created> ∧ o_71 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "25")))
                                             (rule "allRight" (formula "37") (inst "sk=f_70"))
                                             (rule "allRight" (formula "37") (inst "sk=o_70"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_70_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__136"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_70_1"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__137"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_70_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "41"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "cut_direct" (formula "42") (term "0,0"))
                                             (branch "CUT: o_70 = null TRUE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "false_right" (formula "43"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "CUT: o_70 = null FALSE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "notRight" (formula "43"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_70 = <created> ∧ o_70 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "42") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "41"))
                                                   (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "41"))
                                                )
                                                (branch "f_70 = <created> ∧ o_70 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "42") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "cut_direct" (formula "25") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "allRight" (formula "35") (inst "sk=f_69"))
                                       (rule "allRight" (formula "35") (inst "sk=o_69"))
                                       (rule "orRight" (formula "35"))
                                       (rule "orRight" (formula "35"))
                                       (rule "orRight" (formula "35"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_69_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__134"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_69_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__135"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_69_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "39"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "40") (term "0,0"))
                                       (branch "CUT: o_69 = null TRUE"
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "false_right" (formula "41"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_69 = null FALSE"
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "notRight" (formula "41"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_69 = <created> ∧ o_69 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                          (branch "f_69 = <created> ∧ o_69 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "40") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_9) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "25") (term "0,0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allRight" (formula "36") (inst "sk=f_68"))
                                          (rule "allRight" (formula "36") (inst "sk=o_68"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_68_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_68_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__132"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_68_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__133"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_68 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_68 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_68 = <created> ∧ o_68 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "40") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "40") (ifseqformula "1"))
                                             )
                                             (branch "f_68 = <created> ∧ o_68 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_9) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "cut_direct" (formula "25") (term "1"))
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "allRight" (formula "37") (inst "sk=f_67"))
                                             (rule "allRight" (formula "37") (inst "sk=o_67"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_67_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_67_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__130"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_67_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__131"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "41"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "42") (term "0,0"))
                                             (branch "CUT: o_67 = null TRUE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "false_right" (formula "43"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "CUT: o_67 = null FALSE"
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "notRight" (formula "43"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_67 = <created> ∧ o_67 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "40") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "42") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "42"))
                                                )
                                                (branch "f_67 = <created> ∧ o_67 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "42") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: java.lang.Error::instance(exc_9) = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "38") (term "1,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "25")))
                                             (rule "allRight" (formula "38") (inst "sk=f_66"))
                                             (rule "allRight" (formula "38") (inst "sk=o_66"))
                                             (rule "orRight" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_66_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "eqSymm" (formula "42"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_66_1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__128"))
                                             (rule "simplifySelectOfCreate" (formula "2"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_66_2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__129"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_and" (formula "42"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "cut_direct" (formula "43") (term "0,0"))
                                             (branch "CUT: o_66 = null TRUE"
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "applyEqRigid" (formula "43") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: o_66 = null FALSE"
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "notRight" (formula "44"))
                                                (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "false_right" (formula "43"))
                                                (rule "ifthenelse_negated" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_66 = <created> ∧ o_66 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "42"))
                                                   (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "41") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "2"))
                                                   (rule "castTrueImpliesOriginalTrue" (formula "42") (ifseqformula "1"))
                                                   (rule "closeTrue" (formula "42"))
                                                )
                                                (branch "f_66 = <created> ∧ o_66 = strPool(\"localhost\") FALSE"
                                                   (rule "close" (formula "43") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(exc_9 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "false_right" (formula "34"))
                           (rule "instanceof_static_type" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "closeTrue" (formula "33"))
                        )
                     )
                     (branch "if exc_9 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "notLeft" (formula "1"))
                        (rule "instanceof_static_type" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "closeTrue" (formula "27"))
                     )
                  )
               )
            )
            (branch "if x_60 false"
               (builtin "One Step Simplification" (formula "26"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Pre (sendTo)"
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "wellFormedCreate" (formula "23") (term "0,0,1"))
            (rule "wellFormedAnonEQ" (formula "23") (term "0,0,1") (ifseqformula "12"))
            (rule "eqSymm" (formula "23") (term "0,0"))
            (rule "eqSymm" (formula "23") (term "0,1,1"))
            (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")) (ifInst ""  (formula "11")))
            (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=java_lang_Object_created__125"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__126"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "18"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "orRight" (formula "18"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
            (rule "closeTrue" (formula "19"))
         )
         (branch "Null reference (var_5 = null)"
            (builtin "One Step Simplification" (formula "23"))
            (rule "notRight" (formula "23"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_60 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_63"))
               (rule "compound_assignment_2" (formula "20") (term "1") (inst "#v=x_64"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_64"))
               (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_6"))
               (rule "assignment_read_attribute_this" (formula "20"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (x_arr_6 != null)"
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "compound_assignment_1_new" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "3"))
                  (rule "ifSplit" (formula "23"))
                  (branch "if x_63 true"
                     (builtin "One Step Simplification" (formula "24"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "blockBreakNoLabel" (formula "24") (term "1"))
                     (rule "blockBreakLabel" (formula "24") (term "1"))
                     (rule "blockEmpty" (formula "24") (term "1"))
                     (rule "tryEmpty" (formula "24") (term "1"))
                     (rule "methodCallEmpty" (formula "24") (term "1"))
                     (rule "emptyModality" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "methodCallReturn" (formula "24") (term "1"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "methodCallEmpty" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "emptyModality" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "closeTrue" (formula "24"))
                  )
                  (branch "if x_63 false"
                     (builtin "One Step Simplification" (formula "24"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "blockEmpty" (formula "24") (term "1"))
                     (rule "unusedLabel" (formula "24") (term "1"))
                     (rule "preincrement" (formula "24") (term "1"))
                     (rule "compound_int_cast_expression" (formula "24") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "24") (term "1"))
                     (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_65"))
                     (rule "remove_parentheses_right" (formula "24") (term "1"))
                     (rule "assignmentAdditionInt" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "24") (term "1"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "tryEmpty" (formula "24") (term "1"))
                     (rule "methodCallEmpty" (formula "24") (term "1"))
                     (rule "emptyModality" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")) (ifInst ""  (formula "8")))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,0,1"))
                     (rule "mul_literals" (formula "24") (term "0,0,0,1"))
                     (rule "precOfInt" (formula "24") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,1,1"))
                     (rule "add_literals" (formula "24") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "24") (term "0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                     (rule "times_zero_2" (formula "24") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,1"))
                     (rule "add_literals" (formula "24") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "24") (term "0,1,1"))
                     (rule "leq_literals" (formula "24") (term "1,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                     (rule "mul_literals" (formula "24") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                     (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "24") (term "0") (ifseqformula "20"))
                     (rule "leq_literals" (formula "24") (term "0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "allRight" (formula "24") (inst "sk=j_8"))
                     (rule "orRight" (formula "24"))
                     (rule "orRight" (formula "24"))
                     (rule "inEqSimp_leqRight" (formula "24"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "25"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "cut_direct" (formula "23") (term "0"))
                     (branch "CUT: self_0.ballotCast = null TRUE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "23"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "15"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "23"))
                              (rule "close" (formula "26") (ifseqformula "2"))
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "23"))
                              (rule "close" (formula "27") (ifseqformula "2"))
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "23"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "1,0"))
                              (rule "times_zero_1" (formula "23") (term "0"))
                              (rule "leq_literals" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "22"))
                              (rule "close" (formula "26") (ifseqformula "1"))
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "30") (term "0,2,0") (ifseqformula "24"))
                              (rule "close" (formula "30") (ifseqformula "3"))
                           )
                        )
                     )
                     (branch "CUT: self_0.ballotCast = null FALSE"
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "15"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "24"))
                              (rule "close" (formula "28") (ifseqformula "3"))
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "23"))
                              (rule "close" (formula "28") (ifseqformula "2"))
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "23"))
                              (rule "close" (formula "29") (ifseqformula "2"))
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "allLeft" (formula "24") (inst "t=j_8"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "23"))
                              (rule "close" (formula "30") (ifseqformula "2"))
                           )
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_6 = null)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "21"))
                  (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "cut_direct" (formula "16") (term "0"))
                  (branch "CUT: result_0.<created> = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                        (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "10"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "10") (inst "r=r") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "exLeft" (formula "10") (inst "sk=i_2_9"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "inEqSimp_ltToLeq" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "disjointDefinition" (formula "14"))
                        (rule "castedGetAny" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                        (rule "nnf_notOr" (formula "13") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0"))
                        (rule "distr_forallAnd" (formula "13"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "castDel" (formula "13") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commuteIntersection" (formula "14") (term "0"))
                        (rule "intersectWithSingleton" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "lenNonNegative" (formula "11") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1") (ifseqformula "4"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self_0.receiver = null TRUE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "13"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1,0") (ifseqformula "13"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "close" (formula "30") (ifseqformula "1"))
                        )
                        (branch "CUT: self_0.receiver = null FALSE"
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "close" (formula "30") (ifseqformula "1"))
                        )
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "8"))
                        (rule "notLeft" (formula "8"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "9"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "1"))
                        (rule "arrayLengthIsAnInt" (formula "10") (term "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "disjointDefinition" (formula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "eqSymm" (formula "30"))
                        (rule "disjointDefinition" (formula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "eqSymm" (formula "29"))
                        (rule "disjointDefinition" (formula "14"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "eqSymm" (formula "28"))
                        (rule "disjointDefinition" (formula "13"))
                        (rule "disjointDefinition" (formula "12"))
                        (rule "disjointDefinition" (formula "11"))
                        (rule "sortsDisjointModuloNull" (formula "30"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "2")))
                        (rule "false_right" (formula "30"))
                        (rule "sortsDisjointModuloNull" (formula "29"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                        (rule "false_right" (formula "29"))
                        (rule "sortsDisjointModuloNull" (formula "28"))
                        (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "28"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "2"))
                        (rule "commuteIntersection" (formula "13") (term "0"))
                        (rule "commuteIntersection" (formula "11") (term "0"))
                        (rule "commuteIntersection" (formula "12") (term "0"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "14"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "14") (inst "r=r") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "exLeft" (formula "14") (inst "sk=i_2_8"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "inEqSimp_ltToLeq" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "disjointDefinition" (formula "18"))
                        (rule "castedGetAny" (formula "16") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                        (rule "nnf_notOr" (formula "17") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0,0"))
                        (rule "commute_or_2" (formula "17") (term "0,0"))
                        (rule "cnf_rightDist" (formula "17") (term "0"))
                        (rule "distr_forallAnd" (formula "17"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "castDel" (formula "17") (term "0,1,0,0,0"))
                        (rule "castDel" (formula "17") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "shift_paren_or" (formula "17") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commuteIntersection" (formula "18") (term "0"))
                        (rule "intersectWithSingleton" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "lenNonNegative" (formula "15") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "15"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "close" (formula "33") (ifseqformula "2"))
                     )
                  )
                  (branch "CUT: result_0.<created> = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                        (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "close" (formula "25") (ifseqformula "3"))
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "8"))
                        (rule "notLeft" (formula "8"))
                        (rule "close" (formula "22") (ifseqformula "2"))
                     )
                  )
               )
               (branch "Index Out of Bounds (x_arr_6 != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "cut_direct" (formula "16") (term "0"))
                  (branch "CUT: result_0.<created> = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "5"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "9"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "5"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "9"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_literals" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "CUT: result_0.<created> = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "5"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "disjointDefinition" (formula "14"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "eqSymm" (formula "29"))
                        (rule "disjointDefinition" (formula "13"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "eqSymm" (formula "28"))
                        (rule "disjointDefinition" (formula "12"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "eqSymm" (formula "27"))
                        (rule "disjointDefinition" (formula "11"))
                        (rule "disjointDefinition" (formula "9"))
                        (rule "disjointDefinition" (formula "10"))
                        (rule "sortsDisjointModuloNull" (formula "29"))
                        (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
                        (rule "false_right" (formula "29"))
                        (rule "sortsDisjointModuloNull" (formula "28"))
                        (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "28"))
                        (rule "sortsDisjointModuloNull" (formula "27"))
                        (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "29")))
                        (rule "false_right" (formula "27"))
                        (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "17"))
                        (rule "commuteIntersection" (formula "9") (term "0"))
                        (rule "commuteIntersection" (formula "10") (term "0"))
                        (rule "commuteIntersection" (formula "11") (term "0"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "close" (formula "28") (ifseqformula "4"))
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "5"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "10"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                        (rule "andLeft" (formula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "leq_literals" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
               )
            )
            (branch "if x_60 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "if x_59 false"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_6_1"))
      (rule "blockEmpty" (formula "18") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_53"))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_54"))
      (rule "assignment_read_attribute_this" (formula "18"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "less_than_comparison_simple" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (rule "emptyModality" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "impRight" (formula "18"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "17"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq1" (formula "17"))
      (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "1,0"))
      (rule "times_zero_1" (formula "17") (term "0"))
      (rule "leq_literals" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCallReturn" (formula "18") (term "1"))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "emptyModality" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "false_right" (formula "18"))
      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_55"))
      (rule "inequality_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "ifSplit" (formula "21"))
      (branch "if x_55 true"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallUnfoldTarget" (formula "21") (term "1") (inst "#v0=s"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "s"))
         (rule "assignment_read_attribute_this" (formula "21"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallUnfoldArguments" (formula "21") (term "1"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "var"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_1"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_2"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_3"))
         (rule "stringAssignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "eqSymm" (formula "21"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_sendTo,exc_7,heapAfter_sendTo,anon_heap_sendTo") (contract "de.uni.trier.infsec.functionalities.amt.Sender[de.uni.trier.infsec.functionalities.amt.Sender::sendTo([B,int,java.lang.String,int)].JML operation contract.0"))
         (branch "Post (sendTo)"
            (builtin "One Step Simplification" (formula "19"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,0,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,1,0,0,1,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "21") (term "0,0,0,0,1,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_1"))
            (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "19"))
            (rule "simplifySelectOfCreate" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "19"))
            (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_2"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "replaceKnownSelect_taclet2_0" (formula "21") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "21") (term "2,0"))
            (rule "elementOfUnion" (formula "21") (term "0,0"))
            (rule "elementOfSingleton" (formula "21") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "commuteUnion" (formula "19") (term "1,0"))
            (rule "commuteUnion" (formula "22") (term "1"))
            (rule "methodCallEmpty" (formula "27") (term "1"))
            (rule "tryEmpty" (formula "27") (term "1"))
            (rule "emptyModality" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "allRight" (formula "27") (inst "sk=f_65"))
            (rule "allRight" (formula "27") (inst "sk=o_65"))
            (rule "orRight" (formula "27"))
            (rule "orRight" (formula "27"))
            (rule "orRight" (formula "27"))
            (rule "eqSymm" (formula "30"))
            (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_65_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "31"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__123"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_65_1"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0,0"))
            (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
            (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__124"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_65_2"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "commute_and" (formula "31"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "cut_direct" (formula "16") (term "0"))
            (branch "CUT: result_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "ifthenelse_split" (formula "24") (term "0"))
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "cut_direct" (formula "32") (term "0,0"))
                  (branch "CUT: o_65 = null TRUE"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "eqSymm" (formula "31"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "closeTrue" (formula "30"))
                  )
                  (branch "CUT: o_65 = null FALSE"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "notRight" (formula "33"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "false_right" (formula "32"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                        (rule "closeTrue" (formula "35"))
                     )
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "35") (ifseqformula "2"))
                     )
                  )
               )
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                  (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "cut_direct" (formula "31") (term "0,0"))
                  (branch "CUT: o_65 = null TRUE"
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "false_right" (formula "32"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "CUT: o_65 = null FALSE"
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "notRight" (formula "32"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                        (rule "closeTrue" (formula "34"))
                     )
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "34") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "CUT: result_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "16"))
               (rule "ifthenelse_split" (formula "24") (term "0"))
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "cut_direct" (formula "33") (term "0,0"))
                  (branch "CUT: o_65 = null TRUE"
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "false_right" (formula "34"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_65 = null FALSE"
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "notRight" (formula "34"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0,1,0") (ifseqformula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "36") (term "0") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "35"))
                        (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "35") (ifseqformula "1"))
                     )
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "36") (ifseqformula "2"))
                     )
                  )
               )
               (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                  (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "cut_direct" (formula "32") (term "0,0"))
                  (branch "CUT: o_65 = null TRUE"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "false_right" (formula "33"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "eqSymm" (formula "30"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "closeTrue" (formula "30"))
                  )
                  (branch "CUT: o_65 = null FALSE"
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "notRight" (formula "33"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "false_right" (formula "32"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "3"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "34"))
                        (rule "applyEq" (formula "33") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "34") (ifseqformula "1"))
                        (rule "closeTrue" (formula "34"))
                     )
                     (branch "f_65 = <created> ∧ o_65 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "35") (ifseqformula "2"))
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (sendTo)"
            (builtin "One Step Simplification" (formula "24"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0") (ifseqformula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "20"))
            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
            (rule "simplifySelectOfCreate" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfCreate" (formula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "castDel" (formula "20") (term "1,0"))
            (rule "eqSymm" (formula "20") (term "0,1,0,0"))
            (rule "eqSymm" (formula "20") (term "0,0,0"))
            (rule "replace_known_right" (formula "20") (term "0,1,0,0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
            (rule "eqSymm" (formula "20") (term "1,0,0"))
            (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
            (rule "ifthenelse_negated" (formula "20") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commuteUnion" (formula "19") (term "1,0"))
            (rule "methodCallThrow" (formula "28") (term "1"))
            (rule "tryCatchThrow" (formula "28") (term "1"))
            (rule "ifElseUnfold" (formula "28") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_56"))
            (rule "equality_comparison_simple" (formula "28") (term "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "replace_known_right" (formula "28") (term "0,0,1,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0,1,0") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1,1,0") (ifseqformula "1"))
            (rule "ifElseSplit" (formula "31"))
            (branch "if x_56 true"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_56 false"
               (builtin "One Step Simplification" (formula "32"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "31"))
               (branch "if exc_7 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "31") (term "1") (newnames "e_5"))
                  (rule "reference_type_cast" (formula "31"))
                  (branch "Normal Execution (exc_7 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "emptyModality" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                     (rule "eqSymm" (formula "31") (term "1,0,0,1"))
                     (rule "commute_or_2" (formula "31") (term "0"))
                     (rule "commute_or_2" (formula "31") (term "0,0,0"))
                     (rule "commute_or_2" (formula "31") (term "0,0"))
                     (rule "commute_or_2" (formula "31") (term "0"))
                     (rule "commute_or" (formula "31") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "31") (term "0,0,0"))
                     (rule "commute_or_2" (formula "31") (term "0,0"))
                     (rule "ifthenelse_split" (formula "23") (term "0"))
                     (branch "exc_7.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "cut_direct" (formula "10") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "10"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self_0.ballotCast = null TRUE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                              (rule "cut_direct" (formula "24") (term "1,0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "30") (term "1,0,0,0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "allRight" (formula "30") (inst "sk=f_64"))
                                 (rule "allRight" (formula "30") (inst "sk=o_64"))
                                 (rule "orRight" (formula "30"))
                                 (rule "orRight" (formula "30"))
                                 (rule "orRight" (formula "30"))
                                 (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_64_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_64_1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__121"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_64_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__122"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "34"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "cut_direct" (formula "18") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "35") (term "0,0"))
                                    (branch "CUT: o_64 = null TRUE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_64 = null FALSE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "notRight" (formula "36"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_64 = <created> ∧ o_64 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "35") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "f_64 = <created> ∧ o_64 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "35") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "cut_direct" (formula "36") (term "0,0"))
                                    (branch "CUT: o_64 = null TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "CUT: o_64 = null FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "notRight" (formula "37"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_64 = <created> ∧ o_64 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "f_64 = <created> ∧ o_64 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "36") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "31") (term "1,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "cut_direct" (formula "15") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "allRight" (formula "31") (inst "sk=f_63"))
                                       (rule "allRight" (formula "31") (inst "sk=o_63"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_63_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_63_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__119"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_63_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__120"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "35"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "36") (term "0,0"))
                                       (branch "CUT: o_63 = null TRUE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_63 = null FALSE"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_63 = <created> ∧ o_63 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_63 = <created> ∧ o_63 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "36") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "allRight" (formula "32") (inst "sk=f_62"))
                                          (rule "allRight" (formula "32") (inst "sk=o_62"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_62_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_62_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__117"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_62_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__118"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "36"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "37") (term "0,0"))
                                          (branch "CUT: o_62 = null TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_62 = null FALSE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notRight" (formula "38"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "false_right" (formula "37"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_62 = <created> ∧ o_62 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "36"))
                                             )
                                             (branch "f_62 = <created> ∧ o_62 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "37") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "33") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "33") (inst "sk=f_61"))
                                          (rule "allRight" (formula "33") (inst "sk=o_61"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_61_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_61_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__115"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_61_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__116"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_61 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_61 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_61 = <created> ∧ o_61 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "37") (ifseqformula "1"))
                                             )
                                             (branch "f_61 = <created> ∧ o_61 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=f_60"))
                                       (rule "allRight" (formula "32") (inst "sk=o_60"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_60_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_60_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__113"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_60_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__114"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_60 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_60 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_60 = <created> ∧ o_60 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "37") (ifseqformula "1"))
                                          )
                                          (branch "f_60 = <created> ∧ o_60 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_59"))
                                          (rule "allRight" (formula "33") (inst "sk=o_59"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_59_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_59_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__111"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_59_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__112"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_59 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "CUT: o_59 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_59 = <created> ∧ o_59 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                             (branch "f_59 = <created> ∧ o_59 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "34") (inst "sk=f_58"))
                                          (rule "allRight" (formula "34") (inst "sk=o_58"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_58_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__109"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_58_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__110"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_58_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_58 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "CUT: o_58 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_58 = <created> ∧ o_58 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_58 = <created> ∧ o_58 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.ballotCast = null FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "cut_direct" (formula "24") (term "1,0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allRight" (formula "31") (inst "sk=f_57"))
                                 (rule "allRight" (formula "31") (inst "sk=o_57"))
                                 (rule "orRight" (formula "31"))
                                 (rule "orRight" (formula "31"))
                                 (rule "orRight" (formula "31"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_57_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__107"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_57_1"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__108"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_57_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "35"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "cut_direct" (formula "18") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "36") (term "0,0"))
                                    (branch "CUT: o_57 = null TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "CUT: o_57 = null FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "notRight" (formula "37"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_57 = <created> ∧ o_57 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "f_57 = <created> ∧ o_57 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "36") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_57 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "closeTrue" (formula "35"))
                                    )
                                    (branch "CUT: o_57 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_57 = <created> ∧ o_57 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "f_57 = <created> ∧ o_57 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "32") (term "1,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "cut_direct" (formula "15") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "cut_direct" (formula "24") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=f_56"))
                                       (rule "allRight" (formula "32") (inst "sk=o_56"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_56_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_56_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__105"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_56_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__106"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_56 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_56 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_56 = <created> ∧ o_56 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "35") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch "f_56 = <created> ∧ o_56 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_55"))
                                          (rule "allRight" (formula "33") (inst "sk=o_55"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_55_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_55_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__103"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_55_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__104"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_55 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_55 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_55 = <created> ∧ o_55 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "37") (ifseqformula "1"))
                                             )
                                             (branch "f_55 = <created> ∧ o_55 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "34") (inst "sk=f_54"))
                                          (rule "allRight" (formula "34") (inst "sk=o_54"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_54_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_54_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__101"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_54_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__102"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_54 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_54 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_54 = <created> ∧ o_54 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                             (branch "f_54 = <created> ∧ o_54 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "cut_direct" (formula "24") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_53"))
                                       (rule "allRight" (formula "33") (inst "sk=o_53"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_53_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_53_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__99"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_53_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__100"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_53 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "CUT: o_53 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_53 = <created> ∧ o_53 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_53 = <created> ∧ o_53 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_52"))
                                          (rule "allRight" (formula "34") (inst "sk=o_52"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_52_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_52_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__97"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_52_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__98"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_52 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_52 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_52 = <created> ∧ o_52 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_52 = <created> ∧ o_52 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "35") (inst "sk=f_51"))
                                          (rule "allRight" (formula "35") (inst "sk=o_51"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_51_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__95"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_51_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__96"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_51_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_51 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_51 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_51 = <created> ∧ o_51 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_51 = <created> ∧ o_51 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self_0.ballotCast = null TRUE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                              (rule "cut_direct" (formula "15") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "31") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allRight" (formula "31") (inst "sk=f_50"))
                                    (rule "allRight" (formula "31") (inst "sk=o_50"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_50_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__93"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_50_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__94"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_50_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "36") (term "0,0"))
                                    (branch "CUT: o_50 = null TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_50 = null FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "notRight" (formula "37"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_50 = <created> ∧ o_50 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "36") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "36") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "f_50 = <created> ∧ o_50 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "36") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "32") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "cut_direct" (formula "24") (term "1,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "32") (term "1,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=f_49"))
                                       (rule "allRight" (formula "32") (inst "sk=o_49"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_49_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_49_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__91"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_49_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__92"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_49 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_49 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_49 = <created> ∧ o_49 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_49 = <created> ∧ o_49 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_48"))
                                          (rule "allRight" (formula "33") (inst "sk=o_48"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_48_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__89"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_48_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__90"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_48_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_48 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_48 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_48 = <created> ∧ o_48 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "37") (ifseqformula "1"))
                                             )
                                             (branch "f_48 = <created> ∧ o_48 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "34") (inst "sk=f_47"))
                                          (rule "allRight" (formula "34") (inst "sk=o_47"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_47_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_47_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__87"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_47_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__88"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_47 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_47 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_47 = <created> ∧ o_47 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                             (branch "f_47 = <created> ∧ o_47 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "32") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allRight" (formula "32") (inst "sk=f_46"))
                                    (rule "allRight" (formula "32") (inst "sk=o_46"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_46_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_46_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__85"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_46_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__86"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_46 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_46 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_46 = <created> ∧ o_46 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "36") (ifseqformula "1"))
                                       )
                                       (branch "f_46 = <created> ∧ o_46 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_45"))
                                       (rule "allRight" (formula "33") (inst "sk=o_45"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_45_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_45_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__83"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_45_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__84"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_45 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_45 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_45 = <created> ∧ o_45 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_45 = <created> ∧ o_45 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_44"))
                                          (rule "allRight" (formula "34") (inst "sk=o_44"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_44_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_44_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__81"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_44_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__82"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_44 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_44 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_44 = <created> ∧ o_44 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_44 = <created> ∧ o_44 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "35") (inst "sk=f_43"))
                                          (rule "allRight" (formula "35") (inst "sk=o_43"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_43_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__79"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_43_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__80"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_43_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_43 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_43 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_43 = <created> ∧ o_43 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_43 = <created> ∧ o_43 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.ballotCast = null FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "cut_direct" (formula "15") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "32") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allRight" (formula "32") (inst "sk=f_42"))
                                    (rule "allRight" (formula "32") (inst "sk=o_42"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_42_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_42_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__77"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_42_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__78"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_42 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_42 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_42 = <created> ∧ o_42 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "f_42 = <created> ∧ o_42 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "24") (term "1,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "1,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_41"))
                                       (rule "allRight" (formula "33") (inst "sk=o_41"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_41_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_41_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__75"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_41_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__76"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_41 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_41 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_41 = <created> ∧ o_41 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "37") (ifseqformula "1"))
                                          )
                                          (branch "f_41 = <created> ∧ o_41 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_40"))
                                          (rule "allRight" (formula "34") (inst "sk=o_40"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_40_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_40_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__73"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_40_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__74"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_40 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_40 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_40 = <created> ∧ o_40 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "39") (ifseqformula "1"))
                                             )
                                             (branch "f_40 = <created> ∧ o_40 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "35") (inst "sk=f_39"))
                                          (rule "allRight" (formula "35") (inst "sk=o_39"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_39_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_39_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__71"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_39_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__72"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_39 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_39 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_39 = <created> ∧ o_39 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_39 = <created> ∧ o_39 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allRight" (formula "33") (inst "sk=f_38"))
                                    (rule "allRight" (formula "33") (inst "sk=o_38"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_38_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__69"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_38_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__70"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_38_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "37"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "38") (term "0,0"))
                                    (branch "CUT: o_38 = null TRUE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                    (branch "CUT: o_38 = null FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notRight" (formula "39"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_38 = <created> ∧ o_38 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "38"))
                                       )
                                       (branch "f_38 = <created> ∧ o_38 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "38") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_37"))
                                       (rule "allRight" (formula "34") (inst "sk=o_37"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_37_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_37_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__67"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_37_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__68"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_37 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_37 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_37 = <created> ∧ o_37 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "38") (ifseqformula "1"))
                                          )
                                          (branch "f_37 = <created> ∧ o_37 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_36"))
                                          (rule "allRight" (formula "35") (inst "sk=o_36"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_36_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__65"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_36_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__66"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_36_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_36 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_36 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_36 = <created> ∧ o_36 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "40") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "40") (ifseqformula "1"))
                                             )
                                             (branch "f_36 = <created> ∧ o_36 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "36") (inst "sk=f_35"))
                                          (rule "allRight" (formula "36") (inst "sk=o_35"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_35_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_35_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__63"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_35_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__64"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_35 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_35 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_35 = <created> ∧ o_35 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_35 = <created> ∧ o_35 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "exc_7.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "cut_direct" (formula "10") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "10"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self_0.ballotCast = null TRUE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                              (rule "cut_direct" (formula "24") (term "1,0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "allRight" (formula "31") (inst "sk=f_34"))
                                 (rule "allRight" (formula "31") (inst "sk=o_34"))
                                 (rule "orRight" (formula "31"))
                                 (rule "orRight" (formula "31"))
                                 (rule "orRight" (formula "31"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_34_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__61"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_34_1"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__62"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_34_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "35"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "cut_direct" (formula "18") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "36") (term "0,0"))
                                    (branch "CUT: o_34 = null TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "CUT: o_34 = null FALSE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "notRight" (formula "37"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_34 = <created> ∧ o_34 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "35"))
                                          (rule "applyEq" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "35") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "35"))
                                       )
                                       (branch "f_34 = <created> ∧ o_34 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "36") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_34 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_34 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_34 = <created> ∧ o_34 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "f_34 = <created> ∧ o_34 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "32") (term "1,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "cut_direct" (formula "15") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=f_33"))
                                       (rule "allRight" (formula "32") (inst "sk=o_33"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_33_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__59"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_33_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__60"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_33_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "37") (term "0,0"))
                                       (branch "CUT: o_33 = null TRUE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_33 = null FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "notRight" (formula "38"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_33 = <created> ∧ o_33 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                          (branch "f_33 = <created> ∧ o_33 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "37") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allRight" (formula "33") (inst "sk=f_32"))
                                          (rule "allRight" (formula "33") (inst "sk=o_32"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_32_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__57"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_32_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__58"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_32_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "37"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "38") (term "0,0"))
                                          (branch "CUT: o_32 = null TRUE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_32 = null FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "notRight" (formula "39"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_32 = <created> ∧ o_32 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_32 = <created> ∧ o_32 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "38") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "34") (inst "sk=f_31"))
                                          (rule "allRight" (formula "34") (inst "sk=o_31"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_31_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__55"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_31_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__56"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_31_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_31 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_31 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_31 = <created> ∧ o_31 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                             (branch "f_31 = <created> ∧ o_31 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_30"))
                                       (rule "allRight" (formula "33") (inst "sk=o_30"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_30_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_30_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__53"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_30_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__54"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_30 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "closeTrue" (formula "36"))
                                       )
                                       (branch "CUT: o_30 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_30 = <created> ∧ o_30 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_30 = <created> ∧ o_30 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_29"))
                                          (rule "allRight" (formula "34") (inst "sk=o_29"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_29_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_29_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__51"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_29_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__52"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_29 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_29 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_29 = <created> ∧ o_29 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                             (branch "f_29 = <created> ∧ o_29 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "35") (inst "sk=f_28"))
                                          (rule "allRight" (formula "35") (inst "sk=o_28"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_28_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__49"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_28_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__50"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_28_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_28 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_28 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_28 = <created> ∧ o_28 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_28 = <created> ∧ o_28 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.ballotCast = null FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "cut_direct" (formula "24") (term "1,0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "32") (term "1,0,0,0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "allRight" (formula "32") (inst "sk=f_27"))
                                 (rule "allRight" (formula "32") (inst "sk=o_27"))
                                 (rule "orRight" (formula "32"))
                                 (rule "orRight" (formula "32"))
                                 (rule "orRight" (formula "32"))
                                 (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_27_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__47"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_27_1"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__48"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_27_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "36"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "cut_direct" (formula "18") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_27 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "36") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "closeTrue" (formula "35"))
                                    )
                                    (branch "CUT: o_27 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_27 = <created> ∧ o_27 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "f_27 = <created> ∧ o_27 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "cut_direct" (formula "38") (term "0,0"))
                                    (branch "CUT: o_27 = null TRUE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_27 = null FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notRight" (formula "39"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_27 = <created> ∧ o_27 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "38") (ifseqformula "1"))
                                       )
                                       (branch "f_27 = <created> ∧ o_27 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "38") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "replace_known_right" (formula "33") (term "1,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "cut_direct" (formula "15") (term "0"))
                                 (branch "CUT: result_0.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_26"))
                                       (rule "allRight" (formula "33") (inst "sk=o_26"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_26_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__45"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_26_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__46"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_26_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_26 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_26 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_26 = <created> ∧ o_26 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "37") (ifseqformula "1"))
                                          )
                                          (branch "f_26 = <created> ∧ o_26 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_25"))
                                          (rule "allRight" (formula "34") (inst "sk=o_25"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_25_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__43"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_25_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__44"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_25_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_25 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_25 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_25 = <created> ∧ o_25 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_25 = <created> ∧ o_25 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "35") (inst "sk=f_24"))
                                          (rule "allRight" (formula "35") (inst "sk=o_24"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_24_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__41"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_24_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__42"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_24_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_24 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_24 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_24 = <created> ∧ o_24 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "40") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "40") (ifseqformula "1"))
                                             )
                                             (branch "f_24 = <created> ∧ o_24 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: result_0.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_23"))
                                       (rule "allRight" (formula "34") (inst "sk=o_23"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_23_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_23_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__39"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_23_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__40"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_23 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "CUT: o_23 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_23 = <created> ∧ o_23 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "38") (ifseqformula "1"))
                                          )
                                          (branch "f_23 = <created> ∧ o_23 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_22"))
                                          (rule "allRight" (formula "35") (inst "sk=o_22"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_22_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__37"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_22_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__38"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_22_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_22 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_22 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_22 = <created> ∧ o_22 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_22 = <created> ∧ o_22 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "36") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "36") (inst "sk=f_21"))
                                          (rule "allRight" (formula "36") (inst "sk=o_21"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_21_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__35"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_21_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__36"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_21_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_21 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_21 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_21 = <created> ∧ o_21 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "41"))
                                             )
                                             (branch "f_21 = <created> ∧ o_21 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self_0.ballotCast = null TRUE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                              (rule "cut_direct" (formula "15") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "cut_direct" (formula "24") (term "1,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "32") (term "1,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allRight" (formula "32") (inst "sk=f_20"))
                                    (rule "allRight" (formula "32") (inst "sk=o_20"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_20_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_20_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__33"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_20_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__34"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "37") (term "0,0"))
                                    (branch "CUT: o_20 = null TRUE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_20 = null FALSE"
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "false_right" (formula "37"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_20 = <created> ∧ o_20 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "37") (ifseqformula "1"))
                                       )
                                       (branch "f_20 = <created> ∧ o_20 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "37") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "33") (term "1,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "24") (term "1"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "allRight" (formula "33") (inst "sk=f_19"))
                                       (rule "allRight" (formula "33") (inst "sk=o_19"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_19_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__31"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_19_1"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__32"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_19_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "37"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "cut_direct" (formula "38") (term "0,0"))
                                       (branch "CUT: o_19 = null TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_19 = null FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_19 = <created> ∧ o_19 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "37") (ifseqformula "1"))
                                          )
                                          (branch "f_19 = <created> ∧ o_19 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "38") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allRight" (formula "34") (inst "sk=f_18"))
                                          (rule "allRight" (formula "34") (inst "sk=o_18"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_18_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__29"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_18_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_18_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "38"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "39") (term "0,0"))
                                          (branch "CUT: o_18 = null TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_18 = null FALSE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "notRight" (formula "40"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_18 = <created> ∧ o_18 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "38"))
                                                (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "38"))
                                             )
                                             (branch "f_18 = <created> ∧ o_18 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "39") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "35") (inst "sk=f_17"))
                                          (rule "allRight" (formula "35") (inst "sk=o_17"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_17_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__27"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_17_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__28"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_17_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_17 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_17 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_17 = <created> ∧ o_17 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "39") (ifseqformula "1"))
                                             )
                                             (branch "f_17 = <created> ∧ o_17 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "cut_direct" (formula "24") (term "1,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "33") (term "1,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allRight" (formula "33") (inst "sk=f_16"))
                                    (rule "allRight" (formula "33") (inst "sk=o_16"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_16_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__25"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_16_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__26"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_16_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "37"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "38") (term "0,0"))
                                    (branch "CUT: o_16 = null TRUE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_16 = null FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notRight" (formula "39"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "37") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "37") (ifseqformula "1"))
                                       )
                                       (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "38") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "34") (term "1,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "cut_direct" (formula "24") (term "0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_15"))
                                       (rule "allRight" (formula "34") (inst "sk=o_15"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_15_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__23"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__24"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_15 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "38") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_15 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                          (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "35") (term "0,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_14"))
                                          (rule "allRight" (formula "35") (inst "sk=o_14"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_14_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__21"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_14_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__22"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_14_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_14 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "CUT: o_14 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_14 = <created> ∧ o_14 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "39"))
                                             )
                                             (branch "f_14 = <created> ∧ o_14 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "36") (inst "sk=f_13"))
                                          (rule "allRight" (formula "36") (inst "sk=o_13"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_13_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__19"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_13_1"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__20"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_13_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "commute_and" (formula "2") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_13 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "closeTrue" (formula "40"))
                                          )
                                          (branch "CUT: o_13 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_13 = <created> ∧ o_13 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_13 = <created> ∧ o_13 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self_0.ballotCast = null FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "cut_direct" (formula "15") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allRight" (formula "33") (inst "sk=f_12"))
                                    (rule "allRight" (formula "33") (inst "sk=o_12"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_12_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__17"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_12_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_12_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "37"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "38") (term "0,0"))
                                    (branch "CUT: o_12 = null TRUE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_12 = null FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "notRight" (formula "39"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_12 = <created> ∧ o_12 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "37") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "37") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "f_12 = <created> ∧ o_12 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "38") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "cut_direct" (formula "24") (term "1,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=f_11"))
                                       (rule "allRight" (formula "34") (inst "sk=o_11"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_11_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__15"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__16"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "38"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "39") (term "0,0"))
                                       (branch "CUT: o_11 = null TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "closeTrue" (formula "37"))
                                       )
                                       (branch "CUT: o_11 = null FALSE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_11 = <created> ∧ o_11 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "37") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "38") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "f_11 = <created> ∧ o_11 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "39") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allRight" (formula "35") (inst "sk=f_10"))
                                          (rule "allRight" (formula "35") (inst "sk=o_10"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "orRight" (formula "35"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_10_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__13"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__14"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "39"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "40") (term "0,0"))
                                          (branch "CUT: o_10 = null TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_10 = null FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_10 = <created> ∧ o_10 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_10 = <created> ∧ o_10 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "40") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: java.lang.RuntimeException::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "24")))
                                          (rule "allRight" (formula "36") (inst "sk=f_9"))
                                          (rule "allRight" (formula "36") (inst "sk=o_9"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_9_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__11"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__12"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_9 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_9 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_9 = <created> ∧ o_9 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "41") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "40") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "40"))
                                             )
                                             (branch "f_9 = <created> ∧ o_9 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "cut_direct" (formula "24") (term "0,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "allRight" (formula "34") (inst "sk=f_8"))
                                    (rule "allRight" (formula "34") (inst "sk=o_8"))
                                    (rule "orRight" (formula "34"))
                                    (rule "orRight" (formula "34"))
                                    (rule "orRight" (formula "34"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_8_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__9"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "38"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "39") (term "0,0"))
                                    (branch "CUT: o_8 = null TRUE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "false_right" (formula "40"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "closeTrue" (formula "37"))
                                    )
                                    (branch "CUT: o_8 = null FALSE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "notRight" (formula "40"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "39"))
                                       )
                                       (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "39") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMTError::instance(exc_7) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "replace_known_right" (formula "35") (term "0,0,0,0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "cut_direct" (formula "24") (term "1,0"))
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "allRight" (formula "35") (inst "sk=f_7"))
                                       (rule "allRight" (formula "35") (inst "sk=o_7"))
                                       (rule "orRight" (formula "35"))
                                       (rule "orRight" (formula "35"))
                                       (rule "orRight" (formula "35"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_7_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "commute_and" (formula "39"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "40") (term "0,0"))
                                       (branch "CUT: o_7 = null TRUE"
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "false_right" (formula "41"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_7 = null FALSE"
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "notRight" (formula "41"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_7 = <created> ∧ o_7 = strPool(\"localhost\") TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "2"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "39") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                          (branch "f_7 = <created> ∧ o_7 = strPool(\"localhost\") FALSE"
                                             (rule "close" (formula "40") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.Error::instance(exc_7) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allRight" (formula "36") (inst "sk=f_6"))
                                          (rule "allRight" (formula "36") (inst "sk=o_6"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_6_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__6"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "40"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0,0"))
                                          (branch "CUT: o_6 = null TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                          (branch "CUT: o_6 = null FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notRight" (formula "42"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_6 = <created> ∧ o_6 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "41") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "41"))
                                             )
                                             (branch "f_6 = <created> ∧ o_6 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: de.uni.trier.infsec.functionalities.amt.ConnectionError::instance(exc_7) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "25")))
                                          (rule "allRight" (formula "37") (inst "sk=f_5"))
                                          (rule "allRight" (formula "37") (inst "sk=o_5"))
                                          (rule "orRight" (formula "37"))
                                          (rule "orRight" (formula "37"))
                                          (rule "orRight" (formula "37"))
                                          (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_5_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                                          (rule "simplifySelectOfCreate" (formula "2"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__4"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "commute_and" (formula "41"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "commute_and" (formula "3") (term "0,0"))
                                          (rule "cut_direct" (formula "42") (term "0,0"))
                                          (branch "CUT: o_5 = null TRUE"
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_5 = null FALSE"
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "notRight" (formula "43"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "ifthenelse_negated" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_5 = <created> ∧ o_5 = strPool(\"localhost\") TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "40") (term "1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "2"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "41") (ifseqformula "1"))
                                                (rule "closeTrue" (formula "41"))
                                             )
                                             (branch "f_5 = <created> ∧ o_5 = strPool(\"localhost\") FALSE"
                                                (rule "close" (formula "42") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_7 instanceof java.lang.Throwable))"
                     (rule "false_right" (formula "32"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "26")))
                     (rule "instanceof_static_type" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
               )
               (branch "if exc_7 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "26") (term "0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "closeTrue" (formula "26"))
               )
            )
         )
         (branch "Pre (sendTo)"
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "wellFormedCreate" (formula "22") (term "0,0,1"))
            (rule "wellFormedAnonEQ" (formula "22") (term "0,0,1") (ifseqformula "11"))
            (rule "eqSymm" (formula "22") (term "0,1,1"))
            (rule "eqSymm" (formula "22") (term "0,0"))
            (rule "replace_known_left" (formula "22") (term "0,0,0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "10")) (ifInst ""  (formula "21")))
            (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "23") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "18"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "orRight" (formula "18"))
            (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
            (rule "closeFalse" (formula "13"))
         )
         (branch "Null reference (var = null)"
            (builtin "One Step Simplification" (formula "22"))
            (rule "notRight" (formula "22"))
            (rule "cut_direct" (formula "14") (term "0"))
            (branch "CUT: result_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
               (rule "cut_direct" (formula "11") (term "0"))
               (branch "CUT: self_0.votesForCandidates = null TRUE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "2"))
                  (rule "cut_direct" (formula "20") (term "0"))
                  (branch "CUT: self_0.ballotCast = null TRUE"
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "20"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "6"))
                     (rule "eqSymm" (formula "6"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "12"))
                     (rule "eqSymm" (formula "6"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "6"))
                     (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "11") (term "1") (ifseqformula "6"))
                     (rule "arrayLengthNotNegative" (formula "6") (term "1"))
                     (rule "arrayLengthIsAnInt" (formula "6") (term "1"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "7"))
                     (rule "notLeft" (formula "7"))
                     (rule "close" (formula "23") (ifseqformula "1"))
                  )
                  (branch "CUT: self_0.ballotCast = null FALSE"
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "close" (formula "22") (ifseqformula "11"))
                  )
               )
               (branch "CUT: self_0.votesForCandidates = null FALSE"
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "2"))
                  (rule "cut_direct" (formula "20") (term "0"))
                  (branch "CUT: self_0.ballotCast = null TRUE"
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "20"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "close" (formula "22") (ifseqformula "1"))
                  )
                  (branch "CUT: self_0.ballotCast = null FALSE"
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "6"))
                     (rule "eqSymm" (formula "6"))
                     (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "arrayLengthIsAnInt" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "7"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "7") (inst "r=r") (inst "i=i_2"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "exLeft" (formula "7") (inst "sk=i_2_7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_ltToLeq" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "7"))
                     (rule "disjointDefinition" (formula "11"))
                     (rule "castedGetAny" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or" (formula "10") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0"))
                     (rule "cnf_rightDist" (formula "10") (term "0"))
                     (rule "distr_forallAnd" (formula "10"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "castDel" (formula "10") (term "0,1,0,0,0"))
                     (rule "castDel" (formula "10") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "shift_paren_or" (formula "10") (term "0"))
                     (rule "commute_or" (formula "10") (term "0,0"))
                     (rule "commuteIntersection" (formula "11") (term "0"))
                     (rule "intersectWithSingleton" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "lenNonNegative" (formula "8") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "8"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1") (ifseqformula "2"))
                     (rule "cut_direct" (formula "10") (term "0"))
                     (branch "CUT: self_0.receiver = null TRUE"
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "12") (term "1,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "close" (formula "29") (ifseqformula "1"))
                     )
                     (branch "CUT: self_0.receiver = null FALSE"
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "close" (formula "29") (ifseqformula "1"))
                     )
                  )
               )
            )
            (branch "CUT: result_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "14"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,1,0") (ifseqformula "2"))
               (rule "cut_direct" (formula "19") (term "0"))
               (branch "CUT: self_0.ballotCast = null TRUE"
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
                  (rule "cut_direct" (formula "11") (term "0"))
                  (branch "CUT: self_0.votesForCandidates = null TRUE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "close" (formula "22") (ifseqformula "20"))
                  )
                  (branch "CUT: self_0.votesForCandidates = null FALSE"
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "disjointDefinition" (formula "11"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "eqSymm" (formula "27"))
                     (rule "disjointDefinition" (formula "10"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "eqSymm" (formula "26"))
                     (rule "disjointDefinition" (formula "9"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "eqSymm" (formula "25"))
                     (rule "disjointDefinition" (formula "8"))
                     (rule "disjointDefinition" (formula "6"))
                     (rule "disjointDefinition" (formula "7"))
                     (rule "sortsDisjointModuloNull" (formula "27"))
                     (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
                     (rule "false_right" (formula "27"))
                     (rule "sortsDisjointModuloNull" (formula "26"))
                     (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
                     (rule "false_right" (formula "26"))
                     (rule "sortsDisjointModuloNull" (formula "25"))
                     (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
                     (rule "false_right" (formula "25"))
                     (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "23"))
                     (rule "commuteIntersection" (formula "8") (term "0"))
                     (rule "commuteIntersection" (formula "6") (term "0"))
                     (rule "commuteIntersection" (formula "7") (term "0"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "close" (formula "27") (ifseqformula "25"))
                  )
               )
               (branch "CUT: self_0.ballotCast = null FALSE"
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
                  (rule "cut_direct" (formula "11") (term "0"))
                  (branch "CUT: self_0.votesForCandidates = null TRUE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "6"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "close" (formula "22") (ifseqformula "11"))
                  )
                  (branch "CUT: self_0.votesForCandidates = null FALSE"
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "6"))
                     (rule "notLeft" (formula "6"))
                     (rule "close" (formula "22") (ifseqformula "1"))
                  )
               )
            )
         )
      )
      (branch "if x_55 false"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Exceptional Post (getResult)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "methodCallThrow" (formula "17") (term "1"))
   (rule "tryCatchThrow" (formula "17") (term "1"))
   (builtin "Loop Invariant" (formula "14") (newnames "heapBeforeLoop_3,iBeforeLoop_0,i_2,anon_heap_loop_3,o,f,variant_3,b_5"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "14") (term "0,0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "14") (term "0,1"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "14") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_geqRight" (formula "14"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_52"))
      (rule "equality_comparison_simple" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "ifElseSplit" (formula "18"))
      (branch "if x_52 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_52 false"
         (builtin "One Step Simplification" (formula "19"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "18"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "instanceof_static_type" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "e_4"))
            (rule "reference_type_cast" (formula "18"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "18"))
               (rule "assignment" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "emptyModality" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
               (rule "allRight" (formula "18") (inst "sk=f_4"))
               (rule "allRight" (formula "18") (inst "sk=o_4"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "eqSymm" (formula "21"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_4_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "closeTrue" (formula "22"))
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
               (builtin "One Step Simplification" (formula "19"))
               (rule "false_right" (formula "19"))
               (rule "instanceof_static_type" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "closeTrue" (formula "18"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "notLeft" (formula "1"))
            (rule "instanceof_static_type" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "closeTrue" (formula "15"))
         )
      )
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
      (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1"))
      (rule "andLeft" (formula "14"))
      (rule "impRight" (formula "17"))
      (rule "andLeft" (formula "15"))
      (rule "eqSymm" (formula "19") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "16"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_5_2"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "rtrn_4"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "returnExpr_4"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_6"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc_4"))
      (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "compound_less_than_comparison_2" (formula "17") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_44"))
      (rule "assignment" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_45"))
      (rule "assignment_read_attribute_this" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "less_than_comparison_simple" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_46"))
      (rule "emptyModality" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "notRight" (formula "17"))
      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0"))
      (rule "qeq_literals" (formula "16") (term "0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "equality_comparison_simple" (formula "21") (term "1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "replace_known_right" (formula "21") (term "0,0,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_47"))
      (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_49") (inst "#v0=x_48"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_48"))
      (rule "assignment" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_49"))
      (rule "assignment_read_attribute_this" (formula "19"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "less_than_comparison_simple" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
      (rule "replace_known_left" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "ifElseSplit" (formula "22"))
      (branch "if x_46 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_46 false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "1"))
         (rule "ifSplit" (formula "19"))
         (branch "if x_47 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_50"))
            (rule "compound_assignment_2" (formula "19") (term "1") (inst "#v=x_51"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_51"))
            (rule "eval_order_array_access4" (formula "19") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_5"))
            (rule "assignment_read_attribute_this" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "assignment_array2" (formula "19"))
            (branch "Normal Execution (x_arr_5 != null)"
               (builtin "One Step Simplification" (formula "19"))
               (rule "compound_assignment_1_new" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "ifElseSplit" (formula "22"))
               (branch "if exc_1 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "e_3"))
                  (rule "reference_type_cast" (formula "22"))
                  (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "assignment" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "emptyModality" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")) (ifInst ""  (formula "14")))
                     (rule "allRight" (formula "22") (inst "sk=f_3"))
                     (rule "allRight" (formula "22") (inst "sk=o_3"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "eqSymm" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_3_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
                  (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "instanceof_static_type" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
               )
               (branch "if exc_1 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "closeTrue" (formula "18"))
               )
            )
            (branch "Null Reference (x_arr_5 = null)"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "false_right" (formula "20"))
               (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "1"))
               (rule "ifElseSplit" (formula "22"))
               (branch "if exc_1 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "e_2"))
                  (rule "reference_type_cast" (formula "22"))
                  (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "assignment" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "emptyModality" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")) (ifInst ""  (formula "15")))
                     (rule "allRight" (formula "22") (inst "sk=f_2"))
                     (rule "allRight" (formula "22") (inst "sk=o_2"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "eqSymm" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_2_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
                  (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
                     (rule "false_right" (formula "23"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                     (rule "instanceof_static_type" (formula "22") (term "0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "closeTrue" (formula "22"))
                  )
               )
               (branch "if exc_1 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "closeTrue" (formula "19"))
               )
            )
            (branch "Index Out of Bounds (x_arr_5 != null, but i Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "false_right" (formula "20"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "ifElseSplit" (formula "23"))
               (branch "if exc_1 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "e_1"))
                  (rule "reference_type_cast" (formula "23"))
                  (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "assignment" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "emptyModality" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")) (ifInst ""  (formula "15")))
                     (rule "allRight" (formula "23") (inst "sk=f_1"))
                     (rule "allRight" (formula "23") (inst "sk=o_1"))
                     (rule "orRight" (formula "23"))
                     (rule "orRight" (formula "23"))
                     (rule "orRight" (formula "23"))
                     (rule "eqSymm" (formula "26"))
                     (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=f_1_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "closeTrue" (formula "27"))
                  )
                  (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "24"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                     (rule "false_right" (formula "24"))
                     (rule "instanceof_static_type" (formula "23") (term "0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "closeTrue" (formula "23"))
                  )
               )
               (branch "if exc_1 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "closeTrue" (formula "19"))
               )
            )
         )
         (branch "if x_47 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
      (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_5_1"))
      (rule "blockEmpty" (formula "18") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
      (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_41"))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_42"))
      (rule "assignment_read_attribute_this" (formula "18"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "less_than_comparison_simple" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (rule "emptyModality" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "impRight" (formula "18"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "17"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
      (rule "inEqSimp_homoInEq1" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
      (rule "add_literals" (formula "16") (term "1,0"))
      (rule "times_zero_1" (formula "16") (term "0"))
      (rule "leq_literals" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "methodCallReturn" (formula "18") (term "1"))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "emptyModality" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "false_right" (formula "18"))
      (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_43"))
      (rule "equality_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "ifElseSplit" (formula "21"))
      (branch "if x_43 true"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_43 false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "21"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "instanceof_static_type" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "21"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "21"))
               (rule "assignment" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "emptyModality" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "13")))
               (rule "allRight" (formula "21") (inst "sk=f_0"))
               (rule "allRight" (formula "21") (inst "sk=o_0"))
               (rule "orRight" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "eqSymm" (formula "24"))
               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
               (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "closeTrue" (formula "25"))
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
               (builtin "One Step Simplification" (formula "22"))
               (rule "false_right" (formula "22"))
               (rule "instanceof_static_type" (formula "21") (term "0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "notLeft" (formula "1"))
            (rule "instanceof_static_type" (formula "18") (term "0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "closeTrue" (formula "18"))
         )
      )
   )
)
(branch "Pre (getResult)"
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "5")) (ifInst ""  (formula "10")) (ifInst ""  (formula "7")) (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
   (rule "Query_axiom_for_resultReady_in_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "12") (term "0,0") (inst "resultReady_sk=resultReady_sk_1") (inst "#self=s") (inst "#res=x") (ifseqformula "3"))
   (rule "eqSymm" (formula "1") (term "0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "13") (term "0,1"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "apply_eq_boolean_rigid" (formula "9") (term "1,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_resultReady_0,savedHeapBefore_resultReady_0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (builtin "Loop Invariant" (formula "10") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "10") (term "0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "10") (term "0,1"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_geqRight" (formula "10"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (builtin "Loop Invariant" (formula "10") (newnames "heapBeforeLoop_2,i_1BeforeLoop_1,i_1_2,anon_heap_loop_2,o,f,variant_2,b_4"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "6")) (ifInst ""  (formula "2")))
         (rule "leq_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,1"))
         (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "false_right" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "8") (term "0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
         (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
         (rule "cut_direct" (formula "11") (term "0"))
         (branch "CUT: self_0.votesForCandidates = null TRUE"
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "6"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
            (rule "arrayLengthNotNegative" (formula "6") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "CUT: self_0.votesForCandidates = null FALSE"
            (builtin "One Step Simplification" (formula "11"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "6"))
            (rule "notLeft" (formula "6"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "7"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "7"))
            (rule "notLeft" (formula "7"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "7"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
            (rule "arrayLengthNotNegative" (formula "7") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "closeFalse" (formula "7"))
         )
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "6")))
         (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,1"))
         (rule "andLeft" (formula "11"))
         (rule "impRight" (formula "13"))
         (rule "andLeft" (formula "12"))
         (rule "eqSymm" (formula "15") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_4_2"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "rtrn_3"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "returnExpr_3"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "exc_5"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "thrownExc_3"))
         (rule "blockThrow" (formula "15") (term "1,0,0,1"))
         (rule "blockReturn" (formula "15") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "15") (term "1,0,0,1"))
         (rule "blockReturn" (formula "15") (term "1,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
         (rule "polySimp_addComm0" (formula "13") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "13"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "closeFalse" (formula "12"))
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "6")))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_4_1"))
         (rule "blockEmpty" (formula "14") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "12"))
         (rule "qeq_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "closeFalse" (formula "11"))
      )
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "5")))
      (builtin "One Step Simplification" (formula "12"))
      (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,1"))
      (rule "andLeft" (formula "10"))
      (rule "impRight" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "eqSymm" (formula "15") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "12"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "rtrn_1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "returnExpr_1"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "exc_3"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "thrownExc_1"))
      (rule "blockReturn" (formula "15") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "15") (term "1,0,0,1"))
      (rule "blockReturn" (formula "15") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "15") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "15") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "15") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_12"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_13"))
      (rule "assignment_read_attribute_this" (formula "13"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "less_than_comparison_simple" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (builtin "Loop Invariant" (formula "14") (newnames "heapBeforeLoop_1,i_1BeforeLoop_0,i_1_1,anon_heap_loop_1,o,f,variant_1,b_3"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
         (rule "leq_literals" (formula "14") (term "0,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "14") (term "0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_geqRight" (formula "14"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
         (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "11"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "closeFalse" (formula "12"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
         (builtin "One Step Simplification" (formula "16"))
         (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1"))
         (rule "andLeft" (formula "14"))
         (rule "impRight" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "eqSymm" (formula "19") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_3_2"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "rtrn_2"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "returnExpr_2"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_4"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc_2"))
         (rule "blockThrow" (formula "19") (term "1,0,0,1"))
         (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "19") (term "1,0,0,1"))
         (rule "blockReturn" (formula "19") (term "1,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,1,0,1"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "notRight" (formula "18"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "arrayLengthNotNegative" (formula "8") (term "0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_19"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_20"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_21"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_23") (inst "#v0=x_22"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_22"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_23"))
         (rule "assignment_read_attribute_this" (formula "20"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "less_than_comparison_simple" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "20") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "notRight" (formula "18"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0"))
         (rule "add_literals" (formula "17") (term "0,0"))
         (rule "qeq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_24"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_26") (inst "#v0=x_25"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_25"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_26"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "ifSplit" (formula "19"))
         (branch "if x_21 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_27"))
            (rule "compound_assignment_2" (formula "19") (term "1") (inst "#v=x_28"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_28"))
            (rule "eval_order_array_access4" (formula "19") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_1"))
            (rule "assignment_read_attribute_this" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "assignment_array2" (formula "19"))
            (branch "Normal Execution (x_arr_1 != null)"
               (builtin "One Step Simplification" (formula "19"))
               (rule "compound_assignment_1_new" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,1,0") (ifseqformula "3"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_24 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_35"))
                  (rule "compound_assignment_2" (formula "20") (term "1") (inst "#v=x_36"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_36"))
                  (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_4"))
                  (rule "assignment_read_attribute_this" (formula "20"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignment_array2" (formula "20"))
                  (branch "Normal Execution (x_arr_4 != null)"
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "compound_assignment_1_new" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "ifSplit" (formula "21"))
                     (branch "if x_27 true"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "blockBreakNoLabel" (formula "22") (term "1"))
                        (rule "blockBreakLabel" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallReturn" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch "if x_27 false"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "preincrement" (formula "22") (term "1"))
                        (rule "unusedLabel" (formula "22") (term "1"))
                        (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_39"))
                        (rule "remove_parentheses_right" (formula "22") (term "1"))
                        (rule "assignmentAdditionInt" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "8")))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "22") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "22") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
                        (rule "times_zero_2" (formula "22") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "0,1,1"))
                        (rule "leq_literals" (formula "22") (term "1,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0"))
                        (rule "mul_literals" (formula "22") (term "1,0"))
                        (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "16"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "allRight" (formula "22") (inst "sk=j_6"))
                        (rule "orRight" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "inEqSimp_geqRight" (formula "23"))
                        (rule "inEqSimp_leqRight" (formula "23"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,1,0") (ifseqformula "6"))
                        (rule "ifSplit" (formula "24"))
                        (branch "if x_35 true"
                           (builtin "One Step Simplification" (formula "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "notLeft" (formula "1"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "blockBreakNoLabel" (formula "25") (term "1"))
                           (rule "blockBreakLabel" (formula "25") (term "1"))
                           (rule "blockEmpty" (formula "25") (term "1"))
                           (rule "tryEmpty" (formula "25") (term "1"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (rule "emptyModality" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "methodCallReturn" (formula "25") (term "1"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "emptyModality" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "cut_direct" (formula "15") (term "0"))
                           (branch "CUT: self_0.votesForCandidates = null TRUE"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "15"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "19"))
                                 (rule "allLeft" (formula "23") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                 (rule "times_zero_1" (formula "22") (term "0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0"))
                                 (rule "allLeft" (formula "20") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "20"))
                                 (rule "close" (formula "28") (ifseqformula "3"))
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "20") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "20"))
                                 (rule "close" (formula "28") (ifseqformula "3"))
                              )
                           )
                           (branch "CUT: self_0.votesForCandidates = null FALSE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "19"))
                                 (rule "allLeft" (formula "23") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "22") (term "0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0"))
                                 (rule "allLeft" (formula "20") (inst "t=i_1_1"))
                                 (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "24"))
                                 (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,0"))
                                 (rule "times_zero_1" (formula "24") (term "0"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "20"))
                                 (rule "close" (formula "26") (ifseqformula "3"))
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "20") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "18"))
                                 (rule "close" (formula "26") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "if x_35 false"
                           (builtin "One Step Simplification" (formula "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "blockEmpty" (formula "25") (term "1"))
                           (rule "preincrement" (formula "25") (term "1"))
                           (rule "unusedLabel" (formula "25") (term "1"))
                           (rule "compound_int_cast_expression" (formula "25") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "25") (term "1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_40"))
                           (rule "remove_parentheses_right" (formula "25") (term "1"))
                           (rule "assignmentAdditionInt" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "25") (term "1"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "tryEmpty" (formula "25") (term "1"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (rule "emptyModality" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "5")) (ifInst ""  (formula "11")))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,0,0,1"))
                           (rule "precOfInt" (formula "25") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,1,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,1,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "25") (term "0,1,1"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                           (rule "times_zero_2" (formula "25") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                           (rule "add_literals" (formula "25") (term "0,0,0,1,1"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                           (rule "add_literals" (formula "25") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "25") (term "0,1,1"))
                           (rule "leq_literals" (formula "25") (term "1,1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_subsumption1" (formula "25") (term "0") (ifseqformula "23"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "allRight" (formula "25") (inst "sk=j_7"))
                           (rule "orRight" (formula "25"))
                           (rule "orRight" (formula "25"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "26"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "cut_direct" (formula "18") (term "0"))
                           (branch "CUT: self_0.votesForCandidates = null TRUE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "19") (term "1,1,1,0") (ifseqformula "18"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "22"))
                                 (rule "allLeft" (formula "26") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "25") (term "0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0"))
                                 (rule "allLeft" (formula "28") (inst "t=j_7"))
                                 (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_antiSymm" (formula "28") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "28"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                 (rule "add_literals" (formula "29") (term "1,0"))
                                 (rule "times_zero_1" (formula "29") (term "0"))
                                 (rule "leq_literals" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "28"))
                                 (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "27"))
                                 (rule "close" (formula "29") (ifseqformula "2"))
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "5"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,0"))
                                 (rule "times_zero_1" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "23"))
                                 (rule "close" (formula "30") (ifseqformula "6"))
                              )
                           )
                           (branch "CUT: self_0.votesForCandidates = null FALSE"
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: self_0.ballotCast = null TRUE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,0"))
                                 (rule "times_zero_1" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "21"))
                                 (rule "close" (formula "28") (ifseqformula "4"))
                              )
                              (branch "CUT: self_0.ballotCast = null FALSE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=j_6"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,0"))
                                 (rule "times_zero_1" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "21"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_4 = null)"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "false_right" (formula "21"))
                     (rule "applyEq" (formula "21") (term "1,0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "ifSplit" (formula "21"))
                     (branch "if x_27 true"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "blockBreakNoLabel" (formula "22") (term "1"))
                        (rule "blockBreakLabel" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallReturn" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch "if x_27 false"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "unusedLabel" (formula "22") (term "1"))
                        (rule "preincrement" (formula "22") (term "1"))
                        (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_38"))
                        (rule "remove_parentheses_right" (formula "22") (term "1"))
                        (rule "assignmentAdditionInt" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "4")) (ifInst ""  (formula "9")))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "22") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "22") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
                        (rule "times_zero_2" (formula "22") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "0,1,1"))
                        (rule "leq_literals" (formula "22") (term "1,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEq" (formula "22") (term "1,0,1,0,1,0") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "allRight" (formula "22") (inst "sk=j_5"))
                        (rule "orRight" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "23"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "16"))
                           (rule "allLeft" (formula "23") (inst "t=j_5"))
                           (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                           (rule "mul_literals" (formula "22") (term "0,0"))
                           (rule "add_zero_left" (formula "22") (term "0"))
                           (rule "allLeft" (formula "20") (inst "t=j_5"))
                           (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_commuteGeq" (formula "26"))
                           (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "20"))
                           (rule "close" (formula "27") (ifseqformula "3"))
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "allLeft" (formula "23") (inst "t=j_5"))
                           (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                           (rule "mul_literals" (formula "22") (term "0,0"))
                           (rule "add_zero_left" (formula "22") (term "0"))
                           (rule "allLeft" (formula "20") (inst "t=j_5"))
                           (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,0"))
                           (rule "times_zero_1" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "20"))
                           (rule "close" (formula "28") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "Index Out of Bounds (x_arr_4 != null, but i_1 Out of Bounds!)"
                     (rule "false_right" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "ifSplit" (formula "22"))
                     (branch "if x_27 true"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "blockBreakNoLabel" (formula "23") (term "1"))
                        (rule "blockBreakLabel" (formula "23") (term "1"))
                        (rule "blockEmpty" (formula "23") (term "1"))
                        (rule "tryEmpty" (formula "23") (term "1"))
                        (rule "methodCallEmpty" (formula "23") (term "1"))
                        (rule "emptyModality" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "methodCallReturn" (formula "23") (term "1"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "methodCallEmpty" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "emptyModality" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "closeTrue" (formula "23"))
                     )
                     (branch "if x_27 false"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "blockEmpty" (formula "23") (term "1"))
                        (rule "unusedLabel" (formula "23") (term "1"))
                        (rule "preincrement" (formula "23") (term "1"))
                        (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "23") (term "1"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_37"))
                        (rule "remove_parentheses_right" (formula "23") (term "1"))
                        (rule "assignmentAdditionInt" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "23") (term "1"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "tryEmpty" (formula "23") (term "1"))
                        (rule "methodCallEmpty" (formula "23") (term "1"))
                        (rule "emptyModality" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "4")) (ifInst ""  (formula "9")))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0,1"))
                        (rule "mul_literals" (formula "23") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "23") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                        (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "23") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                        (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "23") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,1"))
                        (rule "add_literals" (formula "23") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "23") (term "0,1,1"))
                        (rule "leq_literals" (formula "23") (term "1,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                        (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                        (rule "mul_literals" (formula "23") (term "1,0"))
                        (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "17"))
                        (rule "leq_literals" (formula "23") (term "0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "allRight" (formula "23") (inst "sk=j_4"))
                        (rule "orRight" (formula "23"))
                        (rule "orRight" (formula "23"))
                        (rule "inEqSimp_leqRight" (formula "23"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "24"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "16"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "allLeft" (formula "24") (inst "t=j_4"))
                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "allLeft" (formula "21") (inst "t=j_4"))
                           (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "22"))
                           (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,0"))
                           (rule "times_zero_1" (formula "22") (term "0"))
                           (rule "leq_literals" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "20"))
                           (rule "close" (formula "28") (ifseqformula "2"))
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1,0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "allLeft" (formula "24") (inst "t=j_4"))
                           (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "allLeft" (formula "21") (inst "t=j_4"))
                           (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                           (rule "add_literals" (formula "21") (term "1,0"))
                           (rule "times_zero_1" (formula "21") (term "0"))
                           (rule "leq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "20"))
                           (rule "close" (formula "29") (ifseqformula "2"))
                        )
                     )
                  )
               )
               (branch "if x_24 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_1 = null)"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "false_right" (formula "20"))
               (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
               (rule "ifSplit" (formula "21"))
               (branch "if x_24 true"
                  (builtin "One Step Simplification" (formula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_32"))
                  (rule "compound_assignment_2" (formula "21") (term "1") (inst "#v=x_33"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_33"))
                  (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_3"))
                  (rule "assignment_read_attribute_this" (formula "21"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment_array2" (formula "21"))
                  (branch "Normal Execution (x_arr_3 != null)"
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "1"))
                     (rule "compound_assignment_1_new" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "ifSplit" (formula "21"))
                     (branch "if x_32 true"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "blockBreakNoLabel" (formula "22") (term "1"))
                        (rule "blockBreakLabel" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallReturn" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "false_right" (formula "22"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                           (rule "allLeft" (formula "17") (inst "t=i_1_1"))
                           (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allLeft" (formula "14") (inst "t=i_1_1"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "14") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 TRUE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "8"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "8") (inst "r=r") (inst "i=i_2"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "exLeft" (formula "8") (inst "sk=i_2_6"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "inEqSimp_ltToLeq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "disjointDefinition" (formula "12"))
                              (rule "castedGetAny" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "11") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "11") (term "0,0"))
                              (rule "commute_or_2" (formula "11") (term "0"))
                              (rule "commute_or" (formula "11") (term "0,0,0"))
                              (rule "commute_or_2" (formula "11") (term "0,0"))
                              (rule "cnf_rightDist" (formula "11") (term "0"))
                              (rule "distr_forallAnd" (formula "11"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "castDel" (formula "11") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "shift_paren_or" (formula "11") (term "0"))
                              (rule "commute_or" (formula "11") (term "0,0"))
                              (rule "commuteIntersection" (formula "12") (term "0"))
                              (rule "intersectWithSingleton" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "lenNonNegative" (formula "9") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1") (ifseqformula "4"))
                              (rule "cut_direct" (formula "11") (term "0"))
                              (branch "CUT: self_0.receiver = null TRUE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "11"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,1,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "close" (formula "29") (ifseqformula "19"))
                              )
                              (branch "CUT: self_0.receiver = null FALSE"
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "close" (formula "29") (ifseqformula "19"))
                              )
                           )
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "9"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "9") (inst "r=r") (inst "i=i_2"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "exLeft" (formula "9") (inst "sk=i_2_5"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "disjointDefinition" (formula "13"))
                              (rule "castedGetAny" (formula "11") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "12") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "12") (term "0,0"))
                              (rule "commute_or_2" (formula "12") (term "0"))
                              (rule "commute_or" (formula "12") (term "0,0,0"))
                              (rule "commute_or_2" (formula "12") (term "0,0"))
                              (rule "cnf_rightDist" (formula "12") (term "0"))
                              (rule "distr_forallAnd" (formula "12"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "castDel" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "12") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "shift_paren_or" (formula "12") (term "0"))
                              (rule "commute_or" (formula "12") (term "0,0"))
                              (rule "commuteIntersection" (formula "13") (term "0"))
                              (rule "intersectWithSingleton" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "notLeft" (formula "13"))
                              (rule "lenNonNegative" (formula "10") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1") (ifseqformula "5"))
                              (rule "cut_direct" (formula "12") (term "0"))
                              (branch "CUT: self_0.receiver = null TRUE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "1,1,0,1,0") (ifseqformula "12"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "close" (formula "30") (ifseqformula "20"))
                              )
                              (branch "CUT: self_0.receiver = null FALSE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "close" (formula "30") (ifseqformula "20"))
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "allLeft" (formula "17") (inst "t=i_1_1"))
                           (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "20"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allLeft" (formula "14") (inst "t=i_1_1"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "14") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 TRUE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                              (rule "mul_literals" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "8"))
                              (rule "notLeft" (formula "8"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "8"))
                              (rule "notLeft" (formula "8"))
                              (rule "close" (formula "23") (ifseqformula "1"))
                           )
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "9"))
                              (rule "notLeft" (formula "9"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "9"))
                              (rule "notLeft" (formula "9"))
                              (rule "close" (formula "24") (ifseqformula "2"))
                           )
                        )
                     )
                     (branch "if x_32 false"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "unusedLabel" (formula "22") (term "1"))
                        (rule "preincrement" (formula "22") (term "1"))
                        (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_34"))
                        (rule "remove_parentheses_right" (formula "22") (term "1"))
                        (rule "assignmentAdditionInt" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "9")))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "22") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "22") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
                        (rule "times_zero_2" (formula "22") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "0,1,1"))
                        (rule "leq_literals" (formula "22") (term "1,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEq" (formula "22") (term "1,0,1,0,1,0") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "20"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "allRight" (formula "22") (inst "sk=j_3"))
                        (rule "orRight" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "23"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "16"))
                           (rule "allLeft" (formula "20") (inst "t=j_3"))
                           (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1"))
                           (rule "allLeft" (formula "25") (inst "t=j_3"))
                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "25"))
                           (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "24"))
                           (rule "close" (formula "27") (ifseqformula "3"))
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "allLeft" (formula "20") (inst "t=j_3"))
                           (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                           (rule "polySimp_elimOne" (formula "20") (term "1"))
                           (rule "allLeft" (formula "25") (inst "t=j_3"))
                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "1"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "1,0"))
                           (rule "times_zero_1" (formula "26") (term "0"))
                           (rule "leq_literals" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "24"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "23"))
                           (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "22"))
                           (rule "close" (formula "25") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_3 = null)"
                     (rule "false_right" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                     (rule "true_left" (formula "1"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "1"))
                        (rule "arrayLengthIsAnInt" (formula "9") (term "1"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "disjointDefinition" (formula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "eqSymm" (formula "29"))
                        (rule "disjointDefinition" (formula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "eqSymm" (formula "28"))
                        (rule "disjointDefinition" (formula "14"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "eqSymm" (formula "27"))
                        (rule "disjointDefinition" (formula "13"))
                        (rule "disjointDefinition" (formula "11"))
                        (rule "disjointDefinition" (formula "12"))
                        (rule "sortsDisjointModuloNull" (formula "29"))
                        (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "19")))
                        (rule "closeTrue" (formula "29"))
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "8"))
                        (rule "notLeft" (formula "8"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "9"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "9"))
                        (rule "arrayLengthIsAnInt" (formula "9") (term "1"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "12"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "12") (inst "r=r") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "exLeft" (formula "12") (inst "sk=i_2_4"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "disjointDefinition" (formula "16"))
                        (rule "castedGetAny" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                        (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0,0"))
                        (rule "commute_or_2" (formula "15") (term "0,0"))
                        (rule "cnf_rightDist" (formula "15") (term "0"))
                        (rule "distr_forallAnd" (formula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "shift_paren_or" (formula "15") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commuteIntersection" (formula "16") (term "0"))
                        (rule "intersectWithSingleton" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "lenNonNegative" (formula "13") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "11"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "disjointDefinition" (formula "22"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "eqSymm" (formula "35"))
                        (rule "disjointDefinition" (formula "21"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "eqSymm" (formula "34"))
                        (rule "disjointDefinition" (formula "20"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "eqSymm" (formula "33"))
                        (rule "disjointDefinition" (formula "19"))
                        (rule "disjointDefinition" (formula "17"))
                        (rule "disjointDefinition" (formula "18"))
                        (rule "sortsDisjointModuloNull" (formula "35"))
                        (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "3")))
                        (rule "false_right" (formula "35"))
                        (rule "sortsDisjointModuloNull" (formula "34"))
                        (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                        (rule "false_right" (formula "34"))
                        (rule "sortsDisjointModuloNull" (formula "33"))
                        (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")))
                        (rule "false_right" (formula "33"))
                        (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "3"))
                        (rule "commuteIntersection" (formula "19") (term "0"))
                        (rule "commuteIntersection" (formula "17") (term "0"))
                        (rule "commuteIntersection" (formula "18") (term "0"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "20"))
                        (rule "eqSymm" (formula "20"))
                        (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "close" (formula "34") (ifseqformula "3"))
                     )
                  )
                  (branch "Index Out of Bounds (x_arr_3 != null, but i_1 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if x_24 false"
                  (builtin "One Step Simplification" (formula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Index Out of Bounds (x_arr_1 != null, but i Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "false_right" (formula "20"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "14"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1,0") (ifseqformula "4"))
               (rule "ifSplit" (formula "22"))
               (branch "if x_24 true"
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_29"))
                  (rule "compound_assignment_2" (formula "22") (term "1") (inst "#v=x_30"))
                  (rule "variableDeclarationAssign" (formula "22") (term "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_30"))
                  (rule "eval_order_array_access4" (formula "22") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "22") (term "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr_2"))
                  (rule "assignment_read_attribute_this" (formula "22"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "assignment_array2" (formula "22"))
                  (branch "Normal Execution (x_arr_2 != null)"
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "compound_assignment_1_new" (formula "22") (term "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,0,1,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "ifSplit" (formula "23"))
                     (branch "if x_29 true"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "assignment" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "blockBreakNoLabel" (formula "24") (term "1"))
                        (rule "blockBreakLabel" (formula "24") (term "1"))
                        (rule "blockEmpty" (formula "24") (term "1"))
                        (rule "tryEmpty" (formula "24") (term "1"))
                        (rule "methodCallEmpty" (formula "24") (term "1"))
                        (rule "emptyModality" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "methodCallReturn" (formula "24") (term "1"))
                        (rule "assignment" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "methodCallEmpty" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "emptyModality" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "13"))
                           (rule "allLeft" (formula "18") (inst "t=i_1_1"))
                           (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "18") (term "0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "allLeft" (formula "15") (inst "t=i_1_1"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "cut_direct" (formula "15") (term "0"))
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 TRUE"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "9"))
                              (rule "notLeft" (formula "9"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "5"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "11"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "12"))
                              (rule "eqSymm" (formula "12"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "18"))
                              (rule "eqSymm" (formula "12"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "arrayLengthIsAnInt" (formula "12") (term "1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "arrayLengthNotNegative" (formula "12") (term "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "13"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "13") (inst "r=r") (inst "i=i_2"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "exLeft" (formula "13") (inst "sk=i_2_3"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "disjointDefinition" (formula "17"))
                              (rule "castedGetAny" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "commute_or" (formula "16") (term "0,0,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0"))
                              (rule "cnf_rightDist" (formula "16") (term "0"))
                              (rule "distr_forallAnd" (formula "16"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "castDel" (formula "16") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "16") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "shift_paren_or" (formula "16") (term "0"))
                              (rule "commute_or" (formula "16") (term "0,0"))
                              (rule "commuteIntersection" (formula "17") (term "0"))
                              (rule "intersectWithSingleton" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "lenNonNegative" (formula "14") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "18"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "4"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,1,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0"))
                              (rule "add_zero_right" (formula "6") (term "0"))
                              (rule "leq_literals" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 FALSE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "11"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "11") (inst "r=r") (inst "i=i_2"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "exLeft" (formula "11") (inst "sk=i_2_2"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "disjointDefinition" (formula "15"))
                              (rule "castedGetAny" (formula "13") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "14") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0,0"))
                              (rule "commute_or_2" (formula "14") (term "0,0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "shift_paren_or" (formula "14") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0"))
                              (rule "commuteIntersection" (formula "15") (term "0"))
                              (rule "intersectWithSingleton" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "lenNonNegative" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1") (ifseqformula "7"))
                              (rule "cut_direct" (formula "14") (term "0"))
                              (branch "CUT: self_0.receiver = null TRUE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "14"))
                                 (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "applyEq" (formula "16") (term "1,1,0,1,0") (ifseqformula "14"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "close" (formula "33") (ifseqformula "22"))
                              )
                              (branch "CUT: self_0.receiver = null FALSE"
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "close" (formula "33") (ifseqformula "22"))
                              )
                           )
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "allLeft" (formula "18") (inst "t=i_1_1"))
                           (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "18") (term "0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "allLeft" (formula "15") (inst "t=i_1_1"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "cut_direct" (formula "15") (term "0"))
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 TRUE"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "9"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "10"))
                              (rule "eqSymm" (formula "10"))
                              (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                              (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "11"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "CUT: self_0.numberOfCandidates ≤ i_1_1 FALSE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "10"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "11"))
                              (rule "eqSymm" (formula "11"))
                              (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                              (rule "arrayLengthIsAnInt" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "12"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                     )
                     (branch "if x_29 false"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "24") (term "1"))
                        (rule "preincrement" (formula "24") (term "1"))
                        (rule "compound_int_cast_expression" (formula "24") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_31"))
                        (rule "unusedLabel" (formula "24") (term "1"))
                        (rule "remove_parentheses_right" (formula "24") (term "1"))
                        (rule "assignmentAdditionInt" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "24") (term "1"))
                        (rule "assignment" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "tryEmpty" (formula "24") (term "1"))
                        (rule "methodCallEmpty" (formula "24") (term "1"))
                        (rule "emptyModality" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")) (ifInst ""  (formula "9")))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,1"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "24") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,1,1"))
                        (rule "add_literals" (formula "24") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "24") (term "0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
                        (rule "times_zero_2" (formula "24") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,1"))
                        (rule "add_literals" (formula "24") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "24") (term "0,1,1"))
                        (rule "leq_literals" (formula "24") (term "1,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_subsumption1" (formula "24") (term "0") (ifseqformula "21"))
                        (rule "leq_literals" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "allRight" (formula "24") (inst "sk=j_2"))
                        (rule "orRight" (formula "24"))
                        (rule "orRight" (formula "24"))
                        (rule "inEqSimp_leqRight" (formula "24"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "25"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_0.votesForCandidates = null TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "16"))
                           (rule "arrayLengthIsAnInt" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "allLeft" (formula "22") (inst "t=j_2"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "22") (term "0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1"))
                           (rule "allLeft" (formula "27") (inst "t=j_2"))
                           (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "27") (term "0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "26"))
                           (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "25"))
                           (rule "close" (formula "29") (ifseqformula "1"))
                        )
                        (branch "CUT: self_0.votesForCandidates = null FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "add_zero_left" (formula "4") (term "0"))
                           (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "allLeft" (formula "22") (inst "t=j_2"))
                           (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "22") (term "0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1"))
                           (rule "allLeft" (formula "27") (inst "t=j_2"))
                           (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "27") (term "0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "32") (term "0,2,0") (ifseqformula "27"))
                           (rule "close" (formula "32") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_2 = null)"
                     (rule "false_right" (formula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_2 != null, but i_1 Out of Bounds!)"
                     (rule "false_right" (formula "23"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "cut_direct" (formula "14") (term "0"))
                     (branch "CUT: self_0.votesForCandidates = null TRUE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "14"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0,1,0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "arrayLengthIsAnInt" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "10"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "10") (inst "r=r") (inst "i=i_2"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "exLeft" (formula "10") (inst "sk=i_2_1"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "inEqSimp_ltToLeq" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "disjointDefinition" (formula "14"))
                        (rule "castedGetAny" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
                        (rule "nnf_notOr" (formula "13") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0,0"))
                        (rule "commute_or_2" (formula "13") (term "0,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0"))
                        (rule "distr_forallAnd" (formula "13"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "castDel" (formula "13") (term "0,1,0,0,0"))
                        (rule "castDel" (formula "13") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "shift_paren_or" (formula "13") (term "0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commuteIntersection" (formula "14") (term "0"))
                        (rule "intersectWithSingleton" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "lenNonNegative" (formula "11") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1") (ifseqformula "6"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self_0.receiver = null TRUE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "13"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1,0") (ifseqformula "13"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "close" (formula "31") (ifseqformula "14"))
                        )
                        (branch "CUT: self_0.receiver = null FALSE"
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "disjointDefinition" (formula "22"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "eqSymm" (formula "36"))
                           (rule "disjointDefinition" (formula "21"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "eqSymm" (formula "35"))
                           (rule "disjointDefinition" (formula "20"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "notLeft" (formula "20"))
                           (rule "eqSymm" (formula "34"))
                           (rule "disjointDefinition" (formula "19"))
                           (rule "disjointDefinition" (formula "17"))
                           (rule "disjointDefinition" (formula "18"))
                           (rule "sortsDisjointModuloNull" (formula "36"))
                           (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                           (rule "false_right" (formula "36"))
                           (rule "sortsDisjointModuloNull" (formula "35"))
                           (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "41")))
                           (rule "false_right" (formula "35"))
                           (rule "sortsDisjointModuloNull" (formula "34"))
                           (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                           (rule "false_right" (formula "34"))
                           (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "25"))
                           (rule "commuteIntersection" (formula "17") (term "0"))
                           (rule "commuteIntersection" (formula "18") (term "0"))
                           (rule "commuteIntersection" (formula "19") (term "0"))
                           (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "20"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "4"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_literals" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch "CUT: self_0.votesForCandidates = null FALSE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0,1,0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "10"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "disjointDefinition" (formula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "eqSymm" (formula "30"))
                        (rule "disjointDefinition" (formula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "eqSymm" (formula "29"))
                        (rule "disjointDefinition" (formula "14"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "eqSymm" (formula "28"))
                        (rule "disjointDefinition" (formula "13"))
                        (rule "disjointDefinition" (formula "11"))
                        (rule "disjointDefinition" (formula "12"))
                        (rule "sortsDisjointModuloNull" (formula "30"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "30"))
                        (rule "sortsDisjointModuloNull" (formula "29"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                        (rule "false_right" (formula "29"))
                        (rule "sortsDisjointModuloNull" (formula "28"))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "28"))
                        (rule "commuteIntersection" (formula "13") (term "0"))
                        (rule "commuteIntersection" (formula "11") (term "0"))
                        (rule "commuteIntersection" (formula "12") (term "0"))
                        (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "14"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "6"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_literals" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
               (branch "if x_24 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "if x_21 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_3_1"))
         (rule "blockEmpty" (formula "18") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "emptyModality" (formula "17") (term "1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "notRight" (formula "17"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
         (rule "add_literals" (formula "12") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "arrayLengthNotNegative" (formula "8") (term "0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_14"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_15"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "impRight" (formula "18"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "18"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
         (rule "leq_literals" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "applyEq" (formula "19") (term "1,0,1,1,1,0,0,0") (ifseqformula "16"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
         (rule "methodCallReturn" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_16"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_18") (inst "#v0=x_17"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_17"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_18"))
         (rule "assignment_read_attribute_this" (formula "19"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "16"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "closeTrue" (formula "18"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "5")))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_1"))
      (rule "blockEmpty" (formula "14") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
      (rule "assignment_read_attribute_this" (formula "14"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "less_than_comparison_simple" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "impRight" (formula "14"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "13"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq1" (formula "13"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "1,0"))
      (rule "times_zero_1" (formula "13") (term "0"))
      (rule "leq_literals" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCallReturn" (formula "14") (term "1"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "emptyModality" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "false_right" (formula "14"))
      (builtin "Loop Invariant" (formula "13") (newnames "heapBeforeLoop_0,i_1BeforeLoop,i_1_0,anon_heap_loop_0,o,f,variant_0,b_0"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
         (rule "leq_literals" (formula "13") (term "0,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0"))
         (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "allRight" (formula "13") (inst "sk=j_1"))
         (rule "impRight" (formula "13"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
         (rule "qeq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
         (builtin "One Step Simplification" (formula "15"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,1,0,1,1"))
         (rule "andLeft" (formula "14"))
         (rule "impRight" (formula "16"))
         (rule "andLeft" (formula "15"))
         (rule "eqSymm" (formula "18") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "18") (term "0,1,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "18") (term "0,1,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "rtrn"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "returnExpr"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "exc_2"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "thrownExc"))
         (rule "applyEq" (formula "18") (term "1,0,1,1,1,0,0,0") (ifseqformula "12"))
         (rule "polySimp_addComm0" (formula "18") (term "0,1,1,1,0,0,0"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "12"))
         (rule "inEqSimp_commuteGeq" (formula "16"))
         (rule "blockThrow" (formula "18") (term "1,0,0,1"))
         (rule "blockReturn" (formula "18") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "18") (term "1,0,0,1"))
         (rule "blockReturn" (formula "18") (term "1,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
         (rule "times_zero_1" (formula "15") (term "0,0"))
         (rule "add_zero_left" (formula "15") (term "0"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "18") (term "0,1,0,0,1,1,1,0,1"))
         (rule "nnf_notAnd" (formula "18") (term "0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "arrayLengthNotNegative" (formula "7") (term "0"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_4"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_5"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "12"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "notRight" (formula "18"))
         (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0"))
         (rule "qeq_literals" (formula "17") (term "0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
         (rule "times_zero_1" (formula "16") (term "0,0"))
         (rule "add_zero_left" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "16"))
         (rule "leq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_6"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_7"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_8"))
         (rule "assignment_read_attribute_this" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "12"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
         (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,0") (ifseqformula "2"))
         (rule "ifSplit" (formula "20"))
         (branch "if x_6 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
            (rule "compound_assignment_2" (formula "20") (term "1") (inst "#v=x_10"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
            (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "assignment_array2" (formula "20"))
            (branch "Normal Execution (x_arr != null)"
               (builtin "One Step Simplification" (formula "20"))
               (rule "compound_assignment_1_new" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_9 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "notLeft" (formula "1"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "blockBreakNoLabel" (formula "21") (term "1"))
                  (rule "blockBreakLabel" (formula "21") (term "1"))
                  (rule "blockEmpty" (formula "21") (term "1"))
                  (rule "tryEmpty" (formula "21") (term "1"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "methodCallReturn" (formula "21") (term "1"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "false_right" (formula "21"))
                  (rule "cut_direct" (formula "11") (term "0"))
                  (branch "CUT: self_0.votesForCandidates = null TRUE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "11"))
                     (rule "allLeft" (formula "15") (inst "t=i_1_0"))
                     (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "19"))
                     (rule "qeq_literals" (formula "15") (term "0,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: self_0.votesForCandidates = null FALSE"
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "allLeft" (formula "15") (inst "t=i_1_0"))
                     (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "19") (term "0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "closeFalse" (formula "19"))
                  )
               )
               (branch "if x_9 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "blockEmpty" (formula "21") (term "1"))
                  (rule "unusedLabel" (formula "21") (term "1"))
                  (rule "preincrement" (formula "21") (term "1"))
                  (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_11"))
                  (rule "remove_parentheses_right" (formula "21") (term "1"))
                  (rule "assignmentAdditionInt" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "21") (term "1"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "tryEmpty" (formula "21") (term "1"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "7")))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,0,0,1"))
                  (rule "precOfInt" (formula "21") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,1"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1"))
                  (rule "times_zero_2" (formula "21") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1"))
                  (rule "applyEq" (formula "21") (term "1,0,1,1") (ifseqformula "15"))
                  (rule "polySimp_pullOutFactor2" (formula "21") (term "0,1,1"))
                  (rule "add_literals" (formula "21") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "21") (term "0,1,1"))
                  (rule "leq_literals" (formula "21") (term "1,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "15"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                  (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                  (rule "replace_known_left" (formula "21") (term "1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "19"))
                  (rule "leq_literals" (formula "21") (term "0,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "allRight" (formula "21") (inst "sk=j_0"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "inEqSimp_leqRight" (formula "21"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "22"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "cut_direct" (formula "14") (term "0"))
                  (branch "CUT: self_0.votesForCandidates = null TRUE"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "14"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0,1,0") (ifseqformula "5"))
                     (rule "allLeft" (formula "23") (inst "t=j_0"))
                     (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "23") (term "0,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq1" (formula "24"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                     (rule "add_literals" (formula "24") (term "1,0"))
                     (rule "times_zero_1" (formula "24") (term "0"))
                     (rule "leq_literals" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "23"))
                     (rule "applyEqRigid" (formula "24") (term "0,2,0") (ifseqformula "22"))
                     (rule "close" (formula "24") (ifseqformula "2"))
                  )
                  (branch "CUT: self_0.votesForCandidates = null FALSE"
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0,1,0") (ifseqformula "5"))
                     (rule "allLeft" (formula "23") (inst "t=j_0"))
                     (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "23") (term "0,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "22"))
                     (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "21"))
                     (rule "close" (formula "25") (ifseqformula "1"))
                  )
               )
            )
            (branch "Null Reference (x_arr = null)"
               (rule "false_right" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "1"))
               (rule "cut_direct" (formula "12") (term "0"))
               (branch "CUT: self_0.votesForCandidates = null TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                  (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "8"))
                  (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                  (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "21"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "close" (formula "23") (ifseqformula "14"))
               )
               (branch "CUT: self_0.votesForCandidates = null FALSE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_Server" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "8"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "2"))
                  (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                  (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "21"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_20_in_Server" (formula "9"))
                  (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "9") (inst "r=r") (inst "i=i_2"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "exLeft" (formula "9") (inst "sk=i_2_0"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "9"))
                  (rule "disjointDefinition" (formula "13"))
                  (rule "castedGetAny" (formula "11") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "12") (term "0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or" (formula "12") (term "0,0,0"))
                  (rule "commute_or_2" (formula "12") (term "0,0"))
                  (rule "cnf_rightDist" (formula "12") (term "0"))
                  (rule "distr_forallAnd" (formula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "castDel" (formula "12") (term "0,1,0,0,0"))
                  (rule "castDel" (formula "12") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "shift_paren_or" (formula "12") (term "0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commuteIntersection" (formula "13") (term "0"))
                  (rule "intersectWithSingleton" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "notLeft" (formula "13"))
                  (rule "lenNonNegative" (formula "10") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1") (ifseqformula "4"))
                  (rule "cut_direct" (formula "12") (term "0"))
                  (branch "CUT: self_0.receiver = null TRUE"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "14") (term "1,1,0,1,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "12"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "close" (formula "29") (ifseqformula "12"))
                  )
                  (branch "CUT: self_0.receiver = null FALSE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_16_in_Server" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "24"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "27"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_18_in_Server" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "disjointDefinition" (formula "20"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "notLeft" (formula "20"))
                     (rule "eqSymm" (formula "34"))
                     (rule "disjointDefinition" (formula "19"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "notLeft" (formula "19"))
                     (rule "eqSymm" (formula "33"))
                     (rule "disjointDefinition" (formula "18"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "eqSymm" (formula "32"))
                     (rule "disjointDefinition" (formula "17"))
                     (rule "disjointDefinition" (formula "15"))
                     (rule "disjointDefinition" (formula "16"))
                     (rule "sortsDisjointModuloNull" (formula "34"))
                     (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                     (rule "false_right" (formula "34"))
                     (rule "sortsDisjointModuloNull" (formula "33"))
                     (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")))
                     (rule "false_right" (formula "33"))
                     (rule "sortsDisjointModuloNull" (formula "32"))
                     (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "2")))
                     (rule "false_right" (formula "32"))
                     (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "2"))
                     (rule "commuteIntersection" (formula "17") (term "0"))
                     (rule "commuteIntersection" (formula "15") (term "0"))
                     (rule "commuteIntersection" (formula "16") (term "0"))
                     (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "18"))
                     (rule "notLeft" (formula "18"))
                     (rule "close" (formula "32") (ifseqformula "2"))
                  )
               )
            )
            (branch "Index Out of Bounds (x_arr != null, but i_1 Out of Bounds!)"
               (rule "false_right" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "cut_direct" (formula "12") (term "0"))
               (branch "CUT: self_0.votesForCandidates = null TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0,1,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "disjointDefinition" (formula "13"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "notLeft" (formula "13"))
                  (rule "eqSymm" (formula "28"))
                  (rule "disjointDefinition" (formula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "eqSymm" (formula "27"))
                  (rule "disjointDefinition" (formula "11"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "eqSymm" (formula "26"))
                  (rule "disjointDefinition" (formula "10"))
                  (rule "disjointDefinition" (formula "9"))
                  (rule "disjointDefinition" (formula "8"))
                  (rule "sortsDisjointModuloNull" (formula "28"))
                  (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "16")))
                  (rule "false_right" (formula "28"))
                  (rule "sortsDisjointModuloNull" (formula "27"))
                  (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
                  (rule "false_right" (formula "27"))
                  (rule "sortsDisjointModuloNull" (formula "26"))
                  (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
                  (rule "false_right" (formula "26"))
                  (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "16"))
                  (rule "commuteIntersection" (formula "9") (term "0"))
                  (rule "commuteIntersection" (formula "8") (term "0"))
                  (rule "commuteIntersection" (formula "10") (term "0"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "11"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "CUT: self_0.votesForCandidates = null FALSE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0,1,0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "arrayLengthIsAnInt" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "8"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "8"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
         (branch "if x_6 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "b_0_1"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_commuteGeq" (formula "15"))
         (rule "blockEmpty" (formula "17") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
         (rule "times_zero_1" (formula "14") (term "0,0"))
         (rule "add_zero_left" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "compound_less_than_comparison_2" (formula "17") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "17") (term "1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
         (rule "assignment_read_attribute_this" (formula "17"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "11"))
         (rule "arrayLengthNotNegative" (formula "7") (term "0"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
         (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "impRight" (formula "18"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "18"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "17"))
         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,0"))
         (rule "times_zero_1" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
         (rule "qeq_literals" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
         (rule "methodCallReturn" (formula "16") (term "1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "emptyModality" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "closeTrue" (formula "16"))
      )
   )
)
)

}
