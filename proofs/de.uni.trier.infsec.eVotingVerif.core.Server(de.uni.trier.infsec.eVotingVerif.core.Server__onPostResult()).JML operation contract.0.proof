\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 15 10:13:54 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=8000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Apr 15 10:13:54 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onPostResult()].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onPostResult()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "fc98e232541230a64a98c630ca708d63b5fc79f7"))

(autoModeTime "14315")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "assignment" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "Query_axiom_for_resultReady_in_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "6") (term "0") (inst "resultReady_sk=resultReady_sk_0") (inst "#self=s") (inst "#res=x") (ifseqformula "3"))
(rule "eqSymm" (formula "6") (term "0,1"))
(rule "applyEqRigid" (formula "6") (term "1,0,1") (ifseqformula "7"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "boxToDiamond" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "eqSymm" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "disjointDefinition" (formula "10"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "17"))
(rule "disjointDefinition" (formula "9"))
(builtin "One Step Simplification" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "16"))
(rule "disjointDefinition" (formula "8"))
(builtin "One Step Simplification" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "15"))
(rule "disjointDefinition" (formula "7"))
(rule "disjointDefinition" (formula "5"))
(rule "disjointDefinition" (formula "6"))
(rule "sortsDisjointModuloNull" (formula "17"))
(rule "replace_known_right" (formula "17") (term "1") (ifseqformula "19"))
(builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "18")))
(rule "false_right" (formula "17"))
(rule "sortsDisjointModuloNull" (formula "16"))
(rule "replace_known_right" (formula "16") (term "1") (ifseqformula "22"))
(builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")))
(rule "false_right" (formula "16"))
(rule "sortsDisjointModuloNull" (formula "15"))
(rule "replace_known_right" (formula "15") (term "1") (ifseqformula "21"))
(builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
(rule "false_right" (formula "15"))
(rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_onPostResult,savedHeapBefore_onPostResult"))
(builtin "One Step Simplification" (formula "22"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "_result"))
(rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_resultReady,savedHeapBefore_resultReady"))
(builtin "One Step Simplification" (formula "19"))
(rule "commuteIntersection" (formula "7") (term "0"))
(rule "commuteIntersection" (formula "5") (term "0"))
(rule "commuteIntersection" (formula "6") (term "0"))
(rule "for_to_while" (formula "19") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "19") (term "1"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "i"))
(rule "assignment" (formula "19") (term "1"))
(builtin "One Step Simplification" (formula "19"))
(builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_getResult,result,exc_0,heapAfter_getResult,anon_heap_getResult") (contract "de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server::getResult()].JML operation contract.0"))
(branch "Post (getResult)"
   (builtin "One Step Simplification" (formula "24"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0") (ifseqformula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "17"))
   (rule "typeEqDerived" (formula "20") (term "0,0,1,1") (ifseqformula "17"))
   (rule "typeEqDerived" (formula "20") (term "0,0,0,1") (ifseqformula "17"))
   (rule "typeEqDerived" (formula "20") (term "0,1,1,1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
   (rule "true_left" (formula "20"))
   (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "assignment" (formula "28") (term "1"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "eqSymm" (formula "26"))
   (rule "eqSymm" (formula "25"))
   (rule "inEqSimp_commuteLeq" (formula "28"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "disjointDefinition" (formula "24"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "notLeft" (formula "24"))
   (rule "eqSymm" (formula "28"))
   (rule "disjointDefinition" (formula "23"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "notLeft" (formula "23"))
   (rule "eqSymm" (formula "27"))
   (rule "disjointDefinition" (formula "22"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "notLeft" (formula "22"))
   (rule "eqSymm" (formula "26"))
   (rule "disjointDefinition" (formula "21"))
   (rule "disjointDefinition" (formula "20"))
   (rule "disjointDefinition" (formula "19"))
   (rule "sortsDisjointModuloNull" (formula "28"))
   (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "29"))
   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "30")))
   (rule "false_right" (formula "28"))
   (rule "sortsDisjointModuloNull" (formula "27"))
   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "28"))
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")))
   (rule "false_right" (formula "27"))
   (rule "sortsDisjointModuloNull" (formula "26"))
   (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "37"))
   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "28")))
   (rule "false_right" (formula "26"))
   (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_receiver_1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_1"))
   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "eqSymm" (formula "22"))
   (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_1"))
   (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "eqSymm" (formula "23"))
   (rule "applyEq" (formula "23") (term "1") (ifseqformula "9"))
   (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfCandidates_1"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
   (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
   (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "25"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "true_left" (formula "23"))
   (rule "hideAuxiliaryEq" (formula "24"))
   (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfVoters_1"))
   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
   (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
   (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "23"))
   (rule "hideAuxiliaryEq" (formula "22"))
   (rule "applyEq" (formula "22") (term "0") (ifseqformula "8"))
   (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_1"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
   (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
   (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "21"))
   (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "21"))
   (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "21"))
   (rule "hideAuxiliaryEq" (formula "21"))
   (rule "commuteIntersection" (formula "21") (term "0"))
   (rule "commuteIntersection" (formula "19") (term "0"))
   (rule "commuteIntersection" (formula "19") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
   (builtin "Loop Invariant" (formula "24") (newnames "heapBeforeLoop_3,iBeforeLoop_1,i_3,anon_heap_loop_3,o,f,variant_3,b_5"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
      (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
      (rule "mul_literals" (formula "24") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1"))
      (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "24") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "24"))
      (rule "eqSymm" (formula "24") (term "1,0,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "disjointDefinition" (formula "24") (term "0,0,0,0,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0,0,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
      (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_62"))
      (rule "commuteIntersection" (formula "24") (term "0,1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "commuteIntersection" (formula "24") (term "0,1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "close" (formula "24") (ifseqformula "5"))
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "20"))
      (rule "impRight" (formula "27"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "eqSymm" (formula "30") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "22"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "30") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_5_2"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "rtrn_4"))
      (rule "assignment" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "returnExpr_4"))
      (rule "variableDeclarationAssign" (formula "30") (term "1"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "exc_6"))
      (rule "assignment" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "thrownExc_4"))
      (rule "applyEq" (formula "30") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
      (rule "applyEq" (formula "22") (term "0") (ifseqformula "9"))
      (rule "blockThrow" (formula "30") (term "1,0,0,1"))
      (rule "blockReturn" (formula "30") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "30") (term "1,0,0,1"))
      (rule "blockReturn" (formula "30") (term "1,0,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "23") (term "0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "eqSymm" (formula "28"))
      (rule "inEqSimp_commuteLeq" (formula "29"))
      (rule "inEqSimp_commuteLeq" (formula "28"))
      (rule "disjointDefinition" (formula "27"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "eqSymm" (formula "29"))
      (rule "disjointDefinition" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "26"))
      (rule "eqSymm" (formula "28"))
      (rule "disjointDefinition" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "notLeft" (formula "25"))
      (rule "eqSymm" (formula "27"))
      (rule "disjointDefinition" (formula "24"))
      (rule "disjointDefinition" (formula "22"))
      (rule "disjointDefinition" (formula "23"))
      (rule "sortsDisjointModuloNull" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "32"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
      (rule "false_right" (formula "29"))
      (rule "sortsDisjointModuloNull" (formula "28"))
      (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "36"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
      (rule "false_right" (formula "28"))
      (rule "sortsDisjointModuloNull" (formula "27"))
      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
      (rule "false_right" (formula "27"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
      (rule "ifUnfold" (formula "35") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_49"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_50"))
      (rule "assignment" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_51"))
      (rule "assignment_read_attribute_this" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "8"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "inequality_comparison_simple" (formula "32") (term "1"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "less_than_comparison_simple" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "emptyModality" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "notRight" (formula "23"))
      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0"))
      (rule "qeq_literals" (formula "22") (term "0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_52"))
      (rule "compound_less_than_comparison_2" (formula "28") (term "1") (inst "#v1=x_54") (inst "#v0=x_53"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_53"))
      (rule "assignment" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_54"))
      (rule "assignment_read_attribute_this" (formula "28"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "9"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "less_than_comparison_simple" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0"))
      (rule "replace_known_left" (formula "29") (term "0,0,1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "ifSplit" (formula "32"))
      (branch "if x_49 true"
         (builtin "One Step Simplification" (formula "33"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallUnfoldTarget" (formula "32") (term "1") (inst "#v0=s"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "s_1"))
         (rule "assignment_read_attribute_this" (formula "32"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "replaceKnownSelect_taclet0_0" (formula "32") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "32") (term "0,1,0"))
         (rule "methodCallUnfoldArguments" (formula "32") (term "1"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_5"))
         (rule "assignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_6"))
         (rule "assignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_7"))
         (rule "assignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "variableDeclarationAssign" (formula "32") (term "1"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "var_8"))
         (rule "stringAssignment" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "eqSymm" (formula "32"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "var_9"))
         (rule "assignment" (formula "33") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_sendTo_0,exc_7,heapAfter_sendTo_0,anon_heap_sendTo_0") (contract "de.uni.trier.infsec.functionalities.amt.Sender[de.uni.trier.infsec.functionalities.amt.Sender::sendTo([B,int,java.lang.String,int)].JML operation contract.0"))
         (branch "Post (sendTo)"
            (builtin "One Step Simplification" (formula "35"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "typeEqDerived" (formula "27") (term "0,1,1,1") (ifseqformula "26"))
            (rule "typeEqDerived" (formula "27") (term "0,1,0,1,1") (ifseqformula "26"))
            (rule "typeEqDerived" (formula "27") (term "0,0,0,0,1,1") (ifseqformula "26"))
            (rule "typeEqDerived" (formula "27") (term "0,1,0,0,1,1") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
            (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_6"))
            (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "25"))
            (rule "simplifySelectOfCreate" (formula "25"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "replaceKnownSelect_taclet12_0" (formula "25") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet13_0" (formula "25") (term "0"))
            (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "25"))
            (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "disjointAndSubset_3" (formula "27") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "27") (term "0"))
            (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "disjointAndSubset_3" (formula "28") (ifseqformula "6"))
            (rule "intersectAllFieldsFreshLocs" (formula "28") (term "0"))
            (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "disjointAndSubset_3" (formula "29") (ifseqformula "8"))
            (rule "intersectAllFieldsFreshLocs" (formula "29") (term "0"))
            (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
            (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "30"))
            (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "30"))
            (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "30"))
            (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "replaceKnownSelect_taclet14_0" (formula "30") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "30") (term "2,0"))
            (rule "elementOfUnion" (formula "30") (term "0,0"))
            (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "disjointAndSubset_3" (formula "31") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "31") (term "0"))
            (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")))
            (rule "true_left" (formula "31"))
            (rule "disjointAndSubset_3" (formula "31") (ifseqformula "6"))
            (rule "intersectAllFieldsFreshLocs" (formula "31") (term "0"))
            (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "28")))
            (rule "true_left" (formula "31"))
            (rule "disjointAndSubset_3" (formula "31") (ifseqformula "8"))
            (rule "intersectAllFieldsFreshLocs" (formula "31") (term "0"))
            (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")))
            (rule "true_left" (formula "31"))
            (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=java_lang_Object_created__39"))
            (rule "simplifySelectOfCreate" (formula "27"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "castDel" (formula "27") (term "1,0"))
            (rule "eqSymm" (formula "27") (term "0,0,0"))
            (rule "eqSymm" (formula "27") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "27") (term "0,1,0,0") (ifseqformula "41"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "sortsDisjointModuloNull" (formula "27") (term "0,0"))
            (rule "eqSymm" (formula "27") (term "1,0,0"))
            (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "41"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
            (rule "ifthenelse_negated" (formula "27") (term "0"))
            (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=java_lang_Object_created__40"))
            (rule "simplifySelectOfCreate" (formula "29"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "castDel" (formula "29") (term "1,0"))
            (rule "eqSymm" (formula "29") (term "0,1,0,0"))
            (rule "eqSymm" (formula "29") (term "0,0,0"))
            (rule "replace_known_right" (formula "29") (term "0,1,0,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
            (rule "eqSymm" (formula "29") (term "1,0,0"))
            (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "29"))
            (rule "hideAuxiliaryEq" (formula "29"))
            (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=java_lang_Object_created__41"))
            (rule "simplifySelectOfCreate" (formula "30"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "castDel" (formula "30") (term "1,0"))
            (rule "eqSymm" (formula "30") (term "0,0,0"))
            (rule "eqSymm" (formula "30") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "30") (term "0,1,0,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "sortsDisjointModuloNull" (formula "30") (term "0,0"))
            (rule "eqSymm" (formula "30") (term "1,0,0"))
            (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
            (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
            (rule "ifthenelse_negated" (formula "30") (term "0"))
            (rule "commuteUnion" (formula "25") (term "1,0"))
            (rule "commuteUnion" (formula "33") (term "1"))
            (rule "disjointAndSubset_4" (formula "33") (ifseqformula "6"))
            (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "disjointAndSubset_4" (formula "33") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "33") (term "0"))
            (rule "replaceKnownSelect_taclet17_0" (formula "33") (term "0,1,0"))
            (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
            (rule "true_left" (formula "33"))
            (rule "disjointAndSubset_4" (formula "33") (ifseqformula "8"))
            (rule "intersectAllFieldsFreshLocs" (formula "33") (term "0"))
            (rule "replaceKnownSelect_taclet22_0" (formula "33") (term "0,1,0"))
            (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
            (rule "true_left" (formula "33"))
            (rule "methodCallEmpty" (formula "43") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,1,1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "31"))
            (rule "hideAuxiliaryEq" (formula "31"))
            (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "29"))
            (rule "hideAuxiliaryEq" (formula "29"))
            (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifSplit" (formula "41"))
            (branch "if x_52 true"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "true_left" (formula "1"))
               (rule "tryEmpty" (formula "45") (term "1"))
               (rule "emptyModality" (formula "45") (term "1"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "allRight" (formula "45") (inst "sk=f_17"))
               (rule "allRight" (formula "45") (inst "sk=o_17"))
               (rule "orRight" (formula "45"))
               (rule "orRight" (formula "45"))
               (rule "orRight" (formula "45"))
               (rule "eqSymm" (formula "48"))
               (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=f_17_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "49"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "46"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "46"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__42"))
               (rule "simplifySelectOfCreate" (formula "2"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "castDel" (formula "2") (term "1,0"))
               (rule "eqSymm" (formula "2") (term "0,1,0,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "47"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__43"))
               (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "commute_and" (formula "49"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "ifUnfold" (formula "44") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_59"))
               (rule "compound_assignment_2" (formula "44") (term "1") (inst "#v=x_60"))
               (rule "variableDeclarationAssign" (formula "44") (term "1"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_60"))
               (rule "eval_order_array_access4" (formula "44") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "44") (term "1"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_arr_5"))
               (rule "assignment_read_attribute_this" (formula "44"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "assignment_array2" (formula "44"))
               (branch "Normal Execution (x_arr_5 != null)"
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "compound_assignment_1_new" (formula "44") (term "1"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "ifSplit" (formula "44"))
                  (branch "if x_59 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "notLeft" (formula "1"))
                     (rule "assignment" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "assignment" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "blockBreakNoLabel" (formula "45") (term "1"))
                     (rule "blockBreakLabel" (formula "45") (term "1"))
                     (rule "blockEmpty" (formula "45") (term "1"))
                     (rule "tryEmpty" (formula "45") (term "1"))
                     (rule "methodCallEmpty" (formula "45") (term "1"))
                     (rule "emptyModality" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "methodCallReturn" (formula "45") (term "1"))
                     (rule "assignment" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "methodCallEmpty" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "emptyModality" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "closeTrue" (formula "45"))
                  )
                  (branch "if x_59 false"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "blockEmpty" (formula "45") (term "1"))
                     (rule "unusedLabel" (formula "45") (term "1"))
                     (rule "preincrement" (formula "45") (term "1"))
                     (rule "compound_int_cast_expression" (formula "45") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "45") (term "1"))
                     (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_61"))
                     (rule "remove_parentheses_right" (formula "45") (term "1"))
                     (rule "assignmentAdditionInt" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "translateJavaAddInt" (formula "45") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "45") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "45") (term "1"))
                     (rule "assignment" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "tryEmpty" (formula "45") (term "1"))
                     (rule "methodCallEmpty" (formula "45") (term "1"))
                     (rule "emptyModality" (formula "45") (term "1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "0,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,0,0,1"))
                     (rule "precOfInt" (formula "45") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "45") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,1"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,1,1"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "45") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "45") (term "1,0,0,0,1,1"))
                     (rule "times_zero_1" (formula "45") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "45") (term "0,0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "45") (term "0,1"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "45") (term "0,0,1"))
                     (rule "applyEq" (formula "45") (term "1,0,0,1") (ifseqformula "16"))
                     (rule "applyEq" (formula "45") (term "0,1,0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "45") (term "1,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "applyEq" (formula "45") (term "1,0,1,1") (ifseqformula "16"))
                     (rule "polySimp_pullOutFactor2" (formula "45") (term "0,1,1"))
                     (rule "add_literals" (formula "45") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "45") (term "0,1,1"))
                     (rule "leq_literals" (formula "45") (term "1,1"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                     (rule "mul_literals" (formula "45") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                     (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_subsumption1" (formula "45") (term "0,0") (ifseqformula "30"))
                     (rule "leq_literals" (formula "45") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "45") (term "0"))
                     (rule "eqSymm" (formula "45") (term "1,0,0,0"))
                     (rule "replace_known_right" (formula "45") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                     (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                     (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                     (rule "disjointDefinition" (formula "45") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "eqSymm" (formula "45") (term "0,1,0,0,0,0"))
                     (rule "disjointDefinition" (formula "45") (term "1,0,0,0,0,0,0"))
                     (rule "disjointDefinition" (formula "45") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "eqSymm" (formula "45") (term "0,1,0,0,0"))
                     (rule "disjointDefinition" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "45") (term "0,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "45") (term "0,0,1,0,0,0,0") (ifseqformula "42"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                     (rule "disjointDefinition" (formula "45") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "eqSymm" (formula "45") (term "0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "45") (term "0,1,0,0,0"))
                     (rule "replace_known_right" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "46"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "41")))
                     (rule "disjointDefinition" (formula "45") (term "0,0,0,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "45") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "45") (term "0,0,1,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "42")))
                     (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "commuteIntersection" (formula "45") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "45") (term "1,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "commuteIntersection" (formula "45") (term "0,0,0"))
                     (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "commuteIntersection" (formula "45") (term "0,0"))
                     (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "allRight" (formula "45") (inst "sk=j_5"))
                     (rule "orRight" (formula "45"))
                     (rule "orRight" (formula "45"))
                     (rule "inEqSimp_geqRight" (formula "46"))
                     (rule "inEqSimp_leqRight" (formula "46"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "f_17 = <created> ∧ o_17 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "4"))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "4"))
                        (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "notRight" (formula "52"))
                        (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "applyEq" (formula "51") (term "0") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "5"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "50") (ifseqformula "6"))
                     )
                     (branch "f_17 = <created> ∧ o_17 = strPool(\"localhost\") FALSE"
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "o_17 = strPool(\"localhost\") TRUE"
                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "55")))
                           (rule "closeFalse" (formula "6"))
                        )
                        (branch "o_17 = strPool(\"localhost\") FALSE"
                           (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_5 = null)"
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_5 != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                  (rule "false_right" (formula "45"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "30"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_52 false"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (sendTo)"
            (builtin "One Step Simplification" (formula "35"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_5"))
            (rule "simplifySelectOfCreate" (formula "25"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "replaceKnownSelect_taclet12_0" (formula "25") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet13_0" (formula "25") (term "0"))
            (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "25"))
            (rule "hideAuxiliaryEq" (formula "25"))
            (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=java_lang_Object_created__38"))
            (rule "simplifySelectOfCreate" (formula "26"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "castDel" (formula "26") (term "1,0"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0"))
            (rule "eqSymm" (formula "26") (term "0,0,0"))
            (rule "replace_known_right" (formula "26") (term "0,1,0,0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
            (rule "eqSymm" (formula "26") (term "1,0,0"))
            (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
            (rule "ifthenelse_negated" (formula "26") (term "0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "28"))
            (rule "commute_or" (formula "28") (term "0,0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commuteUnion" (formula "25") (term "1,0"))
            (rule "methodCallThrow" (formula "39") (term "1"))
            (rule "tryCatchThrow" (formula "39") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1,1,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifSplit" (formula "39"))
            (branch "if x_52 true"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "40"))
               (rule "true_left" (formula "1"))
               (rule "ifElseUnfold" (formula "43") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_55"))
               (rule "equality_comparison_simple" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "replace_known_right" (formula "43") (term "0,0,1,0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_56"))
               (rule "compound_assignment_2" (formula "39") (term "1") (inst "#v=x_57"))
               (rule "variableDeclarationAssign" (formula "39") (term "1"))
               (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_57"))
               (rule "eval_order_array_access4" (formula "39") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "39") (term "1"))
               (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_4"))
               (rule "assignment_read_attribute_this" (formula "39"))
               (builtin "One Step Simplification" (formula "39"))
               (rule "assignment_array2" (formula "39"))
               (branch "Normal Execution (x_arr_4 != null)"
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "compound_assignment_1_new" (formula "39") (term "1"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "ifElseSplit" (formula "43"))
                  (branch "if x_55 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_55 false"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "true_left" (formula "1"))
                     (rule "ifSplit" (formula "39"))
                     (branch "if x_56 true"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "assignment" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "blockBreakNoLabel" (formula "40") (term "1"))
                        (rule "blockBreakLabel" (formula "40") (term "1"))
                        (rule "blockEmpty" (formula "40") (term "1"))
                        (rule "tryEmpty" (formula "40") (term "1"))
                        (rule "methodCallEmpty" (formula "40") (term "1"))
                        (rule "emptyModality" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "methodCallReturn" (formula "40") (term "1"))
                        (rule "assignment" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "methodCallEmpty" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "emptyModality" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "closeTrue" (formula "40"))
                     )
                     (branch "if x_56 false"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "blockEmpty" (formula "40") (term "1"))
                        (rule "preincrement" (formula "40") (term "1"))
                        (rule "unusedLabel" (formula "40") (term "1"))
                        (rule "compound_int_cast_expression" (formula "40") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "40") (term "1"))
                        (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_58"))
                        (rule "remove_parentheses_right" (formula "40") (term "1"))
                        (rule "assignmentAdditionInt" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "translateJavaAddInt" (formula "40") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "40") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "40") (term "1"))
                        (rule "assignment" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "tryEmpty" (formula "40") (term "1"))
                        (rule "methodCallEmpty" (formula "40") (term "1"))
                        (rule "emptyModality" (formula "40") (term "1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "polySimp_mulComm0" (formula "40") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "0,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "40") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,1,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "40") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "40") (term "1,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "40") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "40") (term "0,1"))
                        (rule "times_zero_2" (formula "40") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "40") (term "0,0,1"))
                        (rule "applyEq" (formula "40") (term "0,1,0,0,0") (ifseqformula "13"))
                        (rule "replace_known_left" (formula "40") (term "1,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "applyEq" (formula "40") (term "1,0,1,1") (ifseqformula "13"))
                        (rule "polySimp_pullOutFactor2" (formula "40") (term "0,1,1"))
                        (rule "add_literals" (formula "40") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "40") (term "0,1,1"))
                        (rule "leq_literals" (formula "40") (term "1,1"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "applyEq" (formula "40") (term "1,0,1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1"))
                        (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
                        (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_subsumption1" (formula "40") (term "0,0") (ifseqformula "27"))
                        (rule "leq_literals" (formula "40") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "40") (term "0"))
                        (rule "eqSymm" (formula "40") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "40") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
                        (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0"))
                        (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0"))
                        (rule "disjointDefinition" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "40") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "eqSymm" (formula "40") (term "0,1,0,0"))
                        (rule "disjointDefinition" (formula "40") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "eqSymm" (formula "40") (term "0,1,0,0,0,0"))
                        (rule "disjointDefinition" (formula "40") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "eqSymm" (formula "40") (term "0,1,0,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,1,0,0,0,0"))
                        (rule "replace_known_right" (formula "40") (term "1,0,1,0,0,0,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "37")))
                        (rule "disjointDefinition" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,1,0,0,0"))
                        (rule "replace_known_right" (formula "40") (term "0,0,1,0,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "41")))
                        (rule "sortsDisjointModuloNull" (formula "40") (term "0,1,0,0"))
                        (rule "replace_known_right" (formula "40") (term "0,0,1,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "37")))
                        (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "13"))
                        (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "commuteIntersection" (formula "40") (term "0,1,0"))
                        (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "commuteIntersection" (formula "40") (term "0,1,0"))
                        (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "commuteIntersection" (formula "40") (term "0,0"))
                        (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "40"))
                        (rule "allRight" (formula "40") (inst "sk=j_4"))
                        (rule "orRight" (formula "40"))
                        (rule "orRight" (formula "40"))
                        (rule "inEqSimp_geqRight" (formula "41"))
                        (rule "inEqSimp_leqRight" (formula "41"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "ifElseSplit" (formula "46"))
                        (branch "if exc_7 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                           (rule "instanceof_static_type" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "46") (term "1") (newnames "e_3"))
                           (rule "reference_type_cast" (formula "46"))
                           (branch "Normal Execution (exc_7 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "assignment" (formula "46") (term "1"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "emptyModality" (formula "46") (term "1"))
                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "36")))
                              (rule "eqSymm" (formula "46") (term "1,0,0,1"))
                              (rule "commute_or_2" (formula "46") (term "0"))
                              (rule "commute_or_2" (formula "46") (term "0,0,0"))
                              (rule "commute_or_2" (formula "46") (term "0,0"))
                              (rule "commute_or_2" (formula "46") (term "0"))
                              (rule "commute_or" (formula "46") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "46") (term "0,0,0"))
                              (rule "commute_or_2" (formula "46") (term "0,0"))
                              (rule "allLeft" (formula "30") (inst "t=j_4"))
                              (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "30"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "28"))
                              (rule "close" (formula "42") (ifseqformula "1"))
                           )
                           (branch "ClassCastException (!(exc_7 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "36")))
                              (rule "false_right" (formula "47"))
                              (rule "instanceof_static_type" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "closeTrue" (formula "46"))
                           )
                        )
                        (branch "if exc_7 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                           (rule "notLeft" (formula "1"))
                           (rule "instanceof_static_type" (formula "36") (term "0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "closeTrue" (formula "36"))
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr_4 = null)"
                  (rule "false_right" (formula "40"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_4 != null, but i Out of Bounds!)"
                  (rule "false_right" (formula "40"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_52 false"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Pre (sendTo)"
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
            (rule "wellFormedCreate" (formula "33") (term "0,0,1"))
            (rule "wellFormedAnonEQ" (formula "33") (term "0,0,1") (ifseqformula "18"))
            (rule "eqSymm" (formula "33") (term "0,1,1"))
            (rule "eqSymm" (formula "33") (term "0,0"))
            (rule "replace_known_left" (formula "33") (term "0,0,0,1") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")) (ifInst ""  (formula "17")) (ifInst ""  (formula "32")))
            (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=java_lang_Object_created__36"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=java_lang_Object_created__37"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "24"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
            (rule "closeFalse" (formula "20"))
         )
         (branch "Null reference (var_5 = null)"
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
            (rule "closeTrue" (formula "33"))
         )
      )
      (branch "if x_49 false"
         (builtin "One Step Simplification" (formula "33"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "variableDeclarationAssign" (formula "29") (term "1"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "b_5_1"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
      (rule "blockEmpty" (formula "29") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "23") (term "0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "eqSymm" (formula "28"))
      (rule "inEqSimp_commuteLeq" (formula "29"))
      (rule "inEqSimp_commuteLeq" (formula "28"))
      (rule "disjointDefinition" (formula "27"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "eqSymm" (formula "29"))
      (rule "disjointDefinition" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "26"))
      (rule "eqSymm" (formula "28"))
      (rule "disjointDefinition" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "notLeft" (formula "25"))
      (rule "eqSymm" (formula "27"))
      (rule "disjointDefinition" (formula "24"))
      (rule "disjointDefinition" (formula "22"))
      (rule "disjointDefinition" (formula "23"))
      (rule "sortsDisjointModuloNull" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
      (rule "false_right" (formula "29"))
      (rule "sortsDisjointModuloNull" (formula "28"))
      (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "35"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "30")))
      (rule "false_right" (formula "28"))
      (rule "sortsDisjointModuloNull" (formula "27"))
      (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "34"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
      (rule "false_right" (formula "27"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
      (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_45"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "compound_less_than_comparison_2" (formula "31") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "31") (term "1"))
      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_46"))
      (rule "assignment" (formula "31") (term "1"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "variableDeclarationAssign" (formula "31") (term "1"))
      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_47"))
      (rule "assignment_read_attribute_this" (formula "31"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "8"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "inequality_comparison_simple" (formula "31") (term "1"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "less_than_comparison_simple" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "28") (term "1"))
      (rule "emptyModality" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "impRight" (formula "28"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "21"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
      (rule "inEqSimp_homoInEq1" (formula "21"))
      (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "times_zero_1" (formula "21") (term "0"))
      (rule "leq_literals" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "applyEq" (formula "8") (term "1") (ifseqformula "20"))
      (rule "methodCallReturn" (formula "27") (term "1"))
      (rule "assignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "methodCallEmpty" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "emptyModality" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "false_right" (formula "27"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "ifSplit" (formula "30"))
      (branch "if x_45 true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "1"))
         (rule "methodCallUnfoldTarget" (formula "30") (term "1") (inst "#v0=s"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "s"))
         (rule "assignment_read_attribute_this" (formula "30"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "replaceKnownSelect_taclet0_0" (formula "30") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "30") (term "0,1,0"))
         (rule "methodCallUnfoldArguments" (formula "30") (term "1"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "var"))
         (rule "assignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_1"))
         (rule "assignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_2"))
         (rule "assignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "var_3"))
         (rule "stringAssignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "eqSymm" (formula "30"))
         (rule "variableDeclarationAssign" (formula "31") (term "1"))
         (rule "variableDeclaration" (formula "31") (term "1") (newnames "var_4"))
         (rule "assignment" (formula "31") (term "1"))
         (builtin "One Step Simplification" (formula "31"))
         (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_sendTo,exc_5,heapAfter_sendTo,anon_heap_sendTo") (contract "de.uni.trier.infsec.functionalities.amt.Sender[de.uni.trier.infsec.functionalities.amt.Sender::sendTo([B,int,java.lang.String,int)].JML operation contract.0"))
         (branch "Post (sendTo)"
            (builtin "One Step Simplification" (formula "24"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "typeEqDerived" (formula "26") (term "0,1,1,1") (ifseqformula "25"))
            (rule "typeEqDerived" (formula "26") (term "0,1,0,1,1") (ifseqformula "25"))
            (rule "typeEqDerived" (formula "26") (term "0,0,0,0,1,1") (ifseqformula "25"))
            (rule "typeEqDerived" (formula "26") (term "0,1,0,0,1,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
            (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_3"))
            (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "24"))
            (rule "simplifySelectOfCreate" (formula "24"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replaceKnownSelect_taclet12_0" (formula "24") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet13_0" (formula "24") (term "0"))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "24"))
            (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "disjointAndSubset_3" (formula "26") (ifseqformula "6"))
            (rule "intersectAllFieldsFreshLocs" (formula "26") (term "0"))
            (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "disjointAndSubset_3" (formula "27") (ifseqformula "5"))
            (rule "intersectAllFieldsFreshLocs" (formula "27") (term "0"))
            (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "disjointAndSubset_3" (formula "28") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "28") (term "0"))
            (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_4"))
            (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "29"))
            (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "29"))
            (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "29"))
            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "replaceKnownSelect_taclet14_0" (formula "29") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "29") (term "2,0"))
            (rule "elementOfUnion" (formula "29") (term "0,0"))
            (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "disjointAndSubset_3" (formula "30") (ifseqformula "6"))
            (rule "intersectAllFieldsFreshLocs" (formula "30") (term "0"))
            (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
            (rule "true_left" (formula "30"))
            (rule "disjointAndSubset_3" (formula "30") (ifseqformula "5"))
            (rule "intersectAllFieldsFreshLocs" (formula "30") (term "0"))
            (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")))
            (rule "true_left" (formula "30"))
            (rule "disjointAndSubset_3" (formula "30") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "30") (term "0"))
            (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
            (rule "true_left" (formula "30"))
            (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=java_lang_Object_created__31"))
            (rule "simplifySelectOfCreate" (formula "26"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "castDel" (formula "26") (term "1,0"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0"))
            (rule "eqSymm" (formula "26") (term "0,0,0"))
            (rule "replace_known_right" (formula "26") (term "0,1,0,0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
            (rule "eqSymm" (formula "26") (term "1,0,0"))
            (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")))
            (rule "ifthenelse_negated" (formula "26") (term "0"))
            (rule "pullOutSelect" (formula "28") (term "0,0") (inst "selectSK=java_lang_Object_created__32"))
            (rule "simplifySelectOfCreate" (formula "28"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "castDel" (formula "28") (term "1,0"))
            (rule "eqSymm" (formula "28") (term "0,1,0,0"))
            (rule "eqSymm" (formula "28") (term "0,0,0"))
            (rule "replace_known_right" (formula "28") (term "0,1,0,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "sortsDisjointModuloNull" (formula "28") (term "0,0"))
            (rule "eqSymm" (formula "28") (term "1,0,0"))
            (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "38")))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "38")) (ifInst ""  (formula "2")))
            (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "28"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=java_lang_Object_created__33"))
            (rule "simplifySelectOfCreate" (formula "29"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "castDel" (formula "29") (term "1,0"))
            (rule "eqSymm" (formula "29") (term "0,0,0"))
            (rule "eqSymm" (formula "29") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "29") (term "0,1,0,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "sortsDisjointModuloNull" (formula "29") (term "0,0"))
            (rule "eqSymm" (formula "29") (term "1,0,0"))
            (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
            (rule "ifthenelse_negated" (formula "29") (term "0"))
            (rule "commuteUnion" (formula "24") (term "1,0"))
            (rule "commuteUnion" (formula "32") (term "1"))
            (rule "disjointAndSubset_4" (formula "32") (ifseqformula "5"))
            (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "disjointAndSubset_4" (formula "32") (ifseqformula "6"))
            (rule "intersectAllFieldsFreshLocs" (formula "32") (term "0"))
            (rule "replaceKnownSelect_taclet17_0" (formula "32") (term "0,1,0"))
            (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "27")))
            (rule "true_left" (formula "32"))
            (rule "disjointAndSubset_4" (formula "32") (ifseqformula "7"))
            (rule "intersectAllFieldsFreshLocs" (formula "32") (term "0"))
            (rule "replaceKnownSelect_taclet22_0" (formula "32") (term "0,1,0"))
            (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")))
            (rule "true_left" (formula "32"))
            (rule "methodCallEmpty" (formula "41") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
            (rule "hideAuxiliaryEq" (formula "30"))
            (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
            (rule "hideAuxiliaryEq" (formula "30"))
            (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "tryEmpty" (formula "43") (term "1"))
            (rule "emptyModality" (formula "43") (term "1"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "allRight" (formula "43") (inst "sk=f_16"))
            (rule "allRight" (formula "43") (inst "sk=o_16"))
            (rule "orRight" (formula "43"))
            (rule "orRight" (formula "43"))
            (rule "orRight" (formula "43"))
            (rule "eqSymm" (formula "46"))
            (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_16_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "47"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "44"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__34"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,1,0,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__35"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "commute_and" (formula "47"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "ifthenelse_split" (formula "36") (term "0"))
            (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
               (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "37"))
               (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "37"))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
               (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "eqSymm" (formula "38"))
               (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "eqSymm" (formula "38"))
               (rule "disjointAndSubset_4" (formula "37") (ifseqformula "12"))
               (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "disjointAndSubset_4" (formula "37") (ifseqformula "11"))
               (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "34"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "disjointAndSubset_4" (formula "37") (ifseqformula "13"))
               (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "37"))
               (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "eqSymm" (formula "38"))
               (rule "cut_direct" (formula "25") (term "0"))
               (branch "CUT: result.<created> = TRUE TRUE"
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "cut_direct" (formula "48") (term "0,0"))
                  (branch "CUT: o_16 = null TRUE"
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "false_right" (formula "49"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_16 = null FALSE"
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "notRight" (formula "49"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "false_right" (formula "48"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "47"))
                        (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "47") (term "0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "47") (ifseqformula "1"))
                     )
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "48") (ifseqformula "2"))
                     )
                  )
               )
               (branch "CUT: result.<created> = TRUE FALSE"
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "cut_direct" (formula "49") (term "0,0"))
                  (branch "CUT: o_16 = null TRUE"
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "false_right" (formula "50"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_16 = null FALSE"
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "notRight" (formula "50"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "false_right" (formula "49"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "48"))
                        (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "48") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "48") (ifseqformula "1"))
                     )
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "49") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
               (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "35"))
               (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
               (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "hideAuxiliaryEq" (formula "33"))
               (rule "cut_direct" (formula "25") (term "0"))
               (branch "CUT: result.<created> = TRUE TRUE"
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "cut_direct" (formula "44") (term "0,0"))
                  (branch "CUT: o_16 = null TRUE"
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "false_right" (formula "45"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "42") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "closeTrue" (formula "42"))
                  )
                  (branch "CUT: o_16 = null FALSE"
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "notRight" (formula "45"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "false_right" (formula "44"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "43") (term "0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "43"))
                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "42") (term "1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "43") (ifseqformula "1"))
                        (rule "closeTrue" (formula "43"))
                     )
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "44") (ifseqformula "2"))
                     )
                  )
               )
               (branch "CUT: result.<created> = TRUE FALSE"
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "cut_direct" (formula "45") (term "0,0"))
                  (branch "CUT: o_16 = null TRUE"
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "false_right" (formula "46"))
                     (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "42"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEqRigid" (formula "43") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "closeTrue" (formula "43"))
                  )
                  (branch "CUT: o_16 = null FALSE"
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "notRight" (formula "46"))
                     (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "46"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "false_right" (formula "45"))
                     (rule "ifthenelse_negated" (formula "4") (term "0"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "45") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "45") (ifseqformula "1"))
                        (rule "closeTrue" (formula "45"))
                     )
                     (branch "f_16 = <created> ∧ o_16 = strPool(\"localhost\") FALSE"
                        (rule "close" (formula "45") (ifseqformula "2"))
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (sendTo)"
            (builtin "One Step Simplification" (formula "33"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_2"))
            (rule "simplifySelectOfCreate" (formula "24"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replaceKnownSelect_taclet12_0" (formula "24") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet13_0" (formula "24") (term "0"))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "24"))
            (rule "hideAuxiliaryEq" (formula "24"))
            (rule "pullOutSelect" (formula "25") (term "0,0") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfCreate" (formula "25"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "castDel" (formula "25") (term "1,0"))
            (rule "eqSymm" (formula "25") (term "0,1,0,0"))
            (rule "eqSymm" (formula "25") (term "0,0,0"))
            (rule "replace_known_right" (formula "25") (term "0,1,0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "sortsDisjointModuloNull" (formula "25") (term "0,0"))
            (rule "eqSymm" (formula "25") (term "1,0,0"))
            (rule "replace_known_right" (formula "25") (term "1,0,0") (ifseqformula "36"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
            (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
            (rule "ifthenelse_negated" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "27") (term "0"))
            (rule "commute_or_2" (formula "27"))
            (rule "commute_or" (formula "27") (term "0,0"))
            (rule "commute_or_2" (formula "27") (term "0"))
            (rule "commuteUnion" (formula "24") (term "1,0"))
            (rule "methodCallThrow" (formula "37") (term "1"))
            (rule "tryCatchThrow" (formula "37") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifElseUnfold" (formula "41") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_48"))
            (rule "equality_comparison_simple" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "replace_known_right" (formula "41") (term "0,0,1,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "ifElseSplit" (formula "41"))
            (branch "if x_48 true"
               (builtin "One Step Simplification" (formula "42"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_48 false"
               (builtin "One Step Simplification" (formula "42"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "41"))
               (branch "if exc_5 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "41") (term "1") (newnames "e_2"))
                  (rule "reference_type_cast" (formula "41"))
                  (branch "Normal Execution (exc_5 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "assignment" (formula "41") (term "1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "emptyModality" (formula "41") (term "1"))
                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "32")))
                     (rule "eqSymm" (formula "41") (term "1,0,0,1"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (rule "commute_or" (formula "41") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "ifthenelse_split" (formula "29") (term "0"))
                     (branch "exc_5.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "cut_direct" (formula "30") (term "1,0,0"))
                        (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.ConnectionError::instance(exc_5) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "replace_known_left" (formula "40") (term "1,0,0,0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "allRight" (formula "40") (inst "sk=f_15"))
                           (rule "allRight" (formula "40") (inst "sk=o_15"))
                           (rule "orRight" (formula "40"))
                           (rule "orRight" (formula "40"))
                           (rule "orRight" (formula "40"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=f_15_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "44"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__29"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_15_1"))
                           (rule "simplifySelectOfCreate" (formula "2"))
                           (rule "castDel" (formula "2") (term "1,0"))
                           (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__30"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_15_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_and" (formula "44"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "cut_direct" (formula "25") (term "0"))
                           (branch "CUT: result.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "cut_direct" (formula "45") (term "0,0"))
                              (branch "CUT: o_15 = null TRUE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "applyEqRigid" (formula "45") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: o_15 = null FALSE"
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "notRight" (formula "46"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "43") (term "1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "45") (term "2,0") (ifseqformula "2"))
                                    (rule "castTrueImpliesOriginalTrue" (formula "45") (ifseqformula "1"))
                                    (rule "closeTrue" (formula "45"))
                                 )
                                 (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") FALSE"
                                    (rule "close" (formula "45") (ifseqformula "2"))
                                 )
                              )
                           )
                           (branch "CUT: result.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "cut_direct" (formula "46") (term "0,0"))
                              (branch "CUT: o_15 = null TRUE"
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: o_15 = null FALSE"
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "notRight" (formula "47"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "46") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "46") (term "0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "45") (ifseqformula "1"))
                                 )
                                 (branch "f_15 = <created> ∧ o_15 = strPool(\"localhost\") FALSE"
                                    (rule "close" (formula "46") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.ConnectionError::instance(exc_5) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "replace_known_right" (formula "41") (term "1,0,0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "cut_direct" (formula "22") (term "0"))
                           (branch "CUT: result.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "cut_direct" (formula "30") (term "1"))
                              (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "allRight" (formula "41") (inst "sk=f_14"))
                                 (rule "allRight" (formula "41") (inst "sk=o_14"))
                                 (rule "orRight" (formula "41"))
                                 (rule "orRight" (formula "41"))
                                 (rule "orRight" (formula "41"))
                                 (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=f_14_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "45"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__27"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__28"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "45"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "cut_direct" (formula "46") (term "0,0"))
                                 (branch "CUT: o_14 = null TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEqRigid" (formula "46") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_14 = null FALSE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "false_right" (formula "46"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_14 = <created> ∧ o_14 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "46") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "46"))
                                    )
                                    (branch "f_14 = <created> ∧ o_14 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "46") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "42") (term "1,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "cut_direct" (formula "30") (term "1"))
                                 (branch "CUT: java.lang.Error::instance(exc_5) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "allRight" (formula "42") (inst "sk=f_13"))
                                    (rule "allRight" (formula "42") (inst "sk=o_13"))
                                    (rule "orRight" (formula "42"))
                                    (rule "orRight" (formula "42"))
                                    (rule "orRight" (formula "42"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_13_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__25"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__26"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "46"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "47") (term "0,0"))
                                    (branch "CUT: o_13 = null TRUE"
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_13 = null FALSE"
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "notRight" (formula "48"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_13 = <created> ∧ o_13 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "47") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "47"))
                                       )
                                       (branch "f_13 = <created> ∧ o_13 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "47") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.Error::instance(exc_5) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "31")))
                                    (rule "allRight" (formula "43") (inst "sk=f_12"))
                                    (rule "allRight" (formula "43") (inst "sk=o_12"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_12_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__23"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_12_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_12_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "47"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "48") (term "0,0"))
                                    (branch "CUT: o_12 = null TRUE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEqRigid" (formula "48") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_12 = null FALSE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "notRight" (formula "49"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_12 = <created> ∧ o_12 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "48") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "47") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "47"))
                                       )
                                       (branch "f_12 = <created> ∧ o_12 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "48") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "cut_direct" (formula "30") (term "1"))
                              (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "allRight" (formula "42") (inst "sk=f_11"))
                                 (rule "allRight" (formula "42") (inst "sk=o_11"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_11_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__21"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__22"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "46"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "cut_direct" (formula "47") (term "0,0"))
                                 (branch "CUT: o_11 = null TRUE"
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "false_right" (formula "48"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "closeTrue" (formula "45"))
                                 )
                                 (branch "CUT: o_11 = null FALSE"
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "notRight" (formula "48"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_11 = <created> ∧ o_11 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "46"))
                                       (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "46") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "46") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "46"))
                                    )
                                    (branch "f_11 = <created> ∧ o_11 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "47") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "43") (term "1,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "cut_direct" (formula "30") (term "0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "allRight" (formula "43") (inst "sk=f_10"))
                                    (rule "allRight" (formula "43") (inst "sk=o_10"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_10_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__19"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "47"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "48") (term "0,0"))
                                    (branch "CUT: o_10 = null TRUE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_10 = null FALSE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "notRight" (formula "49"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_10 = <created> ∧ o_10 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "47") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "47") (ifseqformula "1"))
                                       )
                                       (branch "f_10 = <created> ∧ o_10 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "48") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "44") (term "1,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "31")))
                                    (rule "allRight" (formula "44") (inst "sk=f_9"))
                                    (rule "allRight" (formula "44") (inst "sk=o_9"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_9_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__17"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "48"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "49") (term "0,0"))
                                    (branch "CUT: o_9 = null TRUE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch "CUT: o_9 = null FALSE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "notRight" (formula "50"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_9 = <created> ∧ o_9 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "49") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "49") (term "0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "48") (ifseqformula "1"))
                                       )
                                       (branch "f_9 = <created> ∧ o_9 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "49") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "exc_5.<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "cut_direct" (formula "30") (term "1,0,0"))
                        (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.ConnectionError::instance(exc_5) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "replace_known_left" (formula "41") (term "1,0,0,0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "allRight" (formula "41") (inst "sk=f_8"))
                           (rule "allRight" (formula "41") (inst "sk=o_8"))
                           (rule "orRight" (formula "41"))
                           (rule "orRight" (formula "41"))
                           (rule "orRight" (formula "41"))
                           (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=f_8_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "45"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__15"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_8_1"))
                           (rule "simplifySelectOfCreate" (formula "2"))
                           (rule "castDel" (formula "2") (term "1,0"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "43"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__16"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_8_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_and" (formula "45"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "cut_direct" (formula "25") (term "0"))
                           (branch "CUT: result.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "cut_direct" (formula "46") (term "0,0"))
                              (branch "CUT: o_8 = null TRUE"
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "45") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_8 = null FALSE"
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "notRight" (formula "47"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "46") (term "2,0") (ifseqformula "2"))
                                    (rule "castTrueImpliesOriginalTrue" (formula "46") (ifseqformula "1"))
                                    (rule "closeTrue" (formula "46"))
                                 )
                                 (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") FALSE"
                                    (rule "close" (formula "46") (ifseqformula "2"))
                                 )
                              )
                           )
                           (branch "CUT: result.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "cut_direct" (formula "47") (term "0,0"))
                              (branch "CUT: o_8 = null TRUE"
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "45") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "closeTrue" (formula "45"))
                              )
                              (branch "CUT: o_8 = null FALSE"
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "notRight" (formula "48"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "45") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "47") (term "2,0") (ifseqformula "2"))
                                    (rule "castTrueImpliesOriginalTrue" (formula "47") (ifseqformula "1"))
                                    (rule "closeTrue" (formula "47"))
                                 )
                                 (branch "f_8 = <created> ∧ o_8 = strPool(\"localhost\") FALSE"
                                    (rule "close" (formula "47") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.ConnectionError::instance(exc_5) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "replace_known_right" (formula "42") (term "1,0,0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "42"))
                           (rule "cut_direct" (formula "22") (term "0"))
                           (branch "CUT: result.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "cut_direct" (formula "30") (term "0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "allRight" (formula "42") (inst "sk=f_7"))
                                 (rule "allRight" (formula "42") (inst "sk=o_7"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "orRight" (formula "42"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_7_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__13"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__14"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "46"))
                                 (rule "commute_and" (formula "1") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "cut_direct" (formula "47") (term "0,0"))
                                 (branch "CUT: o_7 = null TRUE"
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "false_right" (formula "48"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_7 = null FALSE"
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "notRight" (formula "48"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_7 = <created> ∧ o_7 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "45") (term "1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "47") (term "2,0") (ifseqformula "2"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "47") (ifseqformula "1"))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch "f_7 = <created> ∧ o_7 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "47") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "cut_direct" (formula "30") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "allRight" (formula "43") (inst "sk=f_6"))
                                    (rule "allRight" (formula "43") (inst "sk=o_6"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "orRight" (formula "43"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_6_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__11"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_6_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_6_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "47"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "48") (term "0,0"))
                                    (branch "CUT: o_6 = null TRUE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_6 = null FALSE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "notRight" (formula "49"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_6 = <created> ∧ o_6 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "48") (term "0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "47") (ifseqformula "1"))
                                       )
                                       (branch "f_6 = <created> ∧ o_6 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "48") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_right" (formula "44") (term "1,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "30")))
                                    (rule "allRight" (formula "44") (inst "sk=f_5"))
                                    (rule "allRight" (formula "44") (inst "sk=o_5"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_5_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__9"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "48"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "49") (term "0,0"))
                                    (branch "CUT: o_5 = null TRUE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch "CUT: o_5 = null FALSE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "notRight" (formula "50"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_5 = <created> ∧ o_5 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "applyEq" (formula "47") (term "1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "48") (term "0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "48") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "48") (ifseqformula "1"))
                                       )
                                       (branch "f_5 = <created> ∧ o_5 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "49") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "cut_direct" (formula "30") (term "0,0"))
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "allRight" (formula "43") (inst "sk=f_4"))
                                 (rule "allRight" (formula "43") (inst "sk=o_4"))
                                 (rule "orRight" (formula "43"))
                                 (rule "orRight" (formula "43"))
                                 (rule "orRight" (formula "43"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_4_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "47"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_4_1"))
                                 (rule "simplifySelectOfCreate" (formula "2"))
                                 (rule "castDel" (formula "2") (term "1,0"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_4_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "47"))
                                 (rule "commute_and" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "2") (term "0,0"))
                                 (rule "cut_direct" (formula "48") (term "0,0"))
                                 (branch "CUT: o_4 = null TRUE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "false_right" (formula "49"))
                                    (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_4 = null FALSE"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "notRight" (formula "49"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "false_right" (formula "48"))
                                    (rule "ifthenelse_negated" (formula "4") (term "0"))
                                    (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_4 = <created> ∧ o_4 = strPool(\"localhost\") TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "46") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "47") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "47") (ifseqformula "1"))
                                    )
                                    (branch "f_4 = <created> ∧ o_4 = strPool(\"localhost\") FALSE"
                                       (rule "close" (formula "48") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: de.uni.trier.infsec.functionalities.amt.AMT.AMTError::instance(exc_5) = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "cut_direct" (formula "30") (term "0"))
                                 (branch "CUT: java.lang.Error::instance(exc_5) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "replace_known_left" (formula "44") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "allRight" (formula "44") (inst "sk=f_3"))
                                    (rule "allRight" (formula "44") (inst "sk=o_3"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_3_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_3_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_3_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "48"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "49") (term "0,0"))
                                    (branch "CUT: o_3 = null TRUE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: o_3 = null FALSE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "notRight" (formula "50"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "48") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "48"))
                                       )
                                       (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "49") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.Error::instance(exc_5) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "31")))
                                    (rule "allRight" (formula "45") (inst "sk=f_2"))
                                    (rule "allRight" (formula "45") (inst "sk=o_2"))
                                    (rule "orRight" (formula "45"))
                                    (rule "orRight" (formula "45"))
                                    (rule "orRight" (formula "45"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=f_2_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_2_1"))
                                    (rule "simplifySelectOfCreate" (formula "2"))
                                    (rule "castDel" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_2_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "49"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "cut_direct" (formula "50") (term "0,0"))
                                    (branch "CUT: o_2 = null TRUE"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "50") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: o_2 = null FALSE"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "notRight" (formula "51"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_2 = <created> ∧ o_2 = strPool(\"localhost\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "50") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "48") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "50") (term "2,0") (ifseqformula "2"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "50") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                       (branch "f_2 = <created> ∧ o_2 = strPool(\"localhost\") FALSE"
                                          (rule "close" (formula "50") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_5 instanceof java.lang.Throwable))"
                     (rule "false_right" (formula "42"))
                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "32")))
                     (rule "instanceof_static_type" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "closeTrue" (formula "41"))
                  )
               )
               (branch "if exc_5 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                  (rule "notLeft" (formula "1"))
                  (rule "instanceof_static_type" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "closeTrue" (formula "32"))
               )
            )
         )
         (branch "Pre (sendTo)"
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
            (rule "wellFormedCreate" (formula "31") (term "0,0,1"))
            (rule "wellFormedAnonEQ" (formula "31") (term "0,0,1") (ifseqformula "16"))
            (rule "eqSymm" (formula "31") (term "0,1,1"))
            (rule "eqSymm" (formula "31") (term "0,0"))
            (rule "replace_known_right" (formula "31") (term "0,1,1") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")) (ifInst ""  (formula "1")) (ifInst ""  (formula "15")))
            (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "32") (term "0,1") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "23"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "orRight" (formula "23"))
            (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
            (rule "closeFalse" (formula "18"))
         )
         (branch "Null reference (var = null)"
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")))
            (rule "closeTrue" (formula "31"))
         )
      )
      (branch "if x_45 false"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Exceptional Post (getResult)"
   (builtin "One Step Simplification" (formula "16"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "andLeft" (formula "16"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "17"))
   (rule "instanceof_static_type" (formula "19") (term "0,0,0,1"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")))
   (rule "andLeft" (formula "19"))
   (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")))
   (rule "true_left" (formula "18"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "notLeft" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "eqSymm" (formula "25"))
   (rule "eqSymm" (formula "24"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_commuteLeq" (formula "26"))
   (rule "disjointDefinition" (formula "23"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "notLeft" (formula "23"))
   (rule "eqSymm" (formula "28"))
   (rule "disjointDefinition" (formula "22"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "notLeft" (formula "22"))
   (rule "eqSymm" (formula "27"))
   (rule "disjointDefinition" (formula "21"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "notLeft" (formula "21"))
   (rule "eqSymm" (formula "26"))
   (rule "disjointDefinition" (formula "20"))
   (rule "disjointDefinition" (formula "19"))
   (rule "disjointDefinition" (formula "18"))
   (rule "sortsDisjointModuloNull" (formula "28"))
   (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "30"))
   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
   (rule "false_right" (formula "28"))
   (rule "sortsDisjointModuloNull" (formula "27"))
   (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "38"))
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
   (rule "false_right" (formula "27"))
   (rule "sortsDisjointModuloNull" (formula "26"))
   (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "37"))
   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "28")))
   (rule "false_right" (formula "26"))
   (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_receiver_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_0"))
   (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "eqSymm" (formula "21"))
   (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_0"))
   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "eqSymm" (formula "22"))
   (rule "applyEq" (formula "22") (term "1") (ifseqformula "9"))
   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfCandidates_0"))
   (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
   (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "24"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "hideAuxiliaryEq" (formula "23"))
   (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfVoters_0"))
   (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
   (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "31")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
   (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "22"))
   (rule "hideAuxiliaryEq" (formula "21"))
   (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
   (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
   (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "20"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "methodCallThrow" (formula "30") (term "1"))
   (rule "commuteIntersection" (formula "20") (term "0"))
   (rule "commuteIntersection" (formula "18") (term "0"))
   (rule "commuteIntersection" (formula "18") (term "0"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (builtin "Loop Invariant" (formula "24") (newnames "heapBeforeLoop_2,iBeforeLoop_0,i_2,anon_heap_loop_2,o,f,variant_2,b_4"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "24") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
      (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
      (rule "mul_literals" (formula "24") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "24"))
      (rule "eqSymm" (formula "24") (term "1,0,0"))
      (rule "replace_known_right" (formula "24") (term "0,1,0,0,0,0,0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
      (rule "disjointDefinition" (formula "24") (term "0,0,0,0,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0,0,0"))
      (rule "disjointDefinition" (formula "24") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
      (rule "disjointDefinition" (formula "24") (term "1,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "eqSymm" (formula "24") (term "0,1,0"))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0,0"))
      (rule "replace_known_right" (formula "24") (term "1,0,1,0,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
      (rule "sortsDisjointModuloNull" (formula "24") (term "0,1,0"))
      (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
      (rule "disjointDefinition" (formula "24") (term "1,0,0"))
      (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "tryCatchThrow" (formula "27") (term "1"))
      (rule "commuteIntersection" (formula "24") (term "0,1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "commuteIntersection" (formula "24") (term "0,0"))
      (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "close" (formula "24") (ifseqformula "6"))
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "26") (term "0,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "20"))
      (rule "impRight" (formula "27"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "eqSymm" (formula "30") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "22"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "30") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_4_2"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "rtrn_3"))
      (rule "assignment" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "returnExpr_3"))
      (rule "variableDeclarationAssign" (formula "30") (term "1"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "exc_4"))
      (rule "assignment" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "thrownExc_3"))
      (rule "applyEq" (formula "22") (term "0") (ifseqformula "9"))
      (rule "applyEq" (formula "30") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
      (rule "blockReturn" (formula "30") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "30") (term "1,0,0,1"))
      (rule "blockReturn" (formula "30") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "30") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "23") (term "0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "23"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "23"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "23"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "eqSymm" (formula "28"))
      (rule "inEqSimp_commuteLeq" (formula "29"))
      (rule "inEqSimp_commuteLeq" (formula "28"))
      (rule "disjointDefinition" (formula "27"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "eqSymm" (formula "29"))
      (rule "disjointDefinition" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "26"))
      (rule "eqSymm" (formula "28"))
      (rule "disjointDefinition" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "notLeft" (formula "25"))
      (rule "eqSymm" (formula "27"))
      (rule "disjointDefinition" (formula "24"))
      (rule "disjointDefinition" (formula "22"))
      (rule "disjointDefinition" (formula "23"))
      (rule "sortsDisjointModuloNull" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
      (rule "false_right" (formula "29"))
      (rule "sortsDisjointModuloNull" (formula "28"))
      (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "36"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
      (rule "false_right" (formula "28"))
      (rule "sortsDisjointModuloNull" (formula "27"))
      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")))
      (rule "false_right" (formula "27"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
      (rule "tryCatchThrow" (formula "35") (term "1"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_36"))
      (rule "assignment" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_37"))
      (rule "assignment_read_attribute_this" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "8"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "less_than_comparison_simple" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "emptyModality" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "notRight" (formula "23"))
      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0"))
      (rule "qeq_literals" (formula "22") (term "0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_38"))
      (rule "compound_less_than_comparison_2" (formula "28") (term "1") (inst "#v1=x_40") (inst "#v0=x_39"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_39"))
      (rule "assignment" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_40"))
      (rule "assignment_read_attribute_this" (formula "28"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "9"))
      (rule "less_than_comparison_simple" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0"))
      (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_41"))
      (rule "equality_comparison_simple" (formula "32") (term "1"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,1,1,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "ifSplit" (formula "33"))
      (branch "if x_38 true"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "true_left" (formula "1"))
         (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_42"))
         (rule "compound_assignment_2" (formula "33") (term "1") (inst "#v=x_43"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_43"))
         (rule "eval_order_array_access4" (formula "33") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "33") (term "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_arr_3"))
         (rule "assignment_read_attribute_this" (formula "33"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "assignment_array2" (formula "33"))
         (branch "Normal Execution (x_arr_3 != null)"
            (builtin "One Step Simplification" (formula "33"))
            (rule "compound_assignment_1_new" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "ifElseSplit" (formula "36"))
            (branch "if x_41 true"
               (builtin "One Step Simplification" (formula "37"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_41 false"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "true_left" (formula "1"))
               (rule "ifSplit" (formula "33"))
               (branch "if x_42 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "notLeft" (formula "1"))
                  (rule "assignment" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "assignment" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "blockBreakNoLabel" (formula "34") (term "1"))
                  (rule "blockBreakLabel" (formula "34") (term "1"))
                  (rule "blockEmpty" (formula "34") (term "1"))
                  (rule "tryEmpty" (formula "34") (term "1"))
                  (rule "methodCallEmpty" (formula "34") (term "1"))
                  (rule "emptyModality" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "methodCallReturn" (formula "34") (term "1"))
                  (rule "assignment" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "methodCallEmpty" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "emptyModality" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "closeTrue" (formula "34"))
               )
               (branch "if x_42 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "blockEmpty" (formula "34") (term "1"))
                  (rule "unusedLabel" (formula "34") (term "1"))
                  (rule "preincrement" (formula "34") (term "1"))
                  (rule "compound_int_cast_expression" (formula "34") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "34") (term "1"))
                  (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_44"))
                  (rule "remove_parentheses_right" (formula "34") (term "1"))
                  (rule "assignmentAdditionInt" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "translateJavaAddInt" (formula "34") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "34") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "34") (term "1"))
                  (rule "assignment" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "tryEmpty" (formula "34") (term "1"))
                  (rule "methodCallEmpty" (formula "34") (term "1"))
                  (rule "emptyModality" (formula "34") (term "1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "34") (term "0,0,1"))
                  (rule "mul_literals" (formula "34") (term "0,0,0,1"))
                  (rule "precOfInt" (formula "34") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1"))
                  (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1,1"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1"))
                  (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,1"))
                  (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,1"))
                  (rule "add_literals" (formula "34") (term "1,0,0,0,1,1"))
                  (rule "times_zero_1" (formula "34") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                  (rule "applyEq" (formula "34") (term "1,0,1,1") (ifseqformula "13"))
                  (rule "polySimp_pullOutFactor2" (formula "34") (term "0,1,1"))
                  (rule "add_literals" (formula "34") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "34") (term "0,1,1"))
                  (rule "leq_literals" (formula "34") (term "1,1"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "13"))
                  (rule "applyEq" (formula "34") (term "0,1,0,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                  (rule "mul_literals" (formula "34") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                  (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "27"))
                  (rule "leq_literals" (formula "34") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "34") (term "0"))
                  (rule "eqSymm" (formula "34") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "33")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                  (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "disjointDefinition" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "disjointDefinition" (formula "34") (term "1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "eqSymm" (formula "34") (term "0,1,0,0,0,0"))
                  (rule "disjointDefinition" (formula "34") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "eqSymm" (formula "34") (term "0,1,0,0"))
                  (rule "disjointDefinition" (formula "34") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "eqSymm" (formula "34") (term "0,1,0,0,0"))
                  (rule "disjointDefinition" (formula "34") (term "1,0,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "35")))
                  (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,0,1,0,0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")))
                  (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,0,1,0,0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "35")))
                  (rule "disjointDefinition" (formula "34") (term "0,0,0,0"))
                  (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "commuteIntersection" (formula "34") (term "0,1,0,0"))
                  (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "commuteIntersection" (formula "34") (term "0,0,0"))
                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "commuteIntersection" (formula "34") (term "0,0"))
                  (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "allRight" (formula "34") (inst "sk=j_3"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "inEqSimp_leqRight" (formula "34"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "35"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "mul_literals" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "ifElseSplit" (formula "39"))
                  (branch "if exc_0 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "instanceof_static_type" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "39") (term "1") (newnames "e_1"))
                     (rule "reference_type_cast" (formula "39"))
                     (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "assignment" (formula "39") (term "1"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "emptyModality" (formula "39") (term "1"))
                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "31")) (ifInst ""  (formula "27")))
                        (rule "allRight" (formula "39") (inst "sk=f_1"))
                        (rule "allRight" (formula "39") (inst "sk=o_1"))
                        (rule "orRight" (formula "39"))
                        (rule "orRight" (formula "39"))
                        (rule "orRight" (formula "39"))
                        (rule "eqSymm" (formula "42"))
                        (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=f_1_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                        (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "closeTrue" (formula "43"))
                     )
                     (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                        (rule "false_right" (formula "40"))
                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "31")))
                        (rule "instanceof_static_type" (formula "39") (term "0"))
                        (builtin "One Step Simplification" (formula "39"))
                        (rule "closeTrue" (formula "39"))
                     )
                  )
                  (branch "if exc_0 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "notLeft" (formula "1"))
                     (rule "instanceof_static_type" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
               )
            )
         )
         (branch "Null Reference (x_arr_3 = null)"
            (builtin "One Step Simplification" (formula "34"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_3 != null, but i Out of Bounds!)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "false_right" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "27"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_literals" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "if x_38 false"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "variableDeclarationAssign" (formula "29") (term "1"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "b_4_1"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
      (rule "blockEmpty" (formula "29") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "23") (term "0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "23"))
      (rule "notLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "eqSymm" (formula "28"))
      (rule "inEqSimp_commuteLeq" (formula "29"))
      (rule "inEqSimp_commuteLeq" (formula "28"))
      (rule "disjointDefinition" (formula "27"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "notLeft" (formula "27"))
      (rule "eqSymm" (formula "29"))
      (rule "disjointDefinition" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "26"))
      (rule "eqSymm" (formula "28"))
      (rule "disjointDefinition" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "notLeft" (formula "25"))
      (rule "eqSymm" (formula "27"))
      (rule "disjointDefinition" (formula "24"))
      (rule "disjointDefinition" (formula "22"))
      (rule "disjointDefinition" (formula "23"))
      (rule "sortsDisjointModuloNull" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "32"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
      (rule "false_right" (formula "29"))
      (rule "sortsDisjointModuloNull" (formula "28"))
      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")))
      (rule "false_right" (formula "28"))
      (rule "sortsDisjointModuloNull" (formula "27"))
      (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "34"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
      (rule "false_right" (formula "27"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
      (rule "tryCatchThrow" (formula "34") (term "1"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "compound_less_than_comparison_2" (formula "31") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "31") (term "1"))
      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_33"))
      (rule "assignment" (formula "31") (term "1"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "variableDeclarationAssign" (formula "31") (term "1"))
      (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_34"))
      (rule "assignment_read_attribute_this" (formula "31"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "8"))
      (rule "commuteIntersection" (formula "24") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "commuteIntersection" (formula "22") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "less_than_comparison_simple" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "28") (term "1"))
      (rule "emptyModality" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "impRight" (formula "28"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "23"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
      (rule "inEqSimp_homoInEq1" (formula "21"))
      (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
      (rule "add_literals" (formula "21") (term "1,0"))
      (rule "times_zero_1" (formula "21") (term "0"))
      (rule "leq_literals" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "applyEq" (formula "8") (term "1") (ifseqformula "20"))
      (rule "methodCallReturn" (formula "27") (term "1"))
      (rule "assignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "methodCallEmpty" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "emptyModality" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "false_right" (formula "27"))
      (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_35"))
      (rule "equality_comparison_simple" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "ifElseSplit" (formula "34"))
      (branch "if x_35 true"
         (builtin "One Step Simplification" (formula "35"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_35 false"
         (builtin "One Step Simplification" (formula "35"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "34"))
         (branch "if exc_0 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
            (rule "instanceof_static_type" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "34") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "34"))
            (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "34"))
               (rule "assignment" (formula "34") (term "1"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "emptyModality" (formula "34") (term "1"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "27")) (ifInst ""  (formula "22")))
               (rule "allRight" (formula "34") (inst "sk=f_0"))
               (rule "allRight" (formula "34") (inst "sk=o_0"))
               (rule "orRight" (formula "34"))
               (rule "orRight" (formula "34"))
               (rule "orRight" (formula "34"))
               (rule "eqSymm" (formula "37"))
               (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "closeTrue" (formula "38"))
            )
            (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
               (rule "false_right" (formula "35"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "27")))
               (rule "instanceof_static_type" (formula "34") (term "0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "closeTrue" (formula "34"))
            )
         )
         (branch "if exc_0 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
            (rule "notLeft" (formula "1"))
            (rule "instanceof_static_type" (formula "27") (term "0"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "closeTrue" (formula "27"))
         )
      )
   )
)
(branch "Pre (getResult)"
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "13")) (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1"))
   (rule "Query_axiom_for_resultReady_in_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22") (term "0,0") (inst "resultReady_sk=resultReady_sk_1") (inst "#self=s") (inst "#res=x") (ifseqformula "3"))
   (rule "eqSymm" (formula "1") (term "0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "23") (term "0,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1"))
   (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "commute_and" (formula "23"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "23") (term "0"))
   (rule "eqSymm" (formula "23") (term "1,0,0,0"))
   (rule "replace_known_left" (formula "23") (term "1,0,0,0,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "9")))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
   (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "disjointDefinition" (formula "23") (term "1,0,0,0,0,0,0"))
   (rule "disjointDefinition" (formula "23") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "eqSymm" (formula "23") (term "0,1,0,0"))
   (rule "disjointDefinition" (formula "23") (term "1,0,0,0,0,0"))
   (rule "disjointDefinition" (formula "23") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "eqSymm" (formula "23") (term "0,1,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "23") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "23") (term "1,0,1,0,0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")))
   (rule "sortsDisjointModuloNull" (formula "23") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "23") (term "0,0,1,0,0") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
   (rule "disjointDefinition" (formula "23") (term "0,0,0,0,0"))
   (rule "disjointDefinition" (formula "23") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "eqSymm" (formula "23") (term "0,1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "23") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "23") (term "0,0,1,0,0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
   (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "8"))
   (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "commute_and_2" (formula "23"))
   (rule "commute_and_2" (formula "23") (term "0"))
   (rule "commute_and" (formula "23") (term "0,0"))
   (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_resultReady_0,savedHeapBefore_resultReady_0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "commuteIntersection" (formula "23") (term "0,1"))
   (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "commuteIntersection" (formula "23") (term "0,1,0"))
   (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "commuteIntersection" (formula "23") (term "0,1"))
   (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "apply_eq_boolean_rigid" (formula "15") (term "1,0,0,1") (ifseqformula "23"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_1"))
   (rule "assignment" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "13") (term "0"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
   (builtin "Loop Invariant" (formula "20") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "20") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
      (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1"))
      (rule "mul_literals" (formula "20") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "20") (term "0,1"))
      (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "20"))
      (rule "eqSymm" (formula "20") (term "1,0,0"))
      (rule "replace_known_right" (formula "20") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
      (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0"))
      (rule "disjointDefinition" (formula "20") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "eqSymm" (formula "20") (term "0,1,0,0"))
      (rule "disjointDefinition" (formula "20") (term "0,0,0,0,0,0"))
      (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0,0"))
      (rule "disjointDefinition" (formula "20") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "eqSymm" (formula "20") (term "0,1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
      (rule "disjointDefinition" (formula "20") (term "1,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "eqSymm" (formula "20") (term "0,1,0"))
      (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
      (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
      (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "8"))
      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "commuteIntersection" (formula "20") (term "0,0,0"))
      (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "commuteIntersection" (formula "20") (term "0,0"))
      (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "commuteIntersection" (formula "20") (term "0"))
      (rule "close" (formula "20") (ifseqformula "7"))
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "22"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "16"))
      (rule "impRight" (formula "23"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "eqSymm" (formula "26") (term "0,0,1,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "26") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "26") (term "0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "17"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "rtrn_1"))
      (rule "assignment" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "returnExpr_1"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "exc_2"))
      (rule "assignment" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "thrownExc_1"))
      (rule "applyEq" (formula "26") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
      (rule "applyEq" (formula "18") (term "0") (ifseqformula "9"))
      (rule "blockReturn" (formula "26") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "26") (term "1,0,0,1"))
      (rule "blockReturn" (formula "26") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "26") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "26") (term "0,1,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "26") (term "0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "18"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "eqSymm" (formula "24"))
      (rule "inEqSimp_commuteLeq" (formula "25"))
      (rule "inEqSimp_commuteLeq" (formula "24"))
      (rule "disjointDefinition" (formula "23"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "notLeft" (formula "23"))
      (rule "eqSymm" (formula "25"))
      (rule "disjointDefinition" (formula "22"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "eqSymm" (formula "24"))
      (rule "disjointDefinition" (formula "21"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "notLeft" (formula "21"))
      (rule "eqSymm" (formula "23"))
      (rule "disjointDefinition" (formula "20"))
      (rule "disjointDefinition" (formula "18"))
      (rule "disjointDefinition" (formula "19"))
      (rule "sortsDisjointModuloNull" (formula "25"))
      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
      (rule "false_right" (formula "25"))
      (rule "sortsDisjointModuloNull" (formula "24"))
      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
      (rule "false_right" (formula "24"))
      (rule "sortsDisjointModuloNull" (formula "23"))
      (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
      (rule "false_right" (formula "23"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_12"))
      (rule "assignment" (formula "22") (term "1"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_13"))
      (rule "assignment_read_attribute_this" (formula "22"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "8"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "commuteIntersection" (formula "20") (term "0"))
      (rule "commuteIntersection" (formula "18") (term "0"))
      (rule "commuteIntersection" (formula "18") (term "0"))
      (builtin "Loop Invariant" (formula "20") (newnames "heapBeforeLoop_1,i_1BeforeLoop_0,i_1_1,anon_heap_loop_1,o,f,variant_1,b_3"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
         (rule "leq_literals" (formula "20") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
         (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "8"))
         (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1"))
         (rule "mul_literals" (formula "20") (term "1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "20") (term "0,1"))
         (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
         (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "20") (term "0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "20") (term "0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "20"))
         (rule "eqSymm" (formula "20") (term "1,0,0"))
         (rule "replace_known_left" (formula "20") (term "1,0,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
         (rule "disjointDefinition" (formula "20") (term "0,0,0,0,0,0"))
         (rule "disjointDefinition" (formula "20") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "eqSymm" (formula "20") (term "0,1,0,0,0"))
         (rule "disjointDefinition" (formula "20") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "eqSymm" (formula "20") (term "0,1,0,0"))
         (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0,0"))
         (rule "replace_known_right" (formula "20") (term "0,0,1,0,0,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")))
         (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
         (rule "replace_known_right" (formula "20") (term "1,0,1,0,0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
         (rule "disjointDefinition" (formula "20") (term "1,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "eqSymm" (formula "20") (term "0,1,0"))
         (rule "disjointDefinition" (formula "20") (term "1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0"))
         (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")))
         (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "8"))
         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "less_than_comparison_simple" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
         (rule "commuteIntersection" (formula "20") (term "0,1,0"))
         (rule "replace_known_left" (formula "20") (term "1,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "commuteIntersection" (formula "20") (term "0,1"))
         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "commuteIntersection" (formula "20") (term "0"))
         (rule "close" (formula "20") (ifseqformula "5"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "22") (term "0,1,1,1,0,1"))
         (rule "andLeft" (formula "20"))
         (rule "impRight" (formula "23"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "eqSymm" (formula "26") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "26") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "26") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "26") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_3_2"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "rtrn_2"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "returnExpr_2"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "exc_3"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "thrownExc_2"))
         (rule "applyEq" (formula "26") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "9"))
         (rule "blockReturn" (formula "26") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "26") (term "1,0,0,1"))
         (rule "blockReturn" (formula "26") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "26") (term "1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "26") (term "0,1,0,0,1,1,1,0,1"))
         (rule "nnf_notAnd" (formula "26") (term "0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "23"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "disjointDefinition" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "29"))
         (rule "disjointDefinition" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "notLeft" (formula "26"))
         (rule "eqSymm" (formula "28"))
         (rule "disjointDefinition" (formula "25"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notLeft" (formula "25"))
         (rule "eqSymm" (formula "27"))
         (rule "disjointDefinition" (formula "24"))
         (rule "disjointDefinition" (formula "22"))
         (rule "disjointDefinition" (formula "23"))
         (rule "sortsDisjointModuloNull" (formula "29"))
         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "33"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
         (rule "false_right" (formula "29"))
         (rule "sortsDisjointModuloNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "37")))
         (rule "false_right" (formula "28"))
         (rule "sortsDisjointModuloNull" (formula "27"))
         (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
         (rule "false_right" (formula "27"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
         (rule "less_than_comparison_simple" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0"))
         (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_19"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "compound_less_than_comparison_2" (formula "27") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "27") (term "1"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_20"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "variableDeclarationAssign" (formula "27") (term "1"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_21"))
         (rule "assignment_read_attribute_this" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "8"))
         (rule "commuteIntersection" (formula "25") (term "0"))
         (rule "commuteIntersection" (formula "23") (term "0"))
         (rule "commuteIntersection" (formula "23") (term "0"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "compound_less_than_comparison_2" (formula "31") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
         (rule "variableDeclarationAssign" (formula "31") (term "1"))
         (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_22"))
         (rule "assignment" (formula "31") (term "1"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "variableDeclarationAssign" (formula "31") (term "1"))
         (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_23"))
         (rule "assignment_read_attribute_this" (formula "31"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "8"))
         (rule "less_than_comparison_simple" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
         (rule "emptyModality" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notRight" (formula "25"))
         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0"))
         (rule "qeq_literals" (formula "19") (term "0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "less_than_comparison_simple" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "30") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1,1,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "ifUnfold" (formula "29") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_24"))
         (rule "emptyModality" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "notRight" (formula "28"))
         (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0"))
         (rule "qeq_literals" (formula "27") (term "0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "compound_less_than_comparison_2" (formula "28") (term "1") (inst "#v1=x_26") (inst "#v0=x_25"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_25"))
         (rule "assignment" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_26"))
         (rule "assignment_read_attribute_this" (formula "28"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "13"))
         (rule "less_than_comparison_simple" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "ifSplit" (formula "33"))
         (branch "if x_19 true"
            (builtin "One Step Simplification" (formula "34"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "33") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_27"))
            (rule "compound_assignment_2" (formula "33") (term "1") (inst "#v=x_28"))
            (rule "variableDeclarationAssign" (formula "33") (term "1"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_28"))
            (rule "eval_order_array_access4" (formula "33") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "33") (term "1"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_arr_1"))
            (rule "assignment_read_attribute_this" (formula "33"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "assignment_array2" (formula "33"))
            (branch "Normal Execution (x_arr_1 != null)"
               (builtin "One Step Simplification" (formula "33"))
               (rule "compound_assignment_1_new" (formula "33") (term "1"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "ifSplit" (formula "28"))
               (branch "if x_24 true"
                  (builtin "One Step Simplification" (formula "29"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_29"))
                  (rule "compound_assignment_2" (formula "28") (term "1") (inst "#v=x_30"))
                  (rule "variableDeclarationAssign" (formula "28") (term "1"))
                  (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_30"))
                  (rule "eval_order_array_access4" (formula "28") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "28") (term "1"))
                  (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_arr_2"))
                  (rule "assignment_read_attribute_this" (formula "28"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "assignment_array2" (formula "28"))
                  (branch "Normal Execution (x_arr_2 != null)"
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "compound_assignment_1_new" (formula "28") (term "1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "ifSplit" (formula "33"))
                     (branch "if x_27 true"
                        (builtin "One Step Simplification" (formula "34"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "assignment" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "blockBreakNoLabel" (formula "34") (term "1"))
                        (rule "blockBreakLabel" (formula "34") (term "1"))
                        (rule "blockEmpty" (formula "34") (term "1"))
                        (rule "tryEmpty" (formula "34") (term "1"))
                        (rule "methodCallEmpty" (formula "34") (term "1"))
                        (rule "emptyModality" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "methodCallReturn" (formula "34") (term "1"))
                        (rule "assignment" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "methodCallEmpty" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "emptyModality" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "closeTrue" (formula "34"))
                     )
                     (branch "if x_27 false"
                        (builtin "One Step Simplification" (formula "34"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "34") (term "1"))
                        (rule "unusedLabel" (formula "34") (term "1"))
                        (rule "preincrement" (formula "34") (term "1"))
                        (rule "compound_int_cast_expression" (formula "34") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "34") (term "1"))
                        (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_31"))
                        (rule "remove_parentheses_right" (formula "34") (term "1"))
                        (rule "assignmentAdditionInt" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "translateJavaAddInt" (formula "34") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "34") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "34") (term "1"))
                        (rule "assignment" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "tryEmpty" (formula "34") (term "1"))
                        (rule "methodCallEmpty" (formula "34") (term "1"))
                        (rule "emptyModality" (formula "34") (term "1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,0,1"))
                        (rule "mul_literals" (formula "34") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "34") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1,1"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "34") (term "1,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "34") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1"))
                        (rule "times_zero_2" (formula "34") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1"))
                        (rule "applyEq" (formula "34") (term "1,0,1,1") (ifseqformula "14"))
                        (rule "polySimp_pullOutFactor2" (formula "34") (term "0,1,1"))
                        (rule "add_literals" (formula "34") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "34") (term "0,1,1"))
                        (rule "leq_literals" (formula "34") (term "1,1"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "applyEq" (formula "34") (term "0,1,0,0,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "14"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                        (rule "mul_literals" (formula "34") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                        (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "24"))
                        (rule "leq_literals" (formula "34") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "34") (term "0"))
                        (rule "eqSymm" (formula "34") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "34") (term "0,1,0,0,0,0,0,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "32")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                        (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "disjointDefinition" (formula "34") (term "0,0,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "34") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "eqSymm" (formula "34") (term "0,1,0,0,0"))
                        (rule "disjointDefinition" (formula "34") (term "1,0,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "34") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "eqSymm" (formula "34") (term "0,1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0,0"))
                        (rule "replace_known_right" (formula "34") (term "1,0,1,0,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                        (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0"))
                        (rule "replace_known_right" (formula "34") (term "1,0,1,0,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                        (rule "disjointDefinition" (formula "34") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "eqSymm" (formula "34") (term "0,1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "34") (term "0,1,0,0"))
                        (rule "replace_known_right" (formula "34") (term "0,0,1,0,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "35")))
                        (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "14"))
                        (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "commuteIntersection" (formula "34") (term "0,1,0"))
                        (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "commuteIntersection" (formula "34") (term "0,1,0"))
                        (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "commuteIntersection" (formula "34") (term "0,0"))
                        (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "allRight" (formula "34") (inst "sk=j_1"))
                        (rule "orRight" (formula "34"))
                        (rule "orRight" (formula "34"))
                        (rule "inEqSimp_geqRight" (formula "35"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "ifSplit" (formula "31"))
                        (branch "if x_29 true"
                           (builtin "One Step Simplification" (formula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "notLeft" (formula "1"))
                           (rule "assignment" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "assignment" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "blockBreakNoLabel" (formula "32") (term "1"))
                           (rule "blockBreakLabel" (formula "32") (term "1"))
                           (rule "blockEmpty" (formula "32") (term "1"))
                           (rule "tryEmpty" (formula "32") (term "1"))
                           (rule "methodCallEmpty" (formula "32") (term "1"))
                           (rule "emptyModality" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "methodCallReturn" (formula "32") (term "1"))
                           (rule "assignment" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "methodCallEmpty" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "emptyModality" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "allLeft" (formula "27") (inst "t=j_1"))
                           (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "27") (term "0,0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "2"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "28"))
                           (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                           (rule "add_literals" (formula "28") (term "1,0"))
                           (rule "times_zero_1" (formula "28") (term "0"))
                           (rule "leq_literals" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "35") (term "0,2,0") (ifseqformula "25"))
                           (rule "close" (formula "35") (ifseqformula "1"))
                        )
                        (branch "if x_29 false"
                           (builtin "One Step Simplification" (formula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "blockEmpty" (formula "32") (term "1"))
                           (rule "preincrement" (formula "32") (term "1"))
                           (rule "compound_int_cast_expression" (formula "32") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_32"))
                           (rule "remove_parentheses_right" (formula "32") (term "1"))
                           (rule "assignmentAdditionInt" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "translateJavaAddInt" (formula "32") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                           (rule "unusedLabel" (formula "32") (term "1"))
                           (rule "widening_identity_cast_5" (formula "32") (term "1"))
                           (rule "assignment" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "tryEmpty" (formula "32") (term "1"))
                           (rule "methodCallEmpty" (formula "32") (term "1"))
                           (rule "emptyModality" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "0,0,1"))
                           (rule "mul_literals" (formula "32") (term "0,0,0,1"))
                           (rule "precOfInt" (formula "32") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,1"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1"))
                           (rule "add_zero_left" (formula "32") (term "0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "32") (term "1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "32") (term "0,0,0,1,1"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,1"))
                           (rule "inEqSimp_homoInEq0" (formula "32") (term "0,1"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "32") (term "0,0,1"))
                           (rule "applyEq" (formula "32") (term "0,1,0,0,0") (ifseqformula "17"))
                           (rule "replace_known_left" (formula "32") (term "1,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "applyEq" (formula "32") (term "1,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_pullOutFactor2" (formula "32") (term "0,1,1"))
                           (rule "add_literals" (formula "32") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "32") (term "0,1,1"))
                           (rule "leq_literals" (formula "32") (term "1,1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                           (rule "mul_literals" (formula "32") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                           (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_subsumption1" (formula "32") (term "0,0") (ifseqformula "30"))
                           (rule "leq_literals" (formula "32") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "32") (term "0"))
                           (rule "eqSymm" (formula "32") (term "1,0,0,0"))
                           (rule "replace_known_right" (formula "32") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "34")) (ifInst ""  (formula "33")) (ifInst ""  (formula "36")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                           (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "disjointDefinition" (formula "32") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "eqSymm" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "disjointDefinition" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "disjointDefinition" (formula "32") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "eqSymm" (formula "32") (term "0,1,0,0"))
                           (rule "disjointDefinition" (formula "32") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "eqSymm" (formula "32") (term "0,1,0,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,1,0,0,0,0"))
                           (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,0,0") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")))
                           (rule "disjointDefinition" (formula "32") (term "0,0,0,0,0,0"))
                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,1,0,0"))
                           (rule "replace_known_right" (formula "32") (term "0,0,1,0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "34")))
                           (rule "sortsDisjointModuloNull" (formula "32") (term "0,1,0,0"))
                           (rule "replace_known_right" (formula "32") (term "1,0,1,0,0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "33")))
                           (rule "disjointDefinition" (formula "32") (term "1,0,0,0"))
                           (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "17"))
                           (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "commuteIntersection" (formula "32") (term "0,0,0,0"))
                           (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "commuteIntersection" (formula "32") (term "0,0,0"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "commuteIntersection" (formula "32") (term "0,0"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "allRight" (formula "32") (inst "sk=j_2"))
                           (rule "orRight" (formula "32"))
                           (rule "orRight" (formula "32"))
                           (rule "inEqSimp_geqRight" (formula "33"))
                           (rule "inEqSimp_leqRight" (formula "33"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "allLeft" (formula "30") (inst "t=j_1"))
                           (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "5"))
                           (rule "applyEqRigid" (formula "41") (term "0,2,0") (ifseqformula "30"))
                           (rule "close" (formula "41") (ifseqformula "6"))
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_2 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_2 != null, but i_1 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "29"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "false_right" (formula "29"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "27"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_literals" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "if x_24 false"
                  (builtin "One Step Simplification" (formula "29"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_1 = null)"
               (rule "false_right" (formula "34"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr_1 != null, but i Out of Bounds!)"
               (rule "false_right" (formula "34"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "5"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
               (rule "qeq_literals" (formula "24") (term "0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "closeFalse" (formula "24"))
            )
         )
         (branch "if x_19 false"
            (builtin "One Step Simplification" (formula "34"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_3_1"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
         (rule "blockEmpty" (formula "25") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "disjointDefinition" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "29"))
         (rule "disjointDefinition" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "notLeft" (formula "26"))
         (rule "eqSymm" (formula "28"))
         (rule "disjointDefinition" (formula "25"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notLeft" (formula "25"))
         (rule "eqSymm" (formula "27"))
         (rule "disjointDefinition" (formula "24"))
         (rule "disjointDefinition" (formula "22"))
         (rule "disjointDefinition" (formula "23"))
         (rule "sortsDisjointModuloNull" (formula "29"))
         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
         (rule "false_right" (formula "29"))
         (rule "sortsDisjointModuloNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")))
         (rule "false_right" (formula "28"))
         (rule "sortsDisjointModuloNull" (formula "27"))
         (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
         (rule "false_right" (formula "27"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
         (rule "less_than_comparison_simple" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0"))
         (rule "compound_less_than_comparison_2" (formula "27") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "27") (term "1"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_14"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "variableDeclarationAssign" (formula "27") (term "1"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_15"))
         (rule "assignment_read_attribute_this" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "8"))
         (rule "commuteIntersection" (formula "24") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "ifUnfold" (formula "29") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_16"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "less_than_comparison_simple" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0"))
         (rule "compound_less_than_comparison_2" (formula "30") (term "1") (inst "#v1=x_18") (inst "#v0=x_17"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_17"))
         (rule "assignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_18"))
         (rule "assignment_read_attribute_this" (formula "30"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "8"))
         (rule "emptyModality" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "notRight" (formula "24"))
         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
         (rule "add_literals" (formula "19") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0"))
         (rule "qeq_literals" (formula "19") (term "0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "methodCallEmpty" (formula "24") (term "1"))
         (rule "less_than_comparison_simple" (formula "29") (term "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "29") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "emptyModality" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "impRight" (formula "24"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
         (rule "inEqSimp_homoInEq1" (formula "23"))
         (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
         (rule "add_literals" (formula "23") (term "1,0"))
         (rule "times_zero_1" (formula "23") (term "0"))
         (rule "leq_literals" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "applyEq" (formula "29") (term "1,0,1,1,1,0,0,0,0") (ifseqformula "22"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "9") (term "1") (ifseqformula "21"))
         (rule "methodCallReturn" (formula "23") (term "1"))
         (rule "assignment" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1,1,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "emptyModality" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "closeTrue" (formula "27"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17"))
      (rule "inEqSimp_commuteLeq" (formula "16"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "b_1"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "8"))
      (rule "blockEmpty" (formula "25") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "19"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "18"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "eqSymm" (formula "24"))
      (rule "inEqSimp_commuteLeq" (formula "25"))
      (rule "inEqSimp_commuteLeq" (formula "24"))
      (rule "disjointDefinition" (formula "23"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "notLeft" (formula "23"))
      (rule "eqSymm" (formula "25"))
      (rule "disjointDefinition" (formula "22"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "eqSymm" (formula "24"))
      (rule "disjointDefinition" (formula "21"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "notLeft" (formula "21"))
      (rule "eqSymm" (formula "23"))
      (rule "disjointDefinition" (formula "20"))
      (rule "disjointDefinition" (formula "18"))
      (rule "disjointDefinition" (formula "19"))
      (rule "sortsDisjointModuloNull" (formula "25"))
      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
      (rule "false_right" (formula "25"))
      (rule "sortsDisjointModuloNull" (formula "24"))
      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "31")))
      (rule "false_right" (formula "24"))
      (rule "sortsDisjointModuloNull" (formula "23"))
      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")))
      (rule "false_right" (formula "23"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
      (rule "compound_less_than_comparison_2" (formula "27") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x"))
      (rule "assignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_1"))
      (rule "assignment_read_attribute_this" (formula "27"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "8"))
      (rule "commuteIntersection" (formula "20") (term "0"))
      (rule "commuteIntersection" (formula "18") (term "0"))
      (rule "commuteIntersection" (formula "18") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "less_than_comparison_simple" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
      (builtin "Loop Invariant" (formula "19") (newnames "heapBeforeLoop_0,i_1BeforeLoop,i_1_0,anon_heap_loop_0,o,f,variant_0,b_0"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
         (rule "leq_literals" (formula "19") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "19") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
         (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "8"))
         (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
         (rule "mul_literals" (formula "19") (term "1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "19") (term "0,1"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "19"))
         (rule "eqSymm" (formula "19") (term "1,0,0"))
         (rule "replace_known_right" (formula "19") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "disjointDefinition" (formula "19") (term "0,0,0,0,0,0"))
         (rule "disjointDefinition" (formula "19") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "eqSymm" (formula "19") (term "0,1,0,0"))
         (rule "disjointDefinition" (formula "19") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "eqSymm" (formula "19") (term "0,1,0,0,0"))
         (rule "disjointDefinition" (formula "19") (term "1,0,0,0,0"))
         (rule "disjointDefinition" (formula "19") (term "1,0,0,0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0,0"))
         (rule "replace_known_right" (formula "19") (term "1,0,1,0,0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")))
         (rule "disjointDefinition" (formula "19") (term "1,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "eqSymm" (formula "19") (term "0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0,0"))
         (rule "replace_known_right" (formula "19") (term "0,0,1,0,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")))
         (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0"))
         (rule "replace_known_right" (formula "19") (term "1,0,1,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")))
         (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "8"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "24") (term "1"))
         (rule "commuteIntersection" (formula "19") (term "0,1"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "commuteIntersection" (formula "19") (term "0,1"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "commuteIntersection" (formula "19") (term "0"))
         (rule "close" (formula "19") (ifseqformula "5"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,1,0,1,1"))
         (rule "andLeft" (formula "20"))
         (rule "impRight" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "eqSymm" (formula "25") (term "0,0,1,0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "25") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "25") (term "0,1,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "rtrn"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "returnExpr"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "thrownExc"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "9"))
         (rule "applyEq" (formula "25") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
         (rule "blockReturn" (formula "25") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "25") (term "1,0,0,1"))
         (rule "blockReturn" (formula "25") (term "1,0,1,0,1"))
         (rule "blockThrow" (formula "25") (term "1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "25") (term "0,1,0,0,1,1,1,0,1"))
         (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,0,1,1,1,0,1"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "disjointDefinition" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "29"))
         (rule "disjointDefinition" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "notLeft" (formula "26"))
         (rule "eqSymm" (formula "28"))
         (rule "disjointDefinition" (formula "25"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notLeft" (formula "25"))
         (rule "eqSymm" (formula "27"))
         (rule "disjointDefinition" (formula "24"))
         (rule "disjointDefinition" (formula "22"))
         (rule "disjointDefinition" (formula "23"))
         (rule "sortsDisjointModuloNull" (formula "29"))
         (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "33"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
         (rule "false_right" (formula "29"))
         (rule "sortsDisjointModuloNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
         (rule "false_right" (formula "28"))
         (rule "sortsDisjointModuloNull" (formula "27"))
         (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
         (rule "false_right" (formula "27"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
         (rule "methodCallEmpty" (formula "32") (term "1"))
         (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
         (rule "assignment_read_attribute_this" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "8"))
         (rule "commuteIntersection" (formula "24") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "emptyModality" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "impRight" (formula "30"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
         (rule "applyEq" (formula "27") (term "1,0,1,1,1,0,0,0") (ifseqformula "19"))
         (rule "polySimp_addComm0" (formula "27") (term "0,1,1,1,0,0,0"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "19"))
         (rule "inEqSimp_commuteGeq" (formula "24"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "19"))
         (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "18"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
         (rule "inEqSimp_homoInEq1" (formula "18"))
         (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
         (rule "add_literals" (formula "18") (term "1,0"))
         (rule "times_zero_1" (formula "18") (term "0"))
         (rule "leq_literals" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "applyEq" (formula "8") (term "1") (ifseqformula "17"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
         (rule "times_zero_1" (formula "20") (term "0,0"))
         (rule "add_zero_left" (formula "20") (term "0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
         (rule "methodCallReturn" (formula "29") (term "1"))
         (rule "assignment" (formula "29") (term "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_6"))
         (rule "methodCallEmpty" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "methodCallEmpty" (formula "33") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "compound_less_than_comparison_2" (formula "28") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_7"))
         (rule "assignment" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "variableDeclarationAssign" (formula "28") (term "1"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_8"))
         (rule "assignment_read_attribute_this" (formula "28"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "11"))
         (rule "emptyModality" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "notRight" (formula "27"))
         (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
         (rule "mul_literals" (formula "26") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
         (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "26") (term "1,0,0"))
         (rule "add_zero_right" (formula "26") (term "0,0"))
         (rule "qeq_literals" (formula "26") (term "0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
         (rule "times_zero_1" (formula "25") (term "0,0"))
         (rule "add_zero_left" (formula "25") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25"))
         (rule "mul_literals" (formula "25") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "25"))
         (rule "leq_literals" (formula "21") (term "0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "emptyModality" (formula "32") (term "1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "false_right" (formula "32"))
         (rule "less_than_comparison_simple" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "ifSplit" (formula "27"))
         (branch "if x_6 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_9"))
            (rule "compound_assignment_2" (formula "27") (term "1") (inst "#v=x_10"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_10"))
            (rule "eval_order_array_access4" (formula "27") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "27"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "assignment_array2" (formula "27"))
            (branch "Normal Execution (x_arr != null)"
               (builtin "One Step Simplification" (formula "27"))
               (rule "compound_assignment_1_new" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "ifSplit" (formula "27"))
               (branch "if x_9 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "1"))
                  (rule "assignment" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "assignment" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "blockBreakNoLabel" (formula "28") (term "1"))
                  (rule "blockBreakLabel" (formula "28") (term "1"))
                  (rule "blockEmpty" (formula "28") (term "1"))
                  (rule "tryEmpty" (formula "28") (term "1"))
                  (rule "methodCallEmpty" (formula "28") (term "1"))
                  (rule "emptyModality" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "methodCallReturn" (formula "28") (term "1"))
                  (rule "assignment" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "methodCallEmpty" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "emptyModality" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "false_right" (formula "28"))
                  (rule "allLeft" (formula "22") (inst "t=i_1_0"))
                  (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "22") (term "0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0"))
                  (rule "add_zero_right" (formula "22") (term "0"))
                  (rule "leq_literals" (formula "22"))
                  (rule "closeFalse" (formula "22"))
               )
               (branch "if x_9 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "blockEmpty" (formula "28") (term "1"))
                  (rule "unusedLabel" (formula "28") (term "1"))
                  (rule "preincrement" (formula "28") (term "1"))
                  (rule "compound_int_cast_expression" (formula "28") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "28") (term "1"))
                  (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_11"))
                  (rule "remove_parentheses_right" (formula "28") (term "1"))
                  (rule "assignmentAdditionInt" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "28") (term "1"))
                  (rule "assignment" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "tryEmpty" (formula "28") (term "1"))
                  (rule "methodCallEmpty" (formula "28") (term "1"))
                  (rule "emptyModality" (formula "28") (term "1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0,1"))
                  (rule "mul_literals" (formula "28") (term "0,0,0,1"))
                  (rule "precOfInt" (formula "28") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1,1"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "28") (term "0,0,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "applyEq" (formula "28") (term "1,0,0,1") (ifseqformula "13"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                  (rule "applyEq" (formula "28") (term "1,0,1,1") (ifseqformula "13"))
                  (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,1"))
                  (rule "add_literals" (formula "28") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "28") (term "0,1,1"))
                  (rule "leq_literals" (formula "28") (term "1,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "28") (term "0,1"))
                  (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "26"))
                  (rule "leq_literals" (formula "28") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "28") (term "0"))
                  (rule "eqSymm" (formula "28") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "28") (term "0,1,0,0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "31")) (ifInst ""  (formula "14")))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                  (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "disjointDefinition" (formula "28") (term "1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "eqSymm" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "disjointDefinition" (formula "28") (term "1,0,0,0,0,0,0,0"))
                  (rule "disjointDefinition" (formula "28") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "eqSymm" (formula "28") (term "0,1,0,0,0"))
                  (rule "disjointDefinition" (formula "28") (term "0,0,0,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "28") (term "1,0,1,0,0,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "30")))
                  (rule "disjointDefinition" (formula "28") (term "1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "eqSymm" (formula "28") (term "0,1,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "28") (term "0,1,0,0,0"))
                  (rule "replace_known_right" (formula "28") (term "1,0,1,0,0,0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
                  (rule "sortsDisjointModuloNull" (formula "28") (term "0,1,0,0,0"))
                  (rule "replace_known_right" (formula "28") (term "1,0,1,0,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "29")))
                  (rule "disjointDefinition" (formula "28") (term "1,0,0,0"))
                  (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "13"))
                  (rule "eqSymm" (formula "28") (term "1,0,0"))
                  (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_subsumption1" (formula "28") (term "1,0") (ifseqformula "25"))
                  (rule "leq_literals" (formula "28") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "commuteIntersection" (formula "28") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "commuteIntersection" (formula "28") (term "0,0,0"))
                  (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "commuteIntersection" (formula "28") (term "0,0"))
                  (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "allRight" (formula "28") (inst "sk=j_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "inEqSimp_leqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "allLeft" (formula "29") (inst "t=j_0"))
                  (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "29") (term "0,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "29"))
                  (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "28"))
                  (rule "inEqSimp_homoInEq1" (formula "29"))
                  (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                  (rule "add_literals" (formula "29") (term "1,0"))
                  (rule "times_zero_1" (formula "29") (term "0"))
                  (rule "leq_literals" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "applyEqRigid" (formula "30") (term "0,2,0") (ifseqformula "28"))
                  (rule "close" (formula "30") (ifseqformula "2"))
               )
            )
            (branch "Null Reference (x_arr = null)"
               (rule "false_right" (formula "28"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr != null, but i_1 Out of Bounds!)"
               (rule "false_right" (formula "28"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "22"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "26"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "if x_6 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "20"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "b_0_1"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "8"))
         (rule "blockEmpty" (formula "24") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "disjointDefinition" (formula "27"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "eqSymm" (formula "29"))
         (rule "disjointDefinition" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "notLeft" (formula "26"))
         (rule "eqSymm" (formula "28"))
         (rule "disjointDefinition" (formula "25"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notLeft" (formula "25"))
         (rule "eqSymm" (formula "27"))
         (rule "disjointDefinition" (formula "24"))
         (rule "disjointDefinition" (formula "22"))
         (rule "disjointDefinition" (formula "23"))
         (rule "sortsDisjointModuloNull" (formula "29"))
         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "32")))
         (rule "false_right" (formula "29"))
         (rule "sortsDisjointModuloNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "30")))
         (rule "false_right" (formula "28"))
         (rule "sortsDisjointModuloNull" (formula "27"))
         (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
         (rule "false_right" (formula "27"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
         (rule "methodCallEmpty" (formula "31") (term "1"))
         (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
         (rule "assignment_read_attribute_this" (formula "26"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "8"))
         (rule "commuteIntersection" (formula "24") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "commuteIntersection" (formula "22") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "emptyModality" (formula "29") (term "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "impRight" (formula "29"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "24"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "19"))
         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
         (rule "add_literals" (formula "19") (term "1,0"))
         (rule "times_zero_1" (formula "19") (term "0"))
         (rule "leq_literals" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
         (rule "inEqSimp_commuteGeq" (formula "21"))
         (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "17"))
         (rule "applyEq" (formula "8") (term "1") (ifseqformula "17"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
         (rule "times_zero_1" (formula "20") (term "0,0"))
         (rule "add_zero_left" (formula "20") (term "0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
         (rule "methodCallReturn" (formula "28") (term "1"))
         (rule "assignment" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "methodCallEmpty" (formula "23") (term "1"))
         (rule "methodCallEmpty" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "emptyModality" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "impRight" (formula "23"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "23"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "22"))
         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,0"))
         (rule "times_zero_1" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "22"))
         (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
         (rule "add_literals" (formula "22") (term "1,0"))
         (rule "times_zero_1" (formula "22") (term "0"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "1"))
         (rule "emptyModality" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "false_right" (formula "26"))
         (rule "methodCallReturn" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1,1,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "emptyModality" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "closeTrue" (formula "25"))
      )
   )
)
)

}
