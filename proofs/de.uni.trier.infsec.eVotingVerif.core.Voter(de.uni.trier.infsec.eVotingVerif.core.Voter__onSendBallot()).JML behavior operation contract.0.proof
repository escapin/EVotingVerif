\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon May 05 16:27:04 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon May 05 16:27:04 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Voter[de.uni.trier.infsec.eVotingVerif.core.Voter\\:\\:onSendBallot()].JML behavior operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Voter[de.uni.trier.infsec.eVotingVerif.core.Voter\\:\\:onSendBallot()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "b2656c58a8f3b048ebae20578022c92025b49a71"))

(autoModeTime "124111")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "6"))
(rule "eqSymm" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_onSendBallot,savedHeapBefore_onSendBallot"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "assignment_read_attribute_this" (formula "10"))
(builtin "One Step Simplification" (formula "10"))
(rule "apply_eq_boolean" (formula "10") (term "0,1,0") (ifseqformula "9"))
(rule "ifSplit" (formula "10"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "assignment_write_attribute_this" (formula "10"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "ballot"))
   (rule "arrayCreation" (formula "10") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "_tmpArray"))
   (rule "assignment_read_attribute_this" (formula "10"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "dismissNonSelectedField" (formula "10") (term "0,1,0"))
   (rule "arrayCreation" (formula "10") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "dim0"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "less_literals" (formula "10") (term "0,0,1,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "ifSplit" (formula "10"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "lenNonNegative" (formula "6") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "lenNonNegative" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "lenNonNegative" (formula "8") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=x_arr_2"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_2"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=x_arr_3"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_3"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "allocateInstanceWithLength" (formula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "wellFormedStorePrimitive" (formula "1") (term "0,1,0"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "dismissNonSelectedField" (formula "11") (term "0"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCall" (formula "15"))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_write_attribute_this" (formula "15"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallWithinClass" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "arrayInitialisation" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0"))
         (rule "applyEq" (formula "15") (term "1,2,1,0,1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "15") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment_write_attribute_this" (formula "15"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "methodCallReturn" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_to_primitive_array_component" (formula "15"))
         (branch "Normal Execution (x_arr != null)"
            (builtin "One Step Simplification" (formula "15"))
            (rule "blockEmpty" (formula "15") (term "1"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallUnfoldTarget" (formula "15") (term "1") (inst "#v0=s"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "s"))
            (rule "assignment_read_attribute_this" (formula "15"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "methodCallUnfoldArguments" (formula "15") (term "1"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "var"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "var_1"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "var_2"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "var_3"))
            (rule "stringAssignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "eqSymm" (formula "15"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "var_4"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_sendTo,exc_0,heapAfter_sendTo,anon_heap_sendTo") (contract "de.uni.trier.infsec.functionalities.smt.Sender[de.uni.trier.infsec.functionalities.smt.Sender::sendTo([B,int,java.lang.String,int)].JML behavior operation contract.0"))
            (branch "Post (sendTo)"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,0,0,1,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,1,1,1,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,1,0,1,1,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,1,0,0,1,1,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,0,0,0,0,1,1,1") (ifseqformula "13"))
               (rule "typeEqDerived" (formula "14") (term "0,1,0,0,0,1,1,1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "20"))
               (rule "exLeft" (formula "17") (inst "sk=i_0"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "16"))
               (rule "eqSymm" (formula "21"))
               (rule "eqSymm" (formula "22"))
               (rule "inEqSimp_commuteLeq" (formula "17"))
               (rule "lenOfSeqConcatEQ" (formula "22") (term "1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "polySimp_addComm0" (formula "22") (term "1"))
               (rule "lenOfSeqConcatEQ" (formula "21") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "polySimp_addComm0" (formula "21") (term "0"))
               (rule "lenOfSeqConcatEQ" (formula "21") (term "1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "polySimp_addComm0" (formula "21") (term "1"))
               (rule "lenOfSeqConcatEQ" (formula "22") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "polySimp_addComm0" (formula "22") (term "0"))
               (rule "pullOutSelect" (formula "12") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_1"))
               (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "12"))
               (rule "simplifySelectOfCreate" (formula "12"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")))
               (rule "simplifySelectOfMemset" (formula "12"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
               (rule "elementOfArrayRange" (formula "12") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")))
               (rule "simplifySelectOfCreate" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "27")))
               (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "13") (term "0,1,0") (ifseqformula "12"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_2"))
               (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "replaceKnownSelect_taclet6_0" (formula "20") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "20") (term "2,0"))
               (rule "elementOfUnion" (formula "20") (term "0,0"))
               (rule "elementOfUnion" (formula "20") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "20") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "elementOfUnion" (formula "20") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "20") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "elementOfUnion" (formula "20") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "20") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "elementOfSingleton" (formula "20") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_0"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "19"))
               (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "elementOfUnion" (formula "19") (term "0,0"))
               (rule "elementOfUnion" (formula "19") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "19") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "elementOfUnion" (formula "19") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "19") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "elementOfUnion" (formula "19") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "19") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "elementOfUnion" (formula "14") (term "0,0,0"))
               (rule "elementOfUnion" (formula "14") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "14") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "elementOfUnion" (formula "14") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "14") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "elementOfUnion" (formula "14") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "14") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "elementOfSingleton" (formula "14") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_0"))
               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "15"))
               (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "15"))
               (rule "simplifySelectOfCreate" (formula "15"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfMemset" (formula "15"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "eqSymm" (formula "16"))
               (rule "elementOfArrayRange" (formula "15") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfCreate" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "30")))
               (rule "applyEqReverse" (formula "26") (term "0,1,1") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "25") (term "0,1,1") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_0"))
               (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "16"))
               (rule "simplifySelectOfCreate" (formula "16"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "simplifySelectOfStore" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfMemset" (formula "16"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "eqSymm" (formula "17"))
               (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
               (rule "elementOfArrayRange" (formula "16") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "simplifySelectOfStore" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfCreate" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "16"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "30")))
               (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "16"))
               (rule "hideAuxiliaryEq" (formula "16"))
               (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "pullOutSelect" (formula "17") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_0"))
               (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "pullOutSelect" (formula "18") (term "1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_0"))
               (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_1"))
               (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "19"))
               (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "19"))
               (rule "simplifySelectOfCreate" (formula "19"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
               (rule "simplifySelectOfMemset" (formula "19"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "20"))
               (rule "hideAuxiliaryEq" (formula "20"))
               (rule "elementOfArrayRange" (formula "19") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")))
               (rule "simplifySelectOfCreate" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
               (rule "simplifySelectOfStore" (formula "19"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
               (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "19"))
               (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "19"))
               (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "19"))
               (rule "hideAuxiliaryEq" (formula "19"))
               (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "elementOfUnion" (formula "17") (term "0,0,0"))
               (rule "elementOfUnion" (formula "18") (term "0,0"))
               (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_1"))
               (rule "simplifySelectOfCreate" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfMemset" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "elementOfArrayRange" (formula "21") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfCreate" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
               (rule "simplifySelectOfStore" (formula "21"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "elementOfUnion" (formula "17") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "17") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "elementOfUnion" (formula "18") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "18") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "pullOutSelect" (formula "14") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfCreate" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "castDel" (formula "14") (term "1,0"))
               (rule "eqSymm" (formula "14") (term "0,0,0"))
               (rule "eqSymm" (formula "14") (term "0,1,0,0"))
               (rule "replace_known_right" (formula "14") (term "0,1,0,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "sortsDisjointModuloNull" (formula "14") (term "0,0"))
               (rule "eqSymm" (formula "14") (term "1,0,0"))
               (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "31")))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfMemset" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfCreate" (formula "14"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
               (rule "castDel" (formula "14") (term "0"))
               (rule "applyEqReverse" (formula "15") (term "0,0,1,0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_1"))
               (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replaceKnownSelect_taclet18_0" (formula "15") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "15") (term "2,0"))
               (rule "eqSymm" (formula "16"))
               (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
               (rule "hideAuxiliaryEq" (formula "16"))
               (rule "elementOfUnion" (formula "17") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "17") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "elementOfUnion" (formula "18") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "18") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_1"))
               (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replaceKnownSelect_taclet28_0" (formula "16") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet36_0" (formula "16") (term "2,0"))
               (rule "eqSymm" (formula "17"))
               (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "elementOfUnion" (formula "15") (term "0,0"))
               (rule "elementOfUnion" (formula "17") (term "1,0,0,0"))
               (rule "elementOfSingleton" (formula "17") (term "1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "elementOfSingleton" (formula "17") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "elementOfUnion" (formula "16") (term "0,0"))
               (rule "elementOfUnion" (formula "15") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "15") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfUnion" (formula "16") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "16") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "elementOfUnion" (formula "15") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "15") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfUnion" (formula "16") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "16") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "elementOfUnion" (formula "15") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "15") (term "1,1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfUnion" (formula "16") (term "1,0,0"))
               (rule "elementOfSingleton" (formula "16") (term "0,1,0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "pullOutSelect" (formula "14") (term "2,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfCreate" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "simplifySelectOfStore" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "castDel" (formula "14") (term "0"))
               (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "pullOutSelect" (formula "17") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
               (rule "simplifySelectOfCreate" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "castDel" (formula "17") (term "1,0"))
               (rule "eqSymm" (formula "17") (term "0,0,0"))
               (rule "eqSymm" (formula "17") (term "0,1,0,0"))
               (rule "replace_known_right" (formula "17") (term "0,1,0,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "sortsDisjointModuloNull" (formula "17") (term "0,0"))
               (rule "eqSymm" (formula "17") (term "1,0,0"))
               (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfMemset" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfCreate" (formula "17"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "28")))
               (rule "castDel" (formula "17") (term "1,0"))
               (rule "eqSymm" (formula "17") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "17") (term "0,0"))
               (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "applyEqReverse" (formula "18") (term "0,0,1,1,0,0") (ifseqformula "17"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_1"))
               (rule "simplifySelectOfCreate" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfMemset" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "2,0"))
               (rule "elementOfArrayRange" (formula "17") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "simplifySelectOfCreate" (formula "17"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "28")))
               (rule "simplifySelectOfStore" (formula "17"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "commuteUnion_2" (formula "12") (term "1,1,0"))
               (rule "methodCallEmpty" (formula "31") (term "1"))
               (rule "lenNonNegative" (formula "20") (term "1"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "cnf_rightDist" (formula "17") (term "0,0"))
               (rule "commute_or" (formula "17") (term "1,0,0"))
               (rule "commuteUnion" (formula "12") (term "0,1,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,1,1,0"))
               (rule "commuteUnion_2" (formula "12") (term "0,1,1,0"))
               (rule "commuteUnion" (formula "12") (term "1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,0,1,0"))
               (rule "tryEmpty" (formula "32") (term "1"))
               (rule "emptyModality" (formula "32") (term "1"))
               (rule "andRight" (formula "32"))
               (branch "Case 1"
                  (rule "andRight" (formula "32"))
                  (branch "Case 1"
                     (rule "impRight" (formula "32"))
                     (rule "andRight" (formula "33"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "33"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "replaceKnownSelect_taclet69_0" (formula "32") (term "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet70_0" (formula "32") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
                        (rule "lenOfSeqConcat" (formula "32") (term "1,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                        (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0,1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                        (rule "lenOfSeqConcat" (formula "32") (term "0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "polySimp_homoEq" (formula "32") (term "0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                        (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "32") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "allRight" (formula "32") (inst "sk=iv_2"))
                        (rule "impRight" (formula "32"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "getOfSeqConcat" (formula "34") (term "0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                        (rule "castDel" (formula "34") (term "2,2,0"))
                        (rule "castDel" (formula "34") (term "1,2,0"))
                        (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                        (rule "getOfSeqConcat" (formula "34") (term "1"))
                        (rule "eqSymm" (formula "34"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                        (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                        (rule "castDel" (formula "34") (term "1,2,0"))
                        (rule "castDel" (formula "34") (term "2,2,0"))
                        (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                        (rule "eqSymm" (formula "34"))
                        (rule "pullOutSelect" (formula "34") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__92"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_3"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (inst "s=s_1") (inst "i=i"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replaceKnownSelect_taclet15_0" (formula "29") (term "0,1"))
                        (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,0,0,0,0,1,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "30"))
                        (rule "exLeft" (formula "29") (inst "sk=i_34"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "33"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "32"))
                        (rule "inEqSimp_commuteLeq" (formula "29"))
                        (rule "disjointDefinition" (formula "35"))
                        (rule "castedGetAny" (formula "31") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0"))
                        (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_31"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                        (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,1") (ifseqformula "32"))
                        (rule "hideAuxiliaryEq" (formula "32"))
                        (rule "elementOfUnion" (formula "31") (term "0,0"))
                        (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "31") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_31"))
                        (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_homoInEq1" (formula "34"))
                        (rule "polySimp_addComm1" (formula "34") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1"))
                        (rule "mul_literals" (formula "34") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                        (rule "elementOfUnion" (formula "33") (term "0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                        (rule "times_zero_1" (formula "32") (term "0,0"))
                        (rule "add_zero_left" (formula "32") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                        (rule "mul_literals" (formula "32") (term "1"))
                        (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "34") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "pullOutSelect" (formula "31") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_32"))
                        (rule "simplifySelectOfCreate" (formula "31"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "simplifySelectOfStore" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfMemset" (formula "31"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "dismissNonSelectedField" (formula "31") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "simplifySelectOfStore" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfCreate" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "31"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                        (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "31"))
                        (rule "hideAuxiliaryEq" (formula "31"))
                        (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_32"))
                        (rule "simplifySelectOfCreate" (formula "34"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "simplifySelectOfStore" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfMemset" (formula "34"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "dismissNonSelectedField" (formula "34") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "simplifySelectOfStore" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfCreate" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfStore" (formula "34"))
                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                        (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "nnf_imp2or" (formula "36") (term "0"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                        (rule "nnf_notOr" (formula "36") (term "1,0,0,0"))
                        (rule "nnf_notOr" (formula "36") (term "1,1,0,0,0"))
                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "replace_known_right" (formula "21") (term "0,1,0,0,0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "disjointDefinition" (formula "11"))
                        (rule "disjointAndSubset_5" (formula "29") (ifseqformula "11"))
                        (rule "intersectAllFieldsFreshLocs" (formula "29") (term "0"))
                        (rule "replaceKnownSelect_taclet95_0" (formula "29") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet102_0" (formula "29") (term "0,1,0"))
                        (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "7")))
                        (rule "ifthenelse_split" (formula "28") (term "0"))
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "29"))
                           (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "29"))
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "29"))
                           (rule "hideAuxiliaryEq" (formula "29"))
                           (rule "disjointNotInOtherLocset1" (formula "28") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "eqSymm" (formula "40"))
                           (rule "disjointAndSubset_5" (formula "30") (ifseqformula "11"))
                           (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "ifthenelse_split" (formula "18") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "20") (term "0,1,1") (ifseqformula "19"))
                              (rule "applyEqReverse" (formula "47") (term "1,2,1") (ifseqformula "19"))
                              (rule "hideAuxiliaryEq" (formula "19"))
                              (rule "eqSymm" (formula "46"))
                              (rule "disjointNotInOtherLocset1" (formula "18") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "eqSymm" (formula "40"))
                              (rule "sortsDisjointModuloNull" (formula "40"))
                              (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "43")))
                              (rule "false_right" (formula "40"))
                              (rule "ifthenelse_split" (formula "26") (term "0"))
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
                                 (rule "hideAuxiliaryEq" (formula "27"))
                                 (rule "disjointNotInOtherLocset1" (formula "26") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "eqSymm" (formula "40"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "20") (inst "iv=iv"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "22"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,0"))
                                 (rule "times_zero_1" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "10") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "exLeft" (formula "10") (inst "sk=i_40"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "disjointNotInOtherLocset1" (formula "24") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "disjointNotInOtherLocset1" (formula "34") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "disjointAndSubset_5" (formula "37") (ifseqformula "17"))
                                 (rule "intersectWithSingleton" (formula "37") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "intersectWithSingleton" (formula "37") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "48")))
                                 (rule "replaceKnownSelect_taclet76_0" (formula "37") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "37") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                                 (rule "commuteIntersection" (formula "18") (term "0"))
                                 (rule "disjointAllFields" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "disjointAndSubset_3" (formula "37") (ifseqformula "17"))
                                 (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "true_left" (formula "37"))
                                 (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "eqSymm" (formula "47"))
                                 (rule "disjointNotInOtherLocset2" (formula "24") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "eqSymm" (formula "47"))
                                 (rule "sortsDisjointModuloNull" (formula "47"))
                                 (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "51")))
                                 (rule "false_right" (formula "47"))
                                 (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "eqSymm" (formula "47"))
                                 (rule "commute_or" (formula "45") (term "0,0,0"))
                                 (rule "commuteIntersection" (formula "46") (term "0"))
                                 (rule "intersectWithSingleton" (formula "46") (term "0"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "notLeft" (formula "46"))
                                 (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "commute_and" (formula "44") (term "1,1,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commuteIntersection" (formula "16") (term "0"))
                                 (rule "intersectWithSingleton" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "ifthenelse_negated" (formula "26") (term "0"))
                                 (rule "elementOfSubsetOfUnion1" (formula "45") (ifseqformula "35") (ifseqformula "44"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "44"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")))
                                 (rule "false_right" (formula "44"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "38") (term "0"))
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "44") (term "0,1,0,1,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                    (rule "times_zero_1" (formula "40") (term "0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1"))
                                    (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "commute_or" (formula "15") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "disjointNotInOtherLocset2" (formula "41") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "eqSymm" (formula "44"))
                                       (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                       (rule "times_zero_1" (formula "40") (term "0,0"))
                                       (rule "add_zero_left" (formula "40") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "43") (term "0"))
                                       (rule "distr_forallAnd" (formula "43"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "castDel" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "43") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "commute_or" (formula "43") (term "0"))
                                       (rule "ifthenelse_split" (formula "52") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_left" (formula "53") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                          (rule "leq_literals" (formula "53") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0"))
                                          (rule "leq_literals" (formula "51") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "cnf_rightDist" (formula "42") (term "0"))
                                          (rule "distr_forallAnd" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "shift_paren_or" (formula "15") (term "0"))
                                          (rule "shift_paren_or" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "43") (term "0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "42") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "42"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1"))
                                             (rule "mul_literals" (formula "41") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "38") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "38"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "47"))
                                             (rule "close" (formula "44") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_right" (formula "53") (term "0,2,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
                                       (rule "times_zero_1" (formula "39") (term "0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                       (rule "mul_literals" (formula "39") (term "1"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "commute_or" (formula "41") (term "0"))
                                       (rule "ifthenelse_split" (formula "51") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "52"))
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "52"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "52"))
                                          (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "inEqSimp_geqRight" (formula "51"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "53") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "cnf_rightDist" (formula "40") (term "0"))
                                          (rule "distr_forallAnd" (formula "40"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "shift_paren_or" (formula "15") (term "0"))
                                          (rule "shift_paren_or" (formula "41") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "41") (term "0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "38") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "38"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "34") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "48")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "46"))
                                             (rule "close" (formula "42") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                    (rule "times_zero_1" (formula "39") (term "0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "commute_or" (formula "15") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "15") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "40") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "41"))
                                       (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                       (rule "times_zero_1" (formula "39") (term "0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                       (rule "mul_literals" (formula "39") (term "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "eqSymm" (formula "43"))
                                       (rule "cnf_rightDist" (formula "42") (term "0"))
                                       (rule "distr_forallAnd" (formula "42"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "commute_or" (formula "42") (term "0"))
                                       (rule "cnf_rightDist" (formula "15") (term "0"))
                                       (rule "distr_forallAnd" (formula "15"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "shift_paren_or" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "52") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "53"))
                                          (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "inEqSimp_geqRight" (formula "52"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "cnf_rightDist" (formula "41") (term "0"))
                                          (rule "distr_forallAnd" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "shift_paren_or" (formula "42") (term "0"))
                                          (rule "commute_or" (formula "42") (term "0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "41") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "41"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "47"))
                                             (rule "close" (formula "43") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                       (rule "times_zero_1" (formula "38") (term "0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                       (rule "mul_literals" (formula "38") (term "1"))
                                       (rule "cnf_rightDist" (formula "40") (term "0"))
                                       (rule "distr_forallAnd" (formula "40"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "castDel" (formula "40") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "commute_or" (formula "40") (term "0"))
                                       (rule "cnf_rightDist" (formula "15") (term "0"))
                                       (rule "distr_forallAnd" (formula "15"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "shift_paren_or" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "51") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "52"))
                                          (rule "replace_known_left" (formula "52") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0"))
                                          (rule "leq_literals" (formula "50") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                          (rule "leq_literals" (formula "50") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "cnf_rightDist" (formula "39") (term "0"))
                                          (rule "distr_forallAnd" (formula "39"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "shift_paren_or" (formula "40") (term "0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "48")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                             (rule "close" (formula "41") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "52"))
                                          (rule "replace_known_right" (formula "52") (term "0,2,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "closeTrue" (formula "52"))
                                       )
                                    )
                                 )
                              )
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "20") (inst "iv=iv"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "22"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,0"))
                                 (rule "times_zero_1" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "10") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "exLeft" (formula "10") (inst "sk=i_39"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "45"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "false_right" (formula "45"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "disjointAndSubset_5" (formula "36") (ifseqformula "17"))
                                 (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "17"))
                                 (rule "elementOfSingleton" (formula "47"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "false_right" (formula "47"))
                                 (rule "intersectWithSingleton" (formula "36") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
                                 (rule "replaceKnownSelect_taclet76_0" (formula "36") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "36") (term "0,0"))
                                 (rule "intersectWithSingleton" (formula "36") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "45") (term "0,0,0"))
                                 (rule "commuteIntersection" (formula "18") (term "0"))
                                 (rule "disjointAllFields" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "disjointNotInOtherLocset2" (formula "24") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "sortsDisjointModuloNull" (formula "46"))
                                 (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "50")))
                                 (rule "false_right" (formula "46"))
                                 (rule "disjointAndSubset_3" (formula "36") (ifseqformula "17"))
                                 (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "disjointNotInOtherLocset2" (formula "33") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "eqSymm" (formula "46"))
                                 (rule "commuteIntersection" (formula "45") (term "0"))
                                 (rule "intersectWithSingleton" (formula "45") (term "0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "notLeft" (formula "45"))
                                 (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "commute_and" (formula "43") (term "1,1,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commuteIntersection" (formula "16") (term "0"))
                                 (rule "intersectWithSingleton" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "ifthenelse_negated" (formula "26") (term "0"))
                                 (rule "elementOfSubsetOfUnion1" (formula "44") (ifseqformula "34") (ifseqformula "43"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                 (rule "false_right" (formula "43"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "37") (term "0"))
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,0,1,0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                    (rule "mul_literals" (formula "39") (term "0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1"))
                                    (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "cnf_rightDist" (formula "15") (term "0"))
                                    (rule "distr_forallAnd" (formula "15"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "42") (term "0"))
                                    (rule "distr_forallAnd" (formula "42"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "castDel" (formula "42") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "commute_or" (formula "42") (term "0"))
                                    (rule "ifthenelse_split" (formula "40") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "41"))
                                       (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                       (rule "times_zero_1" (formula "39") (term "0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                       (rule "mul_literals" (formula "39") (term "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "eqSymm" (formula "43"))
                                       (rule "cnf_rightDist" (formula "42") (term "0"))
                                       (rule "distr_forallAnd" (formula "42"))
                                       (rule "andLeft" (formula "42"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "shift_paren_or" (formula "43") (term "0"))
                                       (rule "commute_or" (formula "43") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "53") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "54"))
                                          (rule "replace_known_left" (formula "54") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                          (rule "leq_literals" (formula "54") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                          (rule "leq_literals" (formula "52") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "40"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "37") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "37"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "33") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "51")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "47"))
                                             (rule "close" (formula "43") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "54"))
                                          (rule "replace_known_right" (formula "54") (term "0,2,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                       (rule "times_zero_1" (formula "38") (term "0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                       (rule "mul_literals" (formula "38") (term "1"))
                                       (rule "cnf_rightDist" (formula "40") (term "0"))
                                       (rule "distr_forallAnd" (formula "40"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "commute_or_2" (formula "40") (term "0"))
                                       (rule "shift_paren_or" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "52") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_left" (formula "53") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "53") (term "0,0,0"))
                                          (rule "leq_literals" (formula "53") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                          (rule "leq_literals" (formula "51") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "37") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "37"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "48")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                             (rule "close" (formula "41") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_right" (formula "53") (term "0,2,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                    )
                                 )
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1,0,1,0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                    (rule "times_zero_1" (formula "38") (term "0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                    (rule "mul_literals" (formula "38") (term "1"))
                                    (rule "cnf_rightDist" (formula "15") (term "0"))
                                    (rule "distr_forallAnd" (formula "15"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "41") (term "0"))
                                    (rule "distr_forallAnd" (formula "41"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "commute_or" (formula "41") (term "0"))
                                    (rule "ifthenelse_split" (formula "39") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "eqSymm" (formula "42"))
                                       (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "40"))
                                       (rule "times_zero_1" (formula "38") (term "0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                       (rule "mul_literals" (formula "38") (term "1"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "53") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "54"))
                                          (rule "replace_known_left" (formula "54") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "leq_literals" (formula "54") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                          (rule "leq_literals" (formula "52") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "40"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "49")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "47"))
                                             (rule "close" (formula "42") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "54"))
                                          (rule "replace_known_right" (formula "54") (term "0,2,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                       (rule "times_zero_1" (formula "37") (term "0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1"))
                                       (rule "cnf_rightDist" (formula "39") (term "0"))
                                       (rule "distr_forallAnd" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "shift_paren_or" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "52") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_left" (formula "53") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "eqSymm" (formula "53"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                          (rule "leq_literals" (formula "52") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0"))
                                          (rule "leq_literals" (formula "51") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_homoEq" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "lenNonNegative" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "26"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "23") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "47")))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "46"))
                                             (rule "close" (formula "40") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "eqSymm" (formula "53"))
                                          (rule "replace_known_right" (formula "53") (term "0,2,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "19") (term "0,1,1") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "47") (term "1,2,1") (ifseqformula "18"))
                              (rule "hideAuxiliaryEq" (formula "18"))
                              (rule "eqSymm" (formula "46"))
                              (rule "ifthenelse_split" (formula "25") (term "0"))
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "eqSymm" (formula "39"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,1,0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or" (formula "37") (term "0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "10") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "exLeft" (formula "10") (inst "sk=i_38"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "disjointAndSubset_5" (formula "35") (ifseqformula "16"))
                                 (rule "disjointNotInOtherLocset1" (formula "31") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "16"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "intersectWithSingleton" (formula "36") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
                                 (rule "replaceKnownSelect_taclet76_0" (formula "36") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "36") (term "0,0"))
                                 (rule "intersectWithSingleton" (formula "36") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                                 (rule "commuteIntersection" (formula "18") (term "0"))
                                 (rule "disjointAllFields" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "closeTrue" (formula "54"))
                              )
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
                                 (rule "hideAuxiliaryEq" (formula "25"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "10") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "exLeft" (formula "10") (inst "sk=i_37"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13"))
                                 (rule "inEqSimp_commuteLeq" (formula "10"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "disjointAndSubset_5" (formula "35") (ifseqformula "17"))
                                 (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "17"))
                                 (rule "elementOfSingleton" (formula "46"))
                                 (builtin "One Step Simplification" (formula "46"))
                                 (rule "false_right" (formula "46"))
                                 (rule "intersectWithSingleton" (formula "35") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "48")))
                                 (rule "replaceKnownSelect_taclet76_0" (formula "35") (term "0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "35") (term "0,0"))
                                 (rule "intersectWithSingleton" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                                 (rule "commuteIntersection" (formula "18") (term "0"))
                                 (rule "disjointAllFields" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "closeTrue" (formula "54"))
                              )
                           )
                        )
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                           (rule "disjointAllFields" (formula "1") (term "0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "28"))
                           (rule "applyEqReverse" (formula "46") (term "1,2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "17") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "45") (term "1,2,1") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "19") (term "0,1,1") (ifseqformula "18"))
                              (rule "hideAuxiliaryEq" (formula "18"))
                              (rule "eqSymm" (formula "44"))
                              (rule "disjointNotInOtherLocset1" (formula "17") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "eqSymm" (formula "37"))
                              (rule "sortsDisjointModuloNull" (formula "37"))
                              (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")))
                              (rule "false_right" (formula "37"))
                              (rule "disjointNotInOtherLocset1" (formula "17") (ifseqformula "36"))
                              (rule "elementOfSingleton" (formula "37"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "false_right" (formula "37"))
                              (rule "disjointNotInOtherLocset2" (formula "17") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "eqSymm" (formula "37"))
                              (rule "sortsDisjointModuloNull" (formula "37"))
                              (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "41")))
                              (rule "false_right" (formula "37"))
                              (rule "ifthenelse_split" (formula "25") (term "0"))
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "eqSymm" (formula "37"))
                                 (rule "disjointNotInOtherLocset2" (formula "25") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "eqSymm" (formula "37"))
                                 (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "36"))
                                 (rule "elementOfSingleton" (formula "37"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "commute_or_2" (formula "35") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "9") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "exLeft" (formula "9") (inst "sk=i_36"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "disjointDefinition" (formula "15"))
                                 (rule "castedGetAny" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                 (rule "times_zero_1" (formula "12") (term "0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                                 (rule "commuteIntersection" (formula "16") (term "0"))
                                 (rule "commuteIntersection" (formula "41") (term "0"))
                                 (rule "intersectWithSingleton" (formula "41") (term "0"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "ifthenelse_negated" (formula "25") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_and" (formula "40") (term "1,1,0"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "40") (term "0"))
                                 (rule "distr_forallAnd" (formula "40"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "castDel" (formula "40") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "commute_or" (formula "40") (term "0"))
                                 (rule "ifthenelse_split" (formula "35") (term "0"))
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,0,1,0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                                    (rule "times_zero_1" (formula "37") (term "0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                    (rule "mul_literals" (formula "37") (term "1"))
                                    (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "cnf_rightDist" (formula "15") (term "0"))
                                    (rule "distr_forallAnd" (formula "15"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "40") (term "0"))
                                    (rule "distr_forallAnd" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "shift_paren_or" (formula "41") (term "0"))
                                    (rule "commute_or" (formula "41") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "38") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "eqSymm" (formula "42"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                                       (rule "times_zero_1" (formula "37") (term "0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1"))
                                       (rule "ifthenelse_split" (formula "50") (term "1"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "inEqSimp_geqRight" (formula "50"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "39"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "applyEq" (formula "37") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1"))
                                             (rule "mul_literals" (formula "38") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "35") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "48")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "44"))
                                             (rule "close" (formula "41") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "ifthenelse_split" (formula "49") (term "1"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_geqRight" (formula "49"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "35") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "43"))
                                             (rule "close" (formula "39") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,0,1,0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                    (rule "times_zero_1" (formula "36") (term "0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                    (rule "mul_literals" (formula "36") (term "1"))
                                    (rule "cnf_rightDist" (formula "15") (term "0"))
                                    (rule "distr_forallAnd" (formula "15"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "39") (term "0"))
                                    (rule "distr_forallAnd" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "commute_or_2" (formula "39") (term "0"))
                                    (rule "shift_paren_or" (formula "40") (term "0"))
                                    (rule "commute_or" (formula "40") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "37") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "ifthenelse_split" (formula "50") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "51"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "51"))
                                          (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "inEqSimp_geqRight" (formula "50"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "38"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                             (rule "mul_literals" (formula "37") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "44"))
                                             (rule "close" (formula "40") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                       (rule "times_zero_1" (formula "35") (term "0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                       (rule "mul_literals" (formula "35") (term "1"))
                                       (rule "ifthenelse_split" (formula "49") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "50"))
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "50"))
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "inEqSimp_geqRight" (formula "49"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "43"))
                                             (rule "close" (formula "38") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "25"))
                                 (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
                                 (rule "hideAuxiliaryEq" (formula "25"))
                                 (rule "commute_or_2" (formula "34") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_homoEq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,0"))
                                 (rule "times_zero_1" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "20"))
                                 (rule "lenOfSeqConcat" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "9") (inst "s=s_1") (inst "i=i"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "exLeft" (formula "9") (inst "sk=i_35"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12"))
                                 (rule "inEqSimp_commuteLeq" (formula "9"))
                                 (rule "disjointDefinition" (formula "15"))
                                 (rule "castedGetAny" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                 (rule "times_zero_1" (formula "12") (term "0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                                 (rule "commuteIntersection" (formula "16") (term "0"))
                                 (rule "commuteIntersection" (formula "40") (term "0"))
                                 (rule "intersectWithSingleton" (formula "40") (term "0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "ifthenelse_negated" (formula "25") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_and" (formula "39") (term "1,1,0"))
                                 (rule "commute_or" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "39") (term "0"))
                                 (rule "distr_forallAnd" (formula "39"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "castDel" (formula "39") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "commute_or" (formula "39") (term "0"))
                                 (rule "cnf_rightDist" (formula "15") (term "0"))
                                 (rule "distr_forallAnd" (formula "15"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                 (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "shift_paren_or" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "39") (term "0"))
                                 (rule "distr_forallAnd" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "shift_paren_or" (formula "40") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "40") (term "0,1,0,1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,0,1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                    (rule "times_zero_1" (formula "36") (term "0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                    (rule "mul_literals" (formula "36") (term "1"))
                                    (rule "ifthenelse_split" (formula "37") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "ifthenelse_split" (formula "50") (term "2,1"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "replace_known_left" (formula "51") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0"))
                                          (rule "leq_literals" (formula "49") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                          (rule "leq_literals" (formula "49") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "38") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "38"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                             (rule "mul_literals" (formula "37") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "34") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "44"))
                                             (rule "close" (formula "40") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "replace_known_right" (formula "51") (term "0,2,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                       (rule "times_zero_1" (formula "35") (term "0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                       (rule "mul_literals" (formula "35") (term "1"))
                                       (rule "ifthenelse_split" (formula "49") (term "2,1"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 TRUE"
                                          (rule "replace_known_left" (formula "50") (term "0,2,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                          (rule "leq_literals" (formula "50") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "lenNonNegative" (formula "34") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "43"))
                                             (rule "close" (formula "38") (ifseqformula "5"))
                                          )
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length = iv_2 FALSE"
                                          (rule "replace_known_right" (formula "50") (term "0,2,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                    )
                                 )
                                 (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "40") (term "0,1,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,0,1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "1"))
                                    (rule "ifthenelse_split" (formula "36") (term "0"))
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                       (rule "times_zero_1" (formula "35") (term "0,0"))
                                       (rule "add_zero_left" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                       (rule "mul_literals" (formula "35") (term "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "ifthenelse_split" (formula "50") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "51"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "51"))
                                          (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "inEqSimp_geqRight" (formula "50"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "52") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "36"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0"))
                                             (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1"))
                                             (rule "mul_literals" (formula "36") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "47")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "44"))
                                             (rule "close" (formula "39") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                    (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "36"))
                                       (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                       (rule "times_zero_1" (formula "34") (term "0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                       (rule "mul_literals" (formula "34") (term "1"))
                                       (rule "ifthenelse_split" (formula "49") (term "0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 TRUE"
                                          (rule "eqSymm" (formula "50"))
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "50"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.messages.length ≥ 1 + iv_2 FALSE"
                                          (rule "eqSymm" (formula "50"))
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "inEqSimp_geqRight" (formula "49"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "3")))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                          (rule "lenOfSeqConcat" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_homoEq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "ifthenelse_split" (formula "24") (term "0"))
                                          (branch "self.sender.<created> = TRUE TRUE"
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                             (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "25"))
                                             (rule "lenNonNegative" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "lenNonNegative" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "45")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "self.sender.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "43"))
                                             (rule "close" (formula "37") (ifseqformula "5"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "18") (term "0,1,1") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "45") (term "1,2,1") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "closeTrue" (formula "45"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "33"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "1"))
                           (rule "replaceKnownSelect_taclet71_0" (formula "32") (term "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet72_0" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "closeTrue" (formula "32"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "33"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "1"))
                              (rule "replaceKnownSelect_taclet38_0" (formula "32") (term "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "32") (term "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "32") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
                              (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
                              (rule "lenOfSeqConcat" (formula "32") (term "1,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                              (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "lenOfSeqConcat" (formula "32") (term "0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_homoEq" (formula "32") (term "0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "32") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "1,0,0"))
                              (rule "times_zero_1" (formula "32") (term "0,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "allRight" (formula "32") (inst "sk=iv_3"))
                              (rule "impRight" (formula "32"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "12"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "getOfSeqConcat" (formula "34") (term "0"))
                              (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                              (rule "castDel" (formula "34") (term "2,2,0"))
                              (rule "castDel" (formula "34") (term "1,2,0"))
                              (rule "applyEq" (formula "34") (term "0,1,0,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "34") (term "0,1,0,0,2,0") (ifseqformula "12"))
                              (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                              (rule "getOfSeqConcat" (formula "34") (term "1"))
                              (rule "eqSymm" (formula "34"))
                              (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                              (rule "castDel" (formula "34") (term "1,2,0"))
                              (rule "castDel" (formula "34") (term "2,2,0"))
                              (rule "applyEq" (formula "34") (term "0,1,0,0,2,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "34") (term "0,1,0,0,0") (ifseqformula "12"))
                              (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                              (rule "eqSymm" (formula "34"))
                              (rule "pullOutSelect" (formula "34") (term "1,1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_11"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                              (rule "pullOutSelect" (formula "35") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_85"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_12"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "2") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "2") (term "0"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__93"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                              (rule "eqSymm" (formula "2") (term "1,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfMemset" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfStore" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__94"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_86"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "notLeft" (formula "11"))
                              (rule "replace_known_right" (formula "22") (term "0,1,0,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointDefinition" (formula "12"))
                              (rule "disjointAndSubset_5" (formula "30") (ifseqformula "12"))
                              (rule "intersectAllFieldsFreshLocs" (formula "30") (term "0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "30") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet108_0" (formula "30") (term "0,1,0"))
                              (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "8")))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "32") (inst "s=s_1") (inst "i=i"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "replaceKnownSelect_taclet15_0" (formula "32") (term "0,1"))
                              (rule "replaceKnownSelect_taclet37_0" (formula "32") (term "0,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet37_0" (formula "32") (term "1,0,1,0,0"))
                              (rule "replaceKnownSelect_taclet37_0" (formula "32") (term "1,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet37_0" (formula "32") (term "1,0,0,0,0,1,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "33"))
                              (rule "exLeft" (formula "32") (inst "sk=i_41"))
                              (rule "andLeft" (formula "32"))
                              (rule "andLeft" (formula "32"))
                              (rule "inEqSimp_ltToLeq" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "35"))
                              (rule "inEqSimp_commuteLeq" (formula "32"))
                              (rule "disjointDefinition" (formula "38"))
                              (rule "castedGetAny" (formula "34") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0"))
                              (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_33"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "applyEqReverse" (formula "46") (term "1,2,1") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "38") (term "1,0,0,0,0") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "eqSymm" (formula "45"))
                              (rule "elementOfUnion" (formula "34") (term "0,0"))
                              (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "34") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_33"))
                              (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_homoInEq1" (formula "37"))
                              (rule "polySimp_addComm1" (formula "37") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1"))
                              (rule "polySimp_rightDist" (formula "37") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                              (rule "mul_literals" (formula "37") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                              (rule "elementOfUnion" (formula "36") (term "0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                              (rule "times_zero_1" (formula "35") (term "0,0"))
                              (rule "add_zero_left" (formula "35") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                              (rule "mul_literals" (formula "35") (term "1"))
                              (rule "elementOfUnion" (formula "37") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfUnion" (formula "37") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfUnion" (formula "37") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "37") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_34"))
                              (rule "simplifySelectOfCreate" (formula "34"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfMemset" (formula "34"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfCreate" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "34"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "45")))
                              (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_34"))
                              (rule "simplifySelectOfCreate" (formula "37"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfMemset" (formula "37"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfArrayRange" (formula "37") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfCreate" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                              (rule "simplifySelectOfStore" (formula "37"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")))
                              (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "39") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "39") (term "1,1,0,0,0"))
                              (rule "ifthenelse_split" (formula "19") (term "0"))
                              (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "21") (term "0,1,1") (ifseqformula "20"))
                                 (rule "hideAuxiliaryEq" (formula "20"))
                                 (rule "disjointNotInOtherLocset1" (formula "19") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "eqSymm" (formula "41"))
                                 (rule "sortsDisjointModuloNull" (formula "41"))
                                 (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "44")))
                                 (rule "false_right" (formula "41"))
                                 (rule "ifthenelse_split" (formula "29") (term "0"))
                                 (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "30"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "30"))
                                    (rule "hideAuxiliaryEq" (formula "30"))
                                    (rule "disjointAndSubset_5" (formula "31") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "disjointNotInOtherLocset1" (formula "29") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "ifthenelse_split" (formula "27") (term "0"))
                                    (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "28"))
                                       (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "disjointNotInOtherLocset1" (formula "27") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41"))
                                       (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "11") (inst "s=s_1") (inst "i=i"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "exLeft" (formula "11") (inst "sk=i_45"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "disjointDefinition" (formula "17"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "disjointNotInOtherLocset1" (formula "35") (ifseqformula "17"))
                                       (rule "elementOfSingleton" (formula "47"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "17"))
                                       (rule "elementOfSingleton" (formula "47"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "17"))
                                       (rule "elementOfSingleton" (formula "47"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "disjointAndSubset_5" (formula "37") (ifseqformula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "intersectWithSingleton" (formula "38") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "intersectWithSingleton" (formula "38") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "49")))
                                       (rule "replaceKnownSelect_taclet76_0" (formula "38") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "38") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "17") (term "1,0,0,0"))
                                       (rule "commuteIntersection" (formula "19") (term "0"))
                                       (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "33") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "disjointAndSubset_3" (formula "38") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "disjointNotInOtherLocset2" (formula "25") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "sortsDisjointModuloNull" (formula "48"))
                                       (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "51")))
                                       (rule "false_right" (formula "48"))
                                       (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1"))
                                       (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "lenOfSeqConcat" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_homoEq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,0"))
                                       (rule "times_zero_1" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "commute_or_2" (formula "46") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "28") (term "0"))
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                          (rule "eqSymm" (formula "29"))
                                          (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "46"))
                                          (rule "mul_literals" (formula "44") (term "0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1"))
                                          (rule "commuteIntersection" (formula "48") (term "0"))
                                          (rule "intersectWithSingleton" (formula "48") (term "0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "notLeft" (formula "48"))
                                          (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "commute_or_2" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "48"))
                                          (rule "notRight" (formula "49"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                          (rule "applyEqReverse" (formula "56") (term "1,2,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "notLeft" (formula "37"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                    )
                                    (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "11") (inst "s=s_1") (inst "i=i"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "exLeft" (formula "11") (inst "sk=i_44"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "disjointDefinition" (formula "17"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "disjointNotInOtherLocset1" (formula "25") (ifseqformula "17"))
                                       (rule "elementOfSingleton" (formula "46"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "disjointNotInOtherLocset1" (formula "35") (ifseqformula "18"))
                                       (rule "elementOfSingleton" (formula "47"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "disjointAndSubset_5" (formula "37") (ifseqformula "18"))
                                       (rule "intersectWithSingleton" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                       (rule "replaceKnownSelect_taclet76_0" (formula "37") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "37") (term "0,0"))
                                       (rule "intersectWithSingleton" (formula "37") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "17") (term "1,0,0,0"))
                                       (rule "commuteIntersection" (formula "19") (term "0"))
                                       (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "disjointAndSubset_3" (formula "37") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "disjointNotInOtherLocset2" (formula "25") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "sortsDisjointModuloNull" (formula "47"))
                                       (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "52")))
                                       (rule "false_right" (formula "47"))
                                       (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "27") (inst "iv=iv"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_homoEq" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,0"))
                                       (rule "times_zero_1" (formula "27") (term "0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "commute_or_2" (formula "45") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "28") (term "0"))
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                          (rule "eqSymm" (formula "29"))
                                          (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "29"))
                                          (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "45"))
                                          (rule "times_zero_1" (formula "43") (term "0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1"))
                                          (rule "commuteIntersection" (formula "47") (term "0"))
                                          (rule "intersectWithSingleton" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "notLeft" (formula "47"))
                                          (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "commute_or_2" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "47"))
                                          (rule "notRight" (formula "48"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                          (rule "applyEqReverse" (formula "56") (term "1,2,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "applyEq" (formula "55") (term "1,2,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "closeTrue" (formula "55"))
                                       )
                                    )
                                 )
                                 (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "29"))
                                    (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                    (rule "applyEqReverse" (formula "45") (term "1,2,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "closeTrue" (formula "45"))
                                 )
                              )
                              (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "20") (term "0,1,1") (ifseqformula "19"))
                                 (rule "hideAuxiliaryEq" (formula "19"))
                                 (rule "ifthenelse_split" (formula "28") (term "0"))
                                 (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                    (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "29"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "disjointNotInOtherLocset1" (formula "28") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "disjointAndSubset_5" (formula "30") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "ifthenelse_split" (formula "26") (term "0"))
                                    (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "27"))
                                       (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "27"))
                                       (rule "hideAuxiliaryEq" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "26") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "11") (inst "s=s_1") (inst "i=i"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "exLeft" (formula "11") (inst "sk=i_43"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "disjointDefinition" (formula "17"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "17"))
                                       (rule "elementOfSingleton" (formula "46"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "disjointAndSubset_5" (formula "37") (ifseqformula "18"))
                                       (rule "disjointNotInOtherLocset1" (formula "35") (ifseqformula "18"))
                                       (rule "elementOfSingleton" (formula "48"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "intersectWithSingleton" (formula "37") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "intersectWithSingleton" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                                       (rule "replaceKnownSelect_taclet76_0" (formula "37") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "37") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "17") (term "1,0,0,0"))
                                       (rule "commuteIntersection" (formula "19") (term "0"))
                                       (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "disjointAndSubset_3" (formula "37") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                       (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                       (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_homoEq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "1,0"))
                                       (rule "times_zero_1" (formula "26") (term "0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "commute_or_2" (formula "45") (term "0,0"))
                                       (rule "commuteIntersection" (formula "46") (term "0"))
                                       (rule "intersectWithSingleton" (formula "46") (term "0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "notLeft" (formula "46"))
                                       (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "ifthenelse_split" (formula "27") (term "0"))
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                          (rule "eqSymm" (formula "28"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "44"))
                                          (rule "times_zero_1" (formula "42") (term "0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                          (rule "mul_literals" (formula "42") (term "1"))
                                          (rule "commute_or_2" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "45"))
                                          (rule "notRight" (formula "46"))
                                          (rule "eqSymm" (formula "28"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                          (rule "applyEqReverse" (formula "55") (term "1,2,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "53") (term "1,2,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                    )
                                    (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "26"))
                                       (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "26"))
                                       (rule "hideAuxiliaryEq" (formula "26"))
                                       (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "11") (inst "s=s_1") (inst "i=i"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "exLeft" (formula "11") (inst "sk=i_42"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "disjointDefinition" (formula "17"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "disjointAndSubset_5" (formula "36") (ifseqformula "18"))
                                       (rule "disjointNotInOtherLocset1" (formula "34") (ifseqformula "18"))
                                       (rule "elementOfSingleton" (formula "47"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "intersectWithSingleton" (formula "36") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "49")))
                                       (rule "replaceKnownSelect_taclet76_0" (formula "36") (term "0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "36") (term "0,0"))
                                       (rule "intersectWithSingleton" (formula "36") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "17") (term "1,0,0,0"))
                                       (rule "commuteIntersection" (formula "19") (term "0"))
                                       (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "disjointAndSubset_3" (formula "36") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "disjointNotInOtherLocset2" (formula "33") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "eqSymm" (formula "46"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                       (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_homoEq" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "1,0"))
                                       (rule "times_zero_1" (formula "26") (term "0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "applyEq" (formula "26") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                       (rule "lenOfSeqConcat" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "commute_or_2" (formula "44") (term "0,0"))
                                       (rule "commuteIntersection" (formula "45") (term "0"))
                                       (rule "intersectWithSingleton" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "notLeft" (formula "45"))
                                       (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "commute_or_2" (formula "16") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "27") (term "0"))
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                          (rule "eqSymm" (formula "28"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "54") (term "1,2,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                          (rule "times_zero_1" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "54") (term "1,2,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "closeTrue" (formula "54"))
                                       )
                                       (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "44"))
                                          (rule "notRight" (formula "45"))
                                          (rule "eqSymm" (formula "28"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "55") (term "1,2,1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "53") (term "1,2,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "closeTrue" (formula "53"))
                                       )
                                    )
                                 )
                                 (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                    (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "28"))
                                    (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "45") (term "1,2,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "closeTrue" (formula "45"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "33"))
                              (branch "Case 1"
                                 (rule "exRight" (formula "33") (inst "t=i_0") (userinteraction))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "20")))
                                 (rule "true_left" (formula "1"))
                                 (rule "replaceKnownSelect_taclet16_0" (formula "32") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet16_0" (formula "32") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet16_0" (formula "33") (term "0,0,1,0"))
                                 (rule "replaceKnownSelect_taclet16_0" (formula "33") (term "0,1,1,0,0"))
                                 (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "23")))
                                 (rule "closeTrue" (formula "32"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "33"))
                                 (branch "Case 1"
                                    (rule "subsetToElementOf" (formula "33") (term "1") (inst "ov=ov") (inst "fv=fv") (userinteraction))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replaceKnownSelect_taclet15_0" (formula "32") (term "2,0,0,0"))
                                    (rule "allRight" (formula "32") (inst "sk=ov_8"))
                                    (rule "allRight" (formula "32") (inst "sk=fv_8"))
                                    (rule "impRight" (formula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "elementOfUnion" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "26"))
                                    (rule "elementOfSubsetOfUnion1" (formula "2") (ifseqformula "27") (ifseqformula "34"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "notRight" (formula "37"))
                                    (rule "elementOfIntersect" (formula "2"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                    (rule "true_left" (formula "2"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=java_lang_Object_created__48"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "29"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=java_lang_Object_created__49"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "33"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "ifEqualsTRUE" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "elementOfUnion" (formula "28") (term "0,0,0"))
                                       (rule "elementOfUnion" (formula "27") (term "0,0"))
                                       (rule "elementOfUnion" (formula "28") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
                                       (rule "elementOfUnion" (formula "27") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
                                       (rule "elementOfUnion" (formula "28") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
                                       (rule "elementOfUnion" (formula "27") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
                                       (rule "elementOfUnion" (formula "28") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "28") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
                                       (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
                                       (rule "elementOfUnion" (formula "27") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "27") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
                                       (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "31")))
                                       (rule "pullOutSelect" (formula "28") (term "0,1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,1") (inst "selectSK=java_lang_Object_created__6"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "hideAuxiliaryEqConcrete2" (formula "34"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "27") (inst "s=s_1") (inst "i=i"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "replaceKnownSelect_taclet15_0" (formula "27") (term "0,1"))
                                       (rule "replaceKnownSelect_taclet37_0" (formula "27") (term "1,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet37_0" (formula "27") (term "0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet37_0" (formula "27") (term "1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet37_0" (formula "27") (term "1,0,0,0,0,1,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "exLeft" (formula "27") (inst "sk=i_3"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "27"))
                                       (rule "disjointDefinition" (formula "33"))
                                       (rule "castedGetAny" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0"))
                                       (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_2"))
                                       (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                       (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "30"))
                                       (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                       (rule "applyEqReverse" (formula "19") (term "0,1,1") (ifseqformula "30"))
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "30"))
                                       (rule "applyEqReverse" (formula "33") (term "1,0,0,0,0") (ifseqformula "30"))
                                       (rule "hideAuxiliaryEq" (formula "30"))
                                       (rule "elementOfUnion" (formula "29") (term "0,0"))
                                       (rule "elementOfUnion" (formula "29") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "elementOfUnion" (formula "29") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "elementOfUnion" (formula "29") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "32"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1"))
                                       (rule "mul_literals" (formula "32") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                       (rule "elementOfUnion" (formula "31") (term "0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                       (rule "times_zero_1" (formula "30") (term "0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                       (rule "mul_literals" (formula "30") (term "1"))
                                       (rule "elementOfUnion" (formula "32") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "32") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfUnion" (formula "32") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "32") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfUnion" (formula "32") (term "0,0,0"))
                                       (rule "elementOfSingleton" (formula "32") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "pullOutSelect" (formula "29") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_3"))
                                       (rule "simplifySelectOfCreate" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfMemset" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "elementOfArrayRange" (formula "29") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfCreate" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "29"))
                                       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "30") (term "2,0") (ifseqformula "29"))
                                       (rule "hideAuxiliaryEq" (formula "29"))
                                       (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_3"))
                                       (rule "simplifySelectOfCreate" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "simplifySelectOfStore" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfMemset" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "dismissNonSelectedField" (formula "32") (term "2,0"))
                                       (rule "elementOfArrayRange" (formula "32") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "simplifySelectOfStore" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfCreate" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "simplifySelectOfStore" (formula "32"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "40")))
                                       (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                       (rule "hideAuxiliaryEq" (formula "32"))
                                       (rule "nnf_imp2or" (formula "34") (term "0"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "34") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "34") (term "1,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "notLeft" (formula "8"))
                                       (rule "replace_known_right" (formula "19") (term "0,1,0,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "disjointDefinition" (formula "9"))
                                       (rule "disjointAndSubset_5" (formula "27") (ifseqformula "9"))
                                       (rule "intersectAllFieldsFreshLocs" (formula "27") (term "0"))
                                       (rule "replaceKnownSelect_taclet105_0" (formula "27") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet112_0" (formula "27") (term "0,1,0"))
                                       (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "33") (userinteraction))
                                       (rule "andRight" (formula "33"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "33"))
                                          (branch "Case 1"
                                             (rule "notRight" (formula "33"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_7"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                             (rule "ifEqualsNull" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0,1"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0,1"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0,1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0,1") (inst "selectSK=java_lang_Object_created__83"))
                                             (rule "applyEq" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0,0,1") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                                             (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_8"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "replace_known_right" (formula "20") (term "0,1,0,0,0") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_right" (formula "1") (term "1,1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "disjointDefinition" (formula "11"))
                                             (rule "disjointAndSubset_5" (formula "29") (ifseqformula "11"))
                                             (rule "intersectAllFieldsFreshLocs" (formula "29") (term "0"))
                                             (rule "replaceKnownSelect_taclet95_0" (formula "29") (term "0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet103_0" (formula "29") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                                             (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "closeTrue" (formula "32"))
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "pullOutSelect" (formula "32") (term "1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_9"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_10"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__84"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "notLeft" (formula "8"))
                                             (rule "replace_known_right" (formula "19") (term "0,1,0,0,0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "disjointDefinition" (formula "9"))
                                             (rule "disjointAndSubset_5" (formula "27") (ifseqformula "9"))
                                             (rule "intersectAllFieldsFreshLocs" (formula "27") (term "0"))
                                             (rule "replaceKnownSelect_taclet99_0" (formula "27") (term "0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet107_0" (formula "27") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (inst "s=s_1") (inst "i=i"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "replaceKnownSelect_taclet15_0" (formula "29") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "0,1,1,0,0"))
                                             (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet37_0" (formula "29") (term "1,0,0,0,0,1,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,0,0,1,0") (ifseqformula "14"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "exLeft" (formula "29") (inst "sk=i_29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "inEqSimp_ltToLeq" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "32"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "disjointDefinition" (formula "35"))
                                             (rule "castedGetAny" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_25"))
                                             (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                             (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "32"))
                                             (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "32"))
                                             (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "32"))
                                             (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                             (rule "applyEqReverse" (formula "20") (term "0,1,1") (ifseqformula "32"))
                                             (rule "hideAuxiliaryEq" (formula "32"))
                                             (rule "elementOfUnion" (formula "31") (term "0,0"))
                                             (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "elementOfUnion" (formula "31") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_25"))
                                             (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                             (rule "elementOfUnion" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "34"))
                                             (rule "times_zero_1" (formula "32") (term "0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                             (rule "mul_literals" (formula "32") (term "1"))
                                             (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "pullOutSelect" (formula "31") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_26"))
                                             (rule "simplifySelectOfCreate" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfMemset" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "elementOfArrayRange" (formula "31") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfCreate" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "31"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "31"))
                                             (rule "hideAuxiliaryEq" (formula "31"))
                                             (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_26"))
                                             (rule "simplifySelectOfCreate" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfMemset" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "elementOfArrayRange" (formula "34") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfCreate" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                             (rule "simplifySelectOfStore" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
                                             (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                                             (rule "hideAuxiliaryEq" (formula "34"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                             (rule "nnf_notOr" (formula "36") (term "1,0,0,0"))
                                             (rule "nnf_notOr" (formula "36") (term "1,1,0,0,0"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "44") (inst "s=s_1") (inst "i=i"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "replaceKnownSelect_taclet15_0" (formula "44") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet110_0" (formula "44") (term "1,1,1,0,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,1,0,0,0,1,0") (ifseqformula "14"))
                                             (rule "replaceKnownSelect_taclet108_0" (formula "44") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet108_0" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0"))
                                             (rule "disjointDefinition" (formula "44") (term "1"))
                                             (rule "castedGetAny" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "44") (term "1,0,0,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_83"))
                                             (rule "applyEq" (formula "45") (term "0,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "45") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "45") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_84"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__85"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "45") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,0"))
                                             (rule "nnf_notOr" (formula "45") (term "1,0,0,0,1,0"))
                                             (rule "nnf_notOr" (formula "45") (term "1,1,0,0,0,1,0"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "9") (inst "s=s_1") (inst "i=i"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "exLeft" (formula "9") (inst "sk=i_30"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_ltToLeq" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "9"))
                                             (rule "disjointDefinition" (formula "15"))
                                             (rule "castedGetAny" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1"))
                                             (rule "mul_literals" (formula "13") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "disjointAndSubset_5" (formula "35") (ifseqformula "15"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "12") (term "0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1"))
                                             (rule "intersectWithSingleton" (formula "36") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
                                             (rule "replaceKnownSelect_taclet76_0" (formula "36") (term "0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "36") (term "0,0"))
                                             (rule "intersectWithSingleton" (formula "36") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "nnf_imp2or" (formula "15") (term "0"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                             (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                                             (rule "commuteIntersection" (formula "17") (term "0"))
                                             (rule "disjointAllFields" (formula "2") (term "0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "53") (term "1,1,0,1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "53") (term "0,1,0,1") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                             (rule "applyEqReverse" (formula "52") (term "1,1,0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "52") (term "1,0,0,0,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "52") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "52") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "42")))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "disjointAndSubset_3" (formula "35") (ifseqformula "15"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "nnf_ex2all" (formula "51"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "commuteIntersection" (formula "45") (term "0"))
                                             (rule "intersectWithSingleton" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "notLeft" (formula "45"))
                                             (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "ifthenelse_split" (formula "23") (term "0"))
                                             (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                (rule "applyEqReverse" (formula "25") (term "0,1,1") (ifseqformula "24"))
                                                (rule "hideAuxiliaryEq" (formula "24"))
                                                (rule "disjointNotInOtherLocset2" (formula "23") (ifseqformula "16"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "sortsDisjointModuloNull" (formula "44"))
                                                (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")))
                                                (rule "false_right" (formula "44"))
                                                (rule "disjointNotInOtherLocset1" (formula "23") (ifseqformula "15"))
                                                (rule "elementOfSingleton" (formula "44"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "ifthenelse_split" (formula "31") (term "0"))
                                                (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                   (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "32"))
                                                   (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "32"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "32"))
                                                   (rule "hideAuxiliaryEq" (formula "32"))
                                                   (rule "disjointNotInOtherLocset2" (formula "31") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "eqSymm" (formula "44"))
                                                   (rule "disjointNotInOtherLocset1" (formula "31") (ifseqformula "15"))
                                                   (rule "elementOfSingleton" (formula "44"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "false_right" (formula "44"))
                                                   (rule "ifthenelse_split" (formula "33") (term "0"))
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                      (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "34"))
                                                      (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "disjointAndSubset_3" (formula "35") (ifseqformula "16"))
                                                      (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "disjointAndSubset_5" (formula "35") (ifseqformula "15"))
                                                      (rule "disjointNotInOtherLocset2" (formula "33") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "eqSymm" (formula "45"))
                                                      (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "15"))
                                                      (rule "elementOfSingleton" (formula "45"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "intersectWithSingleton" (formula "35") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "commute_or_2" (formula "43") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "26") (term "0"))
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                         (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                                                         (rule "mul_literals" (formula "41") (term "0,0"))
                                                         (rule "add_zero_left" (formula "41") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                         (rule "mul_literals" (formula "41") (term "1"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_homoEq" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "39") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "40"))
                                                            (rule "hideAuxiliaryEq" (formula "40"))
                                                            (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "eqSymm" (formula "45"))
                                                            (rule "disjointNotInOtherLocset1" (formula "39") (ifseqformula "15"))
                                                            (rule "elementOfSingleton" (formula "45"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "46"))
                                                            (rule "close" (formula "43") (ifseqformula "4"))
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "46"))
                                                            (rule "close" (formula "42") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                                         (rule "orRight" (formula "44"))
                                                         (rule "notRight" (formula "45"))
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "27"))
                                                         (rule "elementOfSubsetOfUnion1" (formula "45") (ifseqformula "36") (ifseqformula "44"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "42"))
                                                         (rule "mul_literals" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elementOfIntersect" (formula "44"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "1"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "polySimp_homoEq" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "39") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "40"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "40"))
                                                            (rule "hideAuxiliaryEq" (formula "40"))
                                                            (rule "disjointNotInOtherLocset1" (formula "39") (ifseqformula "16"))
                                                            (rule "elementOfSingleton" (formula "44"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "eqSymm" (formula "44"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "44")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "40") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                                               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "41"))
                                                               (rule "hideAuxiliaryEq" (formula "41"))
                                                               (rule "inEqSimp_homoInEq0" (formula "41"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                               (rule "mul_literals" (formula "41") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "eqSymm" (formula "43"))
                                                               (rule "commute_or_2" (formula "42") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0"))
                                                               (rule "distr_forallAnd" (formula "42"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "commute_or" (formula "42") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0"))
                                                               (rule "distr_forallAnd" (formula "42"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "commute_or_2" (formula "42") (term "0"))
                                                               (rule "shift_paren_or" (formula "43") (term "0"))
                                                               (rule "commute_or" (formula "43") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "39"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                                               (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "40"))
                                                               (rule "hideAuxiliaryEq" (formula "39"))
                                                               (rule "commute_or_2" (formula "39") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "39") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "39") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "39") (term "0"))
                                                               (rule "distr_forallAnd" (formula "39"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "castDel" (formula "39") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "commute_or" (formula "39") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "39") (term "0"))
                                                               (rule "distr_forallAnd" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "commute_or_2" (formula "39") (term "0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0"))
                                                               (rule "commute_or" (formula "40") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "39"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "44")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "39") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "40"))
                                                               (rule "hideAuxiliaryEq" (formula "40"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "41") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0"))
                                                               (rule "commute_or" (formula "42") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "40"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "39") (term "0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "closeFalse" (formula "39"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "38") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "commute_or" (formula "38") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "shift_paren_or" (formula "39") (term "0"))
                                                               (rule "commute_or" (formula "39") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "40"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "3") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "39") (term "0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "closeFalse" (formula "39"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                      (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "44") (term "2") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "33"))
                                                      (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "ifthenelse_negated" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                      (rule "applyEq" (formula "26") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                                      (rule "lenOfSeqConcat" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_homoEq" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "commute_or_2" (formula "14") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "35") (term "0"))
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "41") (term "0,1,0,0,0,0,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "36"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "39"))
                                                         (rule "times_zero_1" (formula "37") (term "0,0"))
                                                         (rule "add_zero_left" (formula "37") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                         (rule "mul_literals" (formula "37") (term "1"))
                                                         (rule "disjointNotInOtherLocset1" (formula "35") (ifseqformula "15"))
                                                         (rule "elementOfSingleton" (formula "41"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "37") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                            (rule "times_zero_1" (formula "36") (term "0,0"))
                                                            (rule "add_zero_left" (formula "36") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                            (rule "mul_literals" (formula "36") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "39") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "39") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "39") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "39") (term "0"))
                                                            (rule "distr_forallAnd" (formula "39"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "castDel" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "39") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "39") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "commute_or" (formula "39") (term "0"))
                                                            (rule "cnf_rightDist" (formula "39") (term "0"))
                                                            (rule "distr_forallAnd" (formula "39"))
                                                            (rule "andLeft" (formula "39"))
                                                            (rule "commute_or_2" (formula "39") (term "0"))
                                                            (rule "shift_paren_or" (formula "40") (term "0"))
                                                            (rule "commute_or" (formula "40") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "35"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "45"))
                                                               (rule "close" (formula "42") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                                            (rule "times_zero_1" (formula "35") (term "0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "37") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "shift_paren_or" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "38") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "35") (term "0"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "44"))
                                                               (rule "close" (formula "40") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "40") (term "0,1,0,0,0,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
                                                         (rule "hideAuxiliaryEq" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                         (rule "times_zero_1" (formula "36") (term "0,0"))
                                                         (rule "add_zero_left" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "36") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                            (rule "times_zero_1" (formula "35") (term "0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "38") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "castDel" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "38") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "shift_paren_or" (formula "39") (term "0"))
                                                            (rule "commute_or" (formula "39") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "37"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "closeFalse" (formula "36"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "45"))
                                                               (rule "close" (formula "41") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                            (rule "hideAuxiliaryEq" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "36") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "shift_paren_or" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "36"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "44"))
                                                               (rule "close" (formula "39") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                   (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "31"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "31"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "31"))
                                                   (rule "hideAuxiliaryEq" (formula "31"))
                                                   (rule "ifthenelse_split" (formula "32") (term "0"))
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                      (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "33"))
                                                      (rule "hideAuxiliaryEq" (formula "33"))
                                                      (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "eqSymm" (formula "43"))
                                                      (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "15"))
                                                      (rule "elementOfSingleton" (formula "43"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "disjointAndSubset_5" (formula "34") (ifseqformula "15"))
                                                      (rule "disjointAndSubset_3" (formula "35") (ifseqformula "16"))
                                                      (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "intersectWithSingleton" (formula "34") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "46")))
                                                      (rule "replaceKnownSelect_taclet76_0" (formula "34") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "34") (term "0,0"))
                                                      (rule "intersectWithSingleton" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "26") (term "0"))
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_homoEq" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "38") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "eqSymm" (formula "44"))
                                                            (rule "disjointNotInOtherLocset1" (formula "38") (ifseqformula "15"))
                                                            (rule "elementOfSingleton" (formula "44"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "46"))
                                                            (rule "close" (formula "42") (ifseqformula "4"))
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                                            (rule "close" (formula "41") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                                         (rule "orRight" (formula "43"))
                                                         (rule "notRight" (formula "44"))
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                         (rule "elementOfSubsetOfUnion1" (formula "45") (ifseqformula "35") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "41"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elementOfIntersect" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "46")))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "1"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "27") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                         (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "polySimp_homoEq" (formula "26"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "38") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "disjointNotInOtherLocset1" (formula "38") (ifseqformula "16"))
                                                            (rule "elementOfSingleton" (formula "43"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "39") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "40"))
                                                               (rule "hideAuxiliaryEq" (formula "40"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "41") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0"))
                                                               (rule "commute_or" (formula "42") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "2"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0"))
                                                               (rule "add_zero_right" (formula "38") (term "0"))
                                                               (rule "leq_literals" (formula "38"))
                                                               (rule "closeFalse" (formula "38"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "38") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "commute_or" (formula "38") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "shift_paren_or" (formula "39") (term "0"))
                                                               (rule "commute_or" (formula "39") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "38"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "38") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "39"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "castDel" (formula "40") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "commute_or" (formula "40") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0"))
                                                               (rule "add_zero_right" (formula "13") (term "0"))
                                                               (rule "leq_literals" (formula "13"))
                                                               (rule "closeFalse" (formula "13"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
                                                               (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                               (rule "hideAuxiliaryEq" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "37") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "37") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "commute_or" (formula "37") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "shift_paren_or" (formula "38") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "25"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                               (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "polySimp_homoEq" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "25") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                               (rule "add_literals" (formula "25") (term "1,0"))
                                                               (rule "times_zero_1" (formula "25") (term "0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "39"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "3") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "38") (term "0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "closeFalse" (formula "38"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                      (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEqReverse" (formula "44") (term "2") (ifseqformula "32"))
                                                      (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                      (rule "hideAuxiliaryEq" (formula "32"))
                                                      (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "ifthenelse_negated" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                      (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_homoEq" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                      (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "commute_or_2" (formula "14") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "34") (term "0"))
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "40") (term "0,1,0,0,0,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "35"))
                                                         (rule "hideAuxiliaryEq" (formula "35"))
                                                         (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "disjointNotInOtherLocset1" (formula "34") (ifseqformula "15"))
                                                         (rule "elementOfSingleton" (formula "40"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                         (rule "times_zero_1" (formula "36") (term "0,0"))
                                                         (rule "add_zero_left" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "36") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                            (rule "times_zero_1" (formula "35") (term "0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "38") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "castDel" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "38") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "shift_paren_or" (formula "39") (term "0"))
                                                            (rule "commute_or" (formula "39") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0"))
                                                               (rule "add_zero_right" (formula "35") (term "0"))
                                                               (rule "leq_literals" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "45"))
                                                               (rule "close" (formula "41") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                            (rule "mul_literals" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "shift_paren_or" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "25") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0"))
                                                               (rule "add_literals" (formula "35") (term "0"))
                                                               (rule "leq_literals" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "43"))
                                                               (rule "close" (formula "38") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,0,0,0,0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "27") (term "0,0,1,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "34"))
                                                         (rule "hideAuxiliaryEq" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "35") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "eqSymm" (formula "38"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "37") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "shift_paren_or" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "38") (term "0,0"))
                                                            (rule "lenNonNegative" (formula "9") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "ifthenelse_split" (formula "26") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "27"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                               (rule "mul_literals" (formula "37") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "35"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "2"))
                                                               (rule "andLeft" (formula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0"))
                                                               (rule "add_literals" (formula "12") (term "0"))
                                                               (rule "leq_literals" (formula "12"))
                                                               (rule "closeFalse" (formula "12"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "45"))
                                                               (rule "close" (formula "40") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "35"))
                                                            (rule "hideAuxiliaryEq" (formula "34"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                            (rule "times_zero_1" (formula "33") (term "0,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                            (rule "mul_literals" (formula "33") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "35") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "castDel" (formula "35") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "35") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "commute_or" (formula "35") (term "0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "shift_paren_or" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "25") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "26"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_homoEq" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "lenNonNegative" (formula "31") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "28"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "43"))
                                                               (rule "close" (formula "37") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                (rule "applyEqReverse" (formula "24") (term "0,1,1") (ifseqformula "23"))
                                                (rule "hideAuxiliaryEq" (formula "23"))
                                                (rule "ifthenelse_split" (formula "30") (term "0"))
                                                (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                   (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "31"))
                                                   (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "31"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "31"))
                                                   (rule "hideAuxiliaryEq" (formula "31"))
                                                   (rule "disjointNotInOtherLocset2" (formula "30") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "disjointNotInOtherLocset1" (formula "30") (ifseqformula "15"))
                                                   (rule "elementOfSingleton" (formula "43"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "ifthenelse_split" (formula "32") (term "0"))
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                      (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "33"))
                                                      (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "33"))
                                                      (rule "hideAuxiliaryEq" (formula "33"))
                                                      (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "eqSymm" (formula "43"))
                                                      (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "15"))
                                                      (rule "elementOfSingleton" (formula "43"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "disjointAndSubset_5" (formula "34") (ifseqformula "15"))
                                                      (rule "disjointAndSubset_3" (formula "35") (ifseqformula "16"))
                                                      (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "intersectWithSingleton" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "42"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "polySimp_homoEq" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "38") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "eqSymm" (formula "44"))
                                                            (rule "disjointNotInOtherLocset1" (formula "38") (ifseqformula "15"))
                                                            (rule "elementOfSingleton" (formula "44"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "46"))
                                                            (rule "close" (formula "42") (ifseqformula "4"))
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                                            (rule "close" (formula "41") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                                         (rule "orRight" (formula "43"))
                                                         (rule "notRight" (formula "44"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "26"))
                                                         (rule "elementOfSubsetOfUnion1" (formula "45") (ifseqformula "35") (ifseqformula "43"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "41"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elementOfIntersect" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "46")))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "27"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_homoEq" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "38") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "39"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "hideAuxiliaryEq" (formula "39"))
                                                            (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "disjointNotInOtherLocset1" (formula "38") (ifseqformula "16"))
                                                            (rule "elementOfSingleton" (formula "43"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "39") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "40"))
                                                               (rule "hideAuxiliaryEq" (formula "40"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "41") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0"))
                                                               (rule "commute_or" (formula "42") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "37") (term "0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "closeFalse" (formula "37"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                                               (rule "hideAuxiliaryEq" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "38") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "commute_or" (formula "38") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "38") (term "0"))
                                                               (rule "distr_forallAnd" (formula "38"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "commute_or_2" (formula "38") (term "0"))
                                                               (rule "shift_paren_or" (formula "39") (term "0"))
                                                               (rule "commute_or" (formula "39") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "37") (term "0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "closeFalse" (formula "37"))
                                                            )
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "38") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "39"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "castDel" (formula "40") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "commute_or" (formula "40") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "inEqSimp_homoInEq1" (formula "39"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                               (rule "add_literals" (formula "39") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "39") (term "1,0"))
                                                               (rule "add_zero_right" (formula "39") (term "0"))
                                                               (rule "leq_literals" (formula "39"))
                                                               (rule "closeFalse" (formula "39"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
                                                               (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                               (rule "hideAuxiliaryEq" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "37") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "37") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "commute_or" (formula "37") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "shift_paren_or" (formula "38") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "39"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "3") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "38") (term "0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "closeFalse" (formula "38"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                      (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                      (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEqReverse" (formula "43") (term "2") (ifseqformula "32"))
                                                      (rule "hideAuxiliaryEq" (formula "32"))
                                                      (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "ifthenelse_negated" (formula "25") (term "0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                      (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_homoEq" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "commute_or_2" (formula "14") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "34") (term "0"))
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                         (rule "applyEqReverse" (formula "40") (term "0,1,0,0,0,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "35"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "35"))
                                                         (rule "hideAuxiliaryEq" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "38"))
                                                         (rule "times_zero_1" (formula "36") (term "0,0"))
                                                         (rule "add_zero_left" (formula "36") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                         (rule "mul_literals" (formula "36") (term "1"))
                                                         (rule "disjointNotInOtherLocset1" (formula "34") (ifseqformula "15"))
                                                         (rule "elementOfSingleton" (formula "40"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "36") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                            (rule "times_zero_1" (formula "35") (term "0,0"))
                                                            (rule "add_zero_left" (formula "35") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "36") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "38") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "castDel" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "38") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "38") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "commute_or" (formula "38") (term "0"))
                                                            (rule "cnf_rightDist" (formula "38") (term "0"))
                                                            (rule "distr_forallAnd" (formula "38"))
                                                            (rule "andLeft" (formula "38"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "shift_paren_or" (formula "39") (term "0"))
                                                            (rule "commute_or" (formula "39") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "38") (term "0") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                               (rule "mul_literals" (formula "37") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "35"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "44"))
                                                               (rule "close" (formula "40") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                            (rule "hideAuxiliaryEq" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                                            (rule "mul_literals" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "shift_paren_or" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "34"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "43"))
                                                               (rule "close" (formula "38") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                         (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,0,0,0,0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "34"))
                                                         (rule "hideAuxiliaryEq" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "35") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "eqSymm" (formula "38"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "37") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "shift_paren_or" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "38") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "37"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                               (rule "mul_literals" (formula "36") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "35"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "2"))
                                                               (rule "andLeft" (formula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0"))
                                                               (rule "add_literals" (formula "12") (term "0"))
                                                               (rule "leq_literals" (formula "12"))
                                                               (rule "closeFalse" (formula "12"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "44"))
                                                               (rule "close" (formula "39") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "35"))
                                                            (rule "hideAuxiliaryEq" (formula "34"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                            (rule "times_zero_1" (formula "33") (term "0,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                            (rule "mul_literals" (formula "33") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "35") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "castDel" (formula "35") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "35") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "commute_or" (formula "35") (term "0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "shift_paren_or" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "35"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "36"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0"))
                                                               (rule "leq_literals" (formula "36"))
                                                               (rule "closeFalse" (formula "36"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "43"))
                                                               (rule "close" (formula "37") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                   (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "30"))
                                                   (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "30"))
                                                   (rule "hideAuxiliaryEq" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "31") (term "0"))
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                      (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "32"))
                                                      (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "32"))
                                                      (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "32"))
                                                      (rule "hideAuxiliaryEq" (formula "32"))
                                                      (rule "disjointNotInOtherLocset2" (formula "31") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "disjointNotInOtherLocset1" (formula "31") (ifseqformula "15"))
                                                      (rule "elementOfSingleton" (formula "42"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "disjointAndSubset_3" (formula "33") (ifseqformula "16"))
                                                      (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "disjointAndSubset_5" (formula "33") (ifseqformula "15"))
                                                      (rule "intersectWithSingleton" (formula "33") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "commute_or_2" (formula "41") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "25") (term "0"))
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                         (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "41"))
                                                         (rule "times_zero_1" (formula "39") (term "0,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                         (rule "mul_literals" (formula "39") (term "1"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "polySimp_homoEq" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "commute_or_2" (formula "14") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "37") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "eqSymm" (formula "43"))
                                                            (rule "disjointNotInOtherLocset1" (formula "37") (ifseqformula "15"))
                                                            (rule "elementOfSingleton" (formula "43"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                                            (rule "close" (formula "41") (ifseqformula "4"))
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "commuteIntersection" (formula "15") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "notLeft" (formula "15"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "notLeft" (formula "24"))
                                                            (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "46"))
                                                            (rule "close" (formula "40") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                                         (rule "orRight" (formula "42"))
                                                         (rule "notRight" (formula "43"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "26"))
                                                         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "40"))
                                                         (rule "times_zero_1" (formula "13") (term "0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "elementOfSubsetOfUnion1" (formula "45") (ifseqformula "34") (ifseqformula "42"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "elementOfIntersect" (formula "42"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "46")))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                         (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                         (rule "lenOfSeqConcat" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "polySimp_homoEq" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "37") (term "0"))
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "38"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "38"))
                                                            (rule "hideAuxiliaryEq" (formula "38"))
                                                            (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "eqSymm" (formula "42"))
                                                            (rule "disjointNotInOtherLocset1" (formula "37") (ifseqformula "16"))
                                                            (rule "elementOfSingleton" (formula "42"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "38") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "39"))
                                                               (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                                               (rule "hideAuxiliaryEq" (formula "39"))
                                                               (rule "inEqSimp_homoInEq0" (formula "39"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "castDel" (formula "40") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "commute_or" (formula "40") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "commute_or_2" (formula "40") (term "0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0"))
                                                               (rule "commute_or" (formula "41") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "37"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "closeFalse" (formula "36"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
                                                               (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                                               (rule "hideAuxiliaryEq" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "37") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "37") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "commute_or" (formula "37") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "37") (term "0"))
                                                               (rule "distr_forallAnd" (formula "37"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "commute_or_2" (formula "37") (term "0"))
                                                               (rule "shift_paren_or" (formula "38") (term "0"))
                                                               (rule "commute_or" (formula "38") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "37"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "36") (term "0"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "closeFalse" (formula "36"))
                                                            )
                                                         )
                                                         (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,1,0,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0") (ifseqformula "37"))
                                                            (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "37"))
                                                            (rule "hideAuxiliaryEq" (formula "37"))
                                                            (rule "commuteIntersection" (formula "16") (term "0"))
                                                            (rule "intersectWithSingleton" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "ifthenelse_split" (formula "37") (term "0"))
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                               (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "38"))
                                                               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "38"))
                                                               (rule "hideAuxiliaryEq" (formula "38"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                               (rule "mul_literals" (formula "38") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                               (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "eqSymm" (formula "40"))
                                                               (rule "commute_or_2" (formula "39") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "39") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "39") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "39") (term "0"))
                                                               (rule "distr_forallAnd" (formula "39"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "castDel" (formula "39") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "commute_or" (formula "39") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "39") (term "0"))
                                                               (rule "distr_forallAnd" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "commute_or_2" (formula "39") (term "0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0"))
                                                               (rule "commute_or" (formula "40") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "3") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0"))
                                                               (rule "add_zero_right" (formula "13") (term "0"))
                                                               (rule "leq_literals" (formula "13"))
                                                               (rule "closeFalse" (formula "13"))
                                                            )
                                                            (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "37"))
                                                               (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                               (rule "hideAuxiliaryEq" (formula "36"))
                                                               (rule "commute_or_2" (formula "36") (term "0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "36") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "36") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "36") (term "0"))
                                                               (rule "distr_forallAnd" (formula "36"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "commute_or" (formula "36") (term "0"))
                                                               (rule "cnf_rightDist" (formula "15") (term "0"))
                                                               (rule "distr_forallAnd" (formula "15"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "shift_paren_or" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "36") (term "0"))
                                                               (rule "distr_forallAnd" (formula "36"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "commute_or_2" (formula "36") (term "0"))
                                                               (rule "shift_paren_or" (formula "37") (term "0"))
                                                               (rule "commute_or" (formula "37") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "10") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "allLeft" (formula "3") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "14"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "3") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                      (rule "applyEqReverse" (formula "45") (term "2") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "31"))
                                                      (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "hideAuxiliaryEq" (formula "31"))
                                                      (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "ifthenelse_negated" (formula "25") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "24") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1"))
                                                      (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_homoEq" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "commute_or_2" (formula "14") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "33") (term "0"))
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                         (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "39") (term "0,1,0,0,0,0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "34"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "34"))
                                                         (rule "hideAuxiliaryEq" (formula "34"))
                                                         (rule "disjointNotInOtherLocset2" (formula "33") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1"))
                                                         (rule "disjointNotInOtherLocset1" (formula "33") (ifseqformula "15"))
                                                         (rule "elementOfSingleton" (formula "39"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "false_right" (formula "39"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "35") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "36"))
                                                            (rule "hideAuxiliaryEq" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                            (rule "mul_literals" (formula "34") (term "1"))
                                                            (rule "disjointNotInOtherLocset2" (formula "35") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "eqSymm" (formula "38"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "37") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "commute_or" (formula "37") (term "0"))
                                                            (rule "cnf_rightDist" (formula "37") (term "0"))
                                                            (rule "distr_forallAnd" (formula "37"))
                                                            (rule "andLeft" (formula "37"))
                                                            (rule "commute_or_2" (formula "37") (term "0"))
                                                            (rule "shift_paren_or" (formula "38") (term "0"))
                                                            (rule "commute_or" (formula "38") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "36") (term "0") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "36"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                               (rule "mul_literals" (formula "36") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "33") (term "0"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "closeFalse" (formula "33"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "44"))
                                                               (rule "close" (formula "39") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "35"))
                                                            (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                                                            (rule "hideAuxiliaryEq" (formula "34"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                            (rule "times_zero_1" (formula "33") (term "0,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                            (rule "mul_literals" (formula "33") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "35") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "35") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "castDel" (formula "35") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "35") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "commute_or" (formula "35") (term "0"))
                                                            (rule "cnf_rightDist" (formula "35") (term "0"))
                                                            (rule "distr_forallAnd" (formula "35"))
                                                            (rule "andLeft" (formula "35"))
                                                            (rule "commute_or_2" (formula "35") (term "0"))
                                                            (rule "shift_paren_or" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "36") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0,0,1,0,0") (ifseqformula "24"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "33") (term "0"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "closeFalse" (formula "33"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "43"))
                                                               (rule "close" (formula "37") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                      (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                         (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,0,1,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,1,0,0,0,0,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0") (ifseqformula "33"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,1,1,0,0") (ifseqformula "33"))
                                                         (rule "hideAuxiliaryEq" (formula "33"))
                                                         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "36"))
                                                         (rule "times_zero_1" (formula "34") (term "0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1"))
                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                         (rule "intersectWithSingleton" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "42")))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "ifthenelse_split" (formula "34") (term "0"))
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                            (rule "applyEqReverse" (formula "36") (term "1,1") (ifseqformula "35"))
                                                            (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "35"))
                                                            (rule "hideAuxiliaryEq" (formula "35"))
                                                            (rule "disjointNotInOtherLocset2" (formula "34") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "eqSymm" (formula "37"))
                                                            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "35"))
                                                            (rule "times_zero_1" (formula "33") (term "0,0"))
                                                            (rule "add_zero_left" (formula "33") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                            (rule "mul_literals" (formula "33") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "36") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "36") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "commute_or" (formula "36") (term "0"))
                                                            (rule "cnf_rightDist" (formula "36") (term "0"))
                                                            (rule "distr_forallAnd" (formula "36"))
                                                            (rule "andLeft" (formula "36"))
                                                            (rule "commute_or_2" (formula "36") (term "0"))
                                                            (rule "shift_paren_or" (formula "37") (term "0"))
                                                            (rule "commute_or" (formula "37") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "25"))
                                                               (rule "inEqSimp_homoInEq0" (formula "35"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
                                                               (rule "qeq_literals" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0"))
                                                               (rule "add_zero_right" (formula "35") (term "0"))
                                                               (rule "leq_literals" (formula "35"))
                                                               (rule "closeFalse" (formula "35"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "44"))
                                                               (rule "close" (formula "38") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                            (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "34"))
                                                            (rule "hideAuxiliaryEq" (formula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                                            (rule "times_zero_1" (formula "32") (term "0,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                            (rule "mul_literals" (formula "32") (term "1"))
                                                            (rule "commute_or_2" (formula "14") (term "0"))
                                                            (rule "commute_or_2" (formula "34") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "14") (term "0,0"))
                                                            (rule "commute_or" (formula "34") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "34") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "14") (term "0"))
                                                            (rule "distr_forallAnd" (formula "14"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "shift_paren_or" (formula "14") (term "0"))
                                                            (rule "commute_or" (formula "14") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "34") (term "0"))
                                                            (rule "distr_forallAnd" (formula "34"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "castDel" (formula "34") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "34") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "34") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "commute_or" (formula "34") (term "0"))
                                                            (rule "cnf_rightDist" (formula "34") (term "0"))
                                                            (rule "distr_forallAnd" (formula "34"))
                                                            (rule "andLeft" (formula "34"))
                                                            (rule "commute_or_2" (formula "34") (term "0"))
                                                            (rule "shift_paren_or" (formula "35") (term "0"))
                                                            (rule "commute_or" (formula "35") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "0"))
                                                            (branch "self.sender.<created> = TRUE TRUE"
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "33") (term "0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "25"))
                                                               (rule "lenNonNegative" (formula "9") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "23"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "1"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                               (rule "lenOfSeqConcat" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "polySimp_homoEq" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                               (rule "add_literals" (formula "23") (term "1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "29") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29"))
                                                               (rule "allLeft" (formula "1") (inst "t=i_29"))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_30"))
                                                               (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "13"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "1") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "2") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "2") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "34") (term "0"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "closeFalse" (formula "34"))
                                                            )
                                                            (branch "self.sender.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "36") (ifseqformula "43"))
                                                               (rule "close" (formula "36") (ifseqformula "4"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "replaceKnownSelect_taclet15_0" (formula "32") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "disjointDefinition" (formula "32"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "notLeft" (formula "7"))
                                          (rule "replace_known_right" (formula "18") (term "0,1,0,0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "disjointDefinition" (formula "8"))
                                          (rule "disjointAndSubset_5" (formula "26") (ifseqformula "8"))
                                          (rule "intersectAllFieldsFreshLocs" (formula "26") (term "0"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=java_lang_Object_created__86"))
                                          (rule "simplifySelectOfCreate" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "castDel" (formula "26") (term "1,0"))
                                          (rule "eqSymm" (formula "26") (term "0,0,0"))
                                          (rule "eqSymm" (formula "26") (term "0,1,0,0"))
                                          (rule "replace_known_right" (formula "26") (term "0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                                          (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
                                          (rule "eqSymm" (formula "26") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "simplifySelectOfMemset" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "simplifySelectOfStore" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "simplifySelectOfStore" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "simplifySelectOfStore" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "simplifySelectOfCreate" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
                                          (rule "castDel" (formula "26") (term "1,0"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                                          (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
                                          (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "28") (inst "s=s_1") (inst "i=i"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "replaceKnownSelect_taclet15_0" (formula "28") (term "0,1"))
                                          (rule "replaceKnownSelect_taclet37_0" (formula "28") (term "0,1,1,0,0"))
                                          (rule "replaceKnownSelect_taclet37_0" (formula "28") (term "1,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet37_0" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet37_0" (formula "28") (term "1,0,0,0,0,1,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "exLeft" (formula "28") (inst "sk=i_31"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_ltToLeq" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "31"))
                                          (rule "inEqSimp_commuteLeq" (formula "28"))
                                          (rule "disjointDefinition" (formula "34"))
                                          (rule "castedGetAny" (formula "30") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_27"))
                                          (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "19") (term "0,1,1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0,0,0,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                          (rule "hideAuxiliaryEq" (formula "31"))
                                          (rule "elementOfUnion" (formula "30") (term "0,0"))
                                          (rule "elementOfUnion" (formula "30") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfUnion" (formula "30") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfUnion" (formula "30") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_27"))
                                          (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_homoInEq1" (formula "33"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1"))
                                          (rule "mul_literals" (formula "33") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                          (rule "elementOfUnion" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "33"))
                                          (rule "times_zero_1" (formula "31") (term "0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1"))
                                          (rule "elementOfUnion" (formula "33") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "elementOfUnion" (formula "33") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "elementOfUnion" (formula "33") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "pullOutSelect" (formula "30") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_28"))
                                          (rule "simplifySelectOfCreate" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfMemset" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfArrayRange" (formula "30") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfCreate" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "30"))
                                          (rule "hideAuxiliaryEq" (formula "30"))
                                          (rule "pullOutSelect" (formula "33") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_28"))
                                          (rule "simplifySelectOfCreate" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfMemset" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "elementOfArrayRange" (formula "33") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfCreate" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                                          (rule "simplifySelectOfStore" (formula "33"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "nnf_imp2or" (formula "35") (term "0"))
                                          (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                          (rule "nnf_notOr" (formula "35") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "35") (term "1,1,0,0,0"))
                                          (rule "commuteIntersection" (formula "43") (term "0"))
                                          (rule "close" (formula "43") (ifseqformula "26"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "impRight" (formula "32"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "33"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "allRight" (formula "32") (inst "sk=f_3") (userinteraction))
                  (rule "allRight" (formula "32") (inst "sk=o_3") (userinteraction))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "orRight" (formula "32"))
                  (rule "selectOfAnonEQ" (formula "39") (term "1") (ifseqformula "12") (userinteraction))
                  (rule "elementOfUnion" (formula "39") (term "0,0,0,1") (userinteraction))
                  (rule "elementOfUnion" (formula "39") (term "0,0,0,0,1") (userinteraction))
                  (rule "elementOfUnion" (formula "39") (term "0,0,0,0,0,1") (userinteraction))
                  (rule "elementOfUnion" (formula "39") (term "0,0,0,0,0,0,1") (userinteraction))
                  (rule "elementOfSingleton" (formula "39") (term "0,0,0,0,0,0,0,1") (userinteraction))
                  (rule "elementOfSingleton" (formula "39") (term "1,0,0,0,0,0,0,1") (userinteraction))
                  (rule "elementOfSingleton" (formula "39") (term "1,0,0,0,0,0,1") (userinteraction))
                  (rule "elementOfSingleton" (formula "39") (term "1,0,0,0,0,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "37")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "33")))
                  (rule "ifthenelse_split" (formula "39") (term "1") (userinteraction))
                  (branch " ¬o_3 = null ∧ ¬ o_3.<created>@heap[self.voted := TRUE] [create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, 0), 0)] [x_arr_3.<initialized> := TRUE] [x_arr_3[0] := self.choice] [create(strPool(\"localhost\"))] = TRUE TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "eqSymm" (formula "41"))
                     (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "false_right" (formula "37"))
                     (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "false_right" (formula "36"))
                     (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "notRight" (formula "36"))
                     (rule "inEqSimp_ltToLeq" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=java_lang_Object_created__90"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "28"))
                     (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=java_lang_Object_created__91"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch " ¬o_3 = null ∧ ¬ o_3.<created>@heap[self.voted := TRUE] [create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, 0), 0)] [x_arr_3.<initialized> := TRUE] [x_arr_3[0] := self.choice] [create(strPool(\"localhost\"))] = TRUE FALSE"
                     (rule "eqSymm" (formula "40"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "pullOutSelect" (formula "39") (term "0,0,1") (inst "selectSK=java_lang_Object_created__87"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_3_0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "42"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_created__88"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfStore" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_7"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_8"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "42"))
                     (rule "commute_and" (formula "46"))
                     (rule "commute_and" (formula "45"))
                     (rule "commute_and" (formula "44"))
                     (rule "commute_and" (formula "47"))
                     (rule "commute_and" (formula "49"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "notLeft" (formula "17"))
                     (rule "replace_known_right" (formula "28") (term "0,1,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "disjointDefinition" (formula "18"))
                     (rule "disjointAndSubset_5" (formula "36") (ifseqformula "18"))
                     (rule "intersectAllFieldsFreshLocs" (formula "36") (term "0"))
                     (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "42"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "pullOutSelect" (formula "36") (term "0,0") (inst "selectSK=java_lang_Object_created__89"))
                     (rule "simplifySelectOfCreate" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "castDel" (formula "36") (term "1,0"))
                     (rule "eqSymm" (formula "36") (term "0,0,0"))
                     (rule "eqSymm" (formula "36") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "36") (term "0,1,0,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "36") (term "0,0"))
                     (rule "eqSymm" (formula "36") (term "1,0,0"))
                     (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "43")))
                     (rule "simplifySelectOfStore" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfMemset" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfStore" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfStore" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfStore" (formula "36"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfCreate" (formula "36"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
                     (rule "castDel" (formula "36") (term "1,0"))
                     (rule "eqSymm" (formula "36") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "36") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "36") (term "0,0"))
                     (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
                     (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "36"))
                     (rule "hideAuxiliaryEq" (formula "36"))
                     (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "38") (inst "s=s_1") (inst "i=i"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "replaceKnownSelect_taclet15_0" (formula "38") (term "0,1"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "38") (term "0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "38") (term "1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "38") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "38") (term "1,0,0,0,0,1,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "23"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "39"))
                     (rule "exLeft" (formula "38") (inst "sk=i_32"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "38"))
                     (rule "inEqSimp_ltToLeq" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "41"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "disjointDefinition" (formula "44"))
                     (rule "castedGetAny" (formula "40") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                     (rule "polySimp_elimOne" (formula "42") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0"))
                     (rule "pullOutSelect" (formula "40") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_29"))
                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                     (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "44") (term "1,0,0,0,0") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "41"))
                     (rule "applyEqReverse" (formula "29") (term "0,1,1") (ifseqformula "41"))
                     (rule "hideAuxiliaryEq" (formula "41"))
                     (rule "elementOfUnion" (formula "40") (term "0,0"))
                     (rule "elementOfUnion" (formula "40") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "40") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "elementOfUnion" (formula "40") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "40") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "elementOfUnion" (formula "40") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "40") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_29"))
                     (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "inEqSimp_homoInEq1" (formula "43"))
                     (rule "polySimp_addComm1" (formula "43") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1"))
                     (rule "polySimp_rightDist" (formula "43") (term "1"))
                     (rule "mul_literals" (formula "43") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                     (rule "elementOfUnion" (formula "42") (term "0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "43"))
                     (rule "times_zero_1" (formula "41") (term "0,0"))
                     (rule "add_zero_left" (formula "41") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                     (rule "mul_literals" (formula "41") (term "1"))
                     (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "pullOutSelect" (formula "40") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_30"))
                     (rule "simplifySelectOfCreate" (formula "40"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfMemset" (formula "40"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "elementOfArrayRange" (formula "40") (term "0,0") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfCreate" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "40"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "51")))
                     (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "40"))
                     (rule "hideAuxiliaryEq" (formula "40"))
                     (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_30"))
                     (rule "simplifySelectOfCreate" (formula "43"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfMemset" (formula "43"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "elementOfArrayRange" (formula "43") (term "0,0") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfCreate" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                     (rule "simplifySelectOfStore" (formula "43"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                     (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "43"))
                     (rule "hideAuxiliaryEq" (formula "43"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "45") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "45") (term "1,1,0,0,0"))
                     (rule "commute_and" (formula "8") (term "0,0"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
                     (rule "inEqSimp_and_antiSymm1" (formula "5") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "castDel" (formula "5") (term "0,0,0,1,0,0,0"))
                     (rule "instanceof_static_type" (formula "5") (term "0,1,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "eqSymm" (formula "5") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "17") (inst "s=s_1") (inst "i=i"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "18"))
                     (rule "exLeft" (formula "17") (inst "sk=i_33"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "17"))
                     (rule "disjointDefinition" (formula "23"))
                     (rule "castedGetAny" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                     (rule "disjointAndSubset_5" (formula "43") (ifseqformula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                     (rule "times_zero_1" (formula "20") (term "0,0"))
                     (rule "add_zero_left" (formula "20") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "intersectWithSingleton" (formula "44") (term "0,0"))
                     (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
                     (rule "replaceKnownSelect_taclet76_0" (formula "44") (term "0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "44") (term "0,0"))
                     (rule "intersectWithSingleton" (formula "44") (term "0,1"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "23") (term "1,0,0,0"))
                     (rule "commuteIntersection" (formula "25") (term "0"))
                     (rule "disjointAndSubset_3" (formula "45") (ifseqformula "25"))
                     (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "true_left" (formula "45"))
                     (rule "ifthenelse_split" (formula "42") (term "0"))
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "45") (term "2,0,1") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "43"))
                        (rule "hideAuxiliaryEq" (formula "43"))
                        (rule "disjointNotInOtherLocset2" (formula "42") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "eqSymm" (formula "55"))
                        (rule "disjointNotInOtherLocset1" (formula "42") (ifseqformula "24"))
                        (rule "elementOfSingleton" (formula "55"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "false_right" (formula "55"))
                        (rule "disjointAndSubset_3" (formula "45") (ifseqformula "25"))
                        (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "disjointAndSubset_5" (formula "45") (ifseqformula "24"))
                        (rule "intersectWithSingleton" (formula "45") (term "0,0"))
                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "56")))
                        (rule "replaceKnownSelect_taclet76_0" (formula "45") (term "0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet84_0" (formula "45") (term "0,0"))
                        (rule "intersectWithSingleton" (formula "45") (term "0,1"))
                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "44")))
                        (rule "true_left" (formula "45"))
                        (rule "ifthenelse_split" (formula "40") (term "0"))
                        (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "41"))
                           (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "41"))
                           (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "41"))
                           (rule "hideAuxiliaryEq" (formula "41"))
                           (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "eqSymm" (formula "55"))
                           (rule "disjointNotInOtherLocset1" (formula "40") (ifseqformula "24"))
                           (rule "elementOfSingleton" (formula "55"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "false_right" (formula "55"))
                           (rule "ifthenelse_split" (formula "32") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "34") (term "0,1,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "24"))
                              (rule "elementOfSingleton" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "eqSymm" (formula "55"))
                              (rule "sortsDisjointModuloNull" (formula "55"))
                              (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "58")))
                              (rule "false_right" (formula "55"))
                              (rule "cut_direct" (formula "67") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "8") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "60") (term "1"))
                                 (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "8") (term "0,0"))
                                 (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "false_right" (formula "67"))
                                 (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "replace_known_right" (formula "67") (term "0,1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "notRight" (formula "67"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "52") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                 (rule "lenOfSeqConcat" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,0"))
                                 (rule "times_zero_1" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "cut_direct" (formula "60") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "8") (term "1,0,0"))
                                    (rule "eqSymm" (formula "8") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "8") (term "0,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "56") (ifseqformula "19"))
                                    (rule "false_right" (formula "56"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")) (ifInst ""  (formula "55")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "53") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "52"))
                                       (rule "times_zero_1" (formula "50") (term "0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                       (rule "mul_literals" (formula "50") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "notLeft" (formula "33"))
                                       (rule "referencedObjectIsCreatedRight" (formula "53") (ifseqformula "55"))
                                       (rule "close" (formula "53") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "54"))
                                       (rule "notRight" (formula "55"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "notLeft" (formula "44"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "50"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elementOfSubsetOfUnion1" (formula "53") (ifseqformula "44") (ifseqformula "54"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfIntersect" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "54")))
                                       (rule "false_right" (formula "53"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "54")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commuteIntersection" (formula "51") (term "0"))
                                       (rule "intersectWithSingleton" (formula "51") (term "0"))
                                       (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                                       (rule "true_left" (formula "51"))
                                       (rule "commute_or_2" (formula "50") (term "0"))
                                       (rule "ifthenelse_split" (formula "46") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "disjointNotInOtherLocset2" (formula "46") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "ifthenelse_split" (formula "48") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "49"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "49"))
                                             (rule "hideAuxiliaryEq" (formula "49"))
                                             (rule "inEqSimp_homoInEq0" (formula "49"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1"))
                                             (rule "mul_literals" (formula "49") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "48") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "eqSymm" (formula "51"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "sortsDisjointModuloNull" (formula "59"))
                                                (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "54") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "49") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "49") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "49") (term "0"))
                                                (rule "distr_forallAnd" (formula "49"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "castDel" (formula "49") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "commute_or" (formula "49") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "49") (term "0"))
                                                (rule "distr_forallAnd" (formula "49"))
                                                (rule "andLeft" (formula "49"))
                                                (rule "commute_or_2" (formula "49") (term "0"))
                                                (rule "shift_paren_or" (formula "50") (term "0"))
                                                (rule "commute_or" (formula "50") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "sortsDisjointModuloNull" (formula "56"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "52")))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "52") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "39") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "sortsDisjointModuloNull" (formula "57"))
                                                         (rule "eqSymm" (formula "57") (term "1"))
                                                         (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "48"))
                                                         (rule "sortsDisjointModuloNull" (formula "48"))
                                                         (rule "eqSymm" (formula "48") (term "1"))
                                                         (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "57") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "60") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "sortsDisjointModuloNull" (formula "54"))
                                                (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "52") (term "2,0") (ifseqformula "3"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "52") (ifseqformula "2"))
                                                (rule "closeTrue" (formula "52"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "46") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "46") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "castDel" (formula "46") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "commute_or" (formula "46") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "commute_or_2" (formula "46") (term "0"))
                                                (rule "shift_paren_or" (formula "47") (term "0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "60") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "sortsDisjointModuloNull" (formula "59"))
                                                   (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "55")))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "54") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "49") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "9"))
                                                         (rule "eqSymm" (formula "60"))
                                                         (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notRight" (formula "57"))
                                                         (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "sortsDisjointModuloNull" (formula "54"))
                                                         (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "49") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "47") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "59")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "9"))
                                                            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "lenNonNegative" (formula "42") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "42"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "9"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "58") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "52") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "cut_direct" (formula "46") (term "1"))
                                                               (branch "CUT: o_3 = x_arr_3 TRUE"
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "59"))
                                                                  (rule "sortsDisjointModuloNull" (formula "59"))
                                                                  (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                                  (rule "false_right" (formula "59"))
                                                                  (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "54") (ifseqformula "3"))
                                                               )
                                                               (branch "CUT: o_3 = x_arr_3 FALSE"
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "46"))
                                          (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "46"))
                                          (rule "hideAuxiliaryEq" (formula "46"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "ifthenelse_split" (formula "47") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "47") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "54") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "48") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "castDel" (formula "48") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "commute_or" (formula "48") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "shift_paren_or" (formula "49") (term "0"))
                                                (rule "commute_or" (formula "49") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "sortsDisjointModuloNull" (formula "59"))
                                                   (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "53") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "51") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "close" (formula "58") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "53") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "49") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "61")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                            (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "sortsDisjointModuloNull" (formula "60"))
                                                               (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "57")))
                                                               (rule "false_right" (formula "60"))
                                                               (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "9"))
                                                               (rule "eqSymm" (formula "62"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "eqSymm" (formula "61"))
                                                               (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "53") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "cut_direct" (formula "47") (term "0"))
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> TRUE"
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "62")))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> FALSE"
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "false_right" (formula "48"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                                     (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                                     (rule "close" (formula "54") (ifseqformula "2"))
                                                                  )
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 FALSE"
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "45"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "8") (term "0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "close" (formula "53") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "45") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "45") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "49") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "closeTrue" (formula "57"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "sortsDisjointModuloNull" (formula "55"))
                                                         (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notRight" (formula "56"))
                                                         (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "49") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "polySimp_homoEq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "cut_direct" (formula "46") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "59")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "56"))
                                                               (rule "sortsDisjointModuloNull" (formula "56"))
                                                               (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                               (rule "false_right" (formula "56"))
                                                               (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "false_right" (formula "45"))
                                                               (rule "applyEq" (formula "55") (term "1") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "false_right" (formula "43"))
                                                               (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "false_right" (formula "43"))
                                                               (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "48") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "cut_direct" (formula "44") (term "0"))
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> TRUE"
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "60")))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> FALSE"
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "false_right" (formula "45"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "7"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                                                                     (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "false_right" (formula "46"))
                                                                     (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "false_right" (formula "45"))
                                                                     (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                                     (rule "close" (formula "50") (ifseqformula "2"))
                                                                  )
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 FALSE"
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "33") (term "0,1,1") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "cut_direct" (formula "67") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "60"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "60") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "60") (term "1"))
                                 (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "closeTrue" (formula "57"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_right" (formula "67") (term "0,1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "notRight" (formula "67"))
                                 (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "51") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                 (rule "add_literals" (formula "32") (term "1,0"))
                                 (rule "times_zero_1" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "cut_direct" (formula "60") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "58") (ifseqformula "21"))
                                    (rule "false_right" (formula "58"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "closeTrue" (formula "53"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "51"))
                                       (rule "times_zero_1" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                       (rule "mul_literals" (formula "49") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "55"))
                                       (rule "close" (formula "52") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "53"))
                                       (rule "notRight" (formula "54"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "notLeft" (formula "43"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "elementOfSubsetOfUnion1" (formula "52") (ifseqformula "43") (ifseqformula "53"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "49"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elementOfIntersect" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                       (rule "false_right" (formula "52"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commuteIntersection" (formula "50") (term "0"))
                                       (rule "intersectWithSingleton" (formula "50") (term "0"))
                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                       (rule "true_left" (formula "50"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "45") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "46"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "46"))
                                          (rule "hideAuxiliaryEq" (formula "46"))
                                          (rule "disjointNotInOtherLocset2" (formula "45") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "ifthenelse_split" (formula "47") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "47") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "sortsDisjointModuloNull" (formula "57"))
                                                (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "53")))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "48") (term "0,0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "castDel" (formula "48") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "commute_or" (formula "48") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "shift_paren_or" (formula "49") (term "0"))
                                                (rule "commute_or" (formula "49") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "sortsDisjointModuloNull" (formula "57"))
                                                   (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "53")))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "52") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "51") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "sortsDisjointModuloNull" (formula "61"))
                                                      (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "57")))
                                                      (rule "false_right" (formula "61"))
                                                      (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "38") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "sortsDisjointModuloNull" (formula "57"))
                                                         (rule "eqSymm" (formula "57") (term "1"))
                                                         (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "47"))
                                                         (rule "sortsDisjointModuloNull" (formula "47"))
                                                         (rule "eqSymm" (formula "47") (term "1"))
                                                         (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "57") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "60") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "8") (term "0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "51")))
                                                (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "sortsDisjointModuloNull" (formula "52"))
                                                (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "49")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "45") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "45") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "false_right" (formula "45"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "closeTrue" (formula "57"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "sortsDisjointModuloNull" (formula "56"))
                                                         (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notRight" (formula "57"))
                                                         (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "44") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "49") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "46") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "sortsDisjointModuloNull" (formula "59"))
                                                            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "55")))
                                                            (rule "false_right" (formula "59"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "54") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "ifthenelse_split" (formula "46") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                             (rule "mul_literals" (formula "47") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "46") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "54") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "47") (term "0,0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "castDel" (formula "47") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "commute_or" (formula "47") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "shift_paren_or" (formula "48") (term "0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "53") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "close" (formula "58") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "10"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "54") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "48") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "56") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "44") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "commute_or" (formula "44") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "shift_paren_or" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEq" (formula "59") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "43") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "notRight" (formula "57"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "sortsDisjointModuloNull" (formula "55"))
                                                         (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "49") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                         (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                         (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                         (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "polySimp_homoEq" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                         (rule "add_literals" (formula "31") (term "1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "cut_direct" (formula "45") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "59")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "false_right" (formula "46"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "44") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "false_right" (formula "44"))
                                                               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "50") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "cut_direct" (formula "43") (term "1"))
                                                               (branch "CUT: o_3 = x_arr_3 TRUE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "58"))
                                                                  (rule "sortsDisjointModuloNull" (formula "58"))
                                                                  (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")))
                                                                  (rule "false_right" (formula "58"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "53") (ifseqformula "3"))
                                                               )
                                                               (branch "CUT: o_3 = x_arr_3 FALSE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "false_right" (formula "44"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "40"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "40"))
                           (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "40"))
                           (rule "hideAuxiliaryEq" (formula "40"))
                           (rule "ifthenelse_split" (formula "32") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "34") (term "0,1,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "24"))
                              (rule "elementOfSingleton" (formula "54"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "eqSymm" (formula "54"))
                              (rule "sortsDisjointModuloNull" (formula "54"))
                              (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "59")))
                              (rule "false_right" (formula "54"))
                              (rule "cut_direct" (formula "67") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "applyEqRigid" (formula "10") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "55") (term "1"))
                                 (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "false_right" (formula "55"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "closeTrue" (formula "57"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "false_right" (formula "67"))
                                 (rule "replace_known_right" (formula "68") (term "0,1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "commute_or_2" (formula "51") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,0"))
                                 (rule "times_zero_1" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "cut_direct" (formula "60") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "59") (ifseqformula "22"))
                                    (rule "false_right" (formula "59"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                    (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")) (ifInst ""  (formula "54")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "51"))
                                       (rule "times_zero_1" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                       (rule "mul_literals" (formula "49") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "notLeft" (formula "33"))
                                       (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "55"))
                                       (rule "close" (formula "52") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "53"))
                                       (rule "notRight" (formula "54"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "notLeft" (formula "43"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "49"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elementOfSubsetOfUnion1" (formula "52") (ifseqformula "43") (ifseqformula "53"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfIntersect" (formula "52"))
                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                       (rule "false_right" (formula "52"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "53")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commuteIntersection" (formula "50") (term "0"))
                                       (rule "intersectWithSingleton" (formula "50") (term "0"))
                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                       (rule "true_left" (formula "50"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "ifthenelse_split" (formula "45") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "46"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "46"))
                                          (rule "hideAuxiliaryEq" (formula "46"))
                                          (rule "disjointNotInOtherLocset2" (formula "45") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "ifthenelse_split" (formula "47") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "47") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "58")))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                (rule "hideAuxiliaryEq" (formula "10"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "sortsDisjointModuloNull" (formula "53"))
                                                (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "48") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "48") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "48") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "castDel" (formula "48") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "commute_or" (formula "48") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "48") (term "0"))
                                                (rule "distr_forallAnd" (formula "48"))
                                                (rule "andLeft" (formula "48"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "shift_paren_or" (formula "49") (term "0"))
                                                (rule "commute_or" (formula "49") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "60") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "50") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "51") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "applyEq" (formula "59") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "closeTrue" (formula "59"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "notRight" (formula "58"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "5"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "sortsDisjointModuloNull" (formula "56"))
                                                         (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "51") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "lenNonNegative" (formula "41") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41"))
                                                         (rule "cut_direct" (formula "50") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                            (rule "eqSymm" (formula "62"))
                                                            (rule "sortsDisjointModuloNull" (formula "62"))
                                                            (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "58"))
                                                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "59")))
                                                            (rule "false_right" (formula "62"))
                                                            (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "57") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "50") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "45") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "45") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "sortsDisjointModuloNull" (formula "53"))
                                                   (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "54") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "sortsDisjointModuloNull" (formula "54"))
                                                         (rule "eqSymm" (formula "54") (term "1"))
                                                         (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "43"))
                                                         (rule "sortsDisjointModuloNull" (formula "43"))
                                                         (rule "eqSymm" (formula "43") (term "1"))
                                                         (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "54") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "54"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "57") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "ifthenelse_split" (formula "46") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                             (rule "mul_literals" (formula "47") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "46") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "50") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "47") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "castDel" (formula "47") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "commute_or" (formula "47") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "shift_paren_or" (formula "48") (term "0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "sortsDisjointModuloNull" (formula "57"))
                                                   (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "close" (formula "58") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "sortsDisjointModuloNull" (formula "58"))
                                                         (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")))
                                                         (rule "false_right" (formula "58"))
                                                         (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "52") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "cut_direct" (formula "48") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "56") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "51") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "44") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "commute_or" (formula "44") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "shift_paren_or" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "49") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "54") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "42"))
                                                         (rule "sortsDisjointModuloNull" (formula "42"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "55") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "55"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "57") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "33") (term "0,1,1") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "cut_direct" (formula "67") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "68") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "false_right" (formula "68"))
                                 (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "67"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "7") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "0,0"))
                                 (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "57") (term "1"))
                                 (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "false_right" (formula "57"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "closeTrue" (formula "57"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_right" (formula "68") (term "0,1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "notRight" (formula "68"))
                                 (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "68"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "67"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "false_right" (formula "66"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEq" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "50") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                 (rule "add_literals" (formula "32") (term "1,0"))
                                 (rule "times_zero_1" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "cut_direct" (formula "60") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "58")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "61") (ifseqformula "24"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "9") (term "1,0,0"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "59")))
                                    (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "55")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "53"))
                                    (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "closeTrue" (formula "53"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "50"))
                                       (rule "mul_literals" (formula "48") (term "0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                       (rule "mul_literals" (formula "48") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "55"))
                                       (rule "close" (formula "51") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "52"))
                                       (rule "notRight" (formula "53"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "notLeft" (formula "42"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "elementOfSubsetOfUnion1" (formula "51") (ifseqformula "42") (ifseqformula "52"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "48"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "elementOfIntersect" (formula "51"))
                                       (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                                       (rule "false_right" (formula "51"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "52")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commuteIntersection" (formula "49") (term "0"))
                                       (rule "intersectWithSingleton" (formula "49") (term "0"))
                                       (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                                       (rule "true_left" (formula "49"))
                                       (rule "commute_or_2" (formula "48") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "44") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "45"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "disjointNotInOtherLocset2" (formula "44") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "ifthenelse_split" (formula "46") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                             (rule "mul_literals" (formula "47") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "46") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "12"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "53") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "47") (term "0,0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "castDel" (formula "47") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "commute_or" (formula "47") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "47") (term "0"))
                                                (rule "distr_forallAnd" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "shift_paren_or" (formula "48") (term "0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "sortsDisjointModuloNull" (formula "57"))
                                                   (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "54")))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "37") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "46"))
                                                         (rule "sortsDisjointModuloNull" (formula "46"))
                                                         (rule "eqSymm" (formula "46") (term "1"))
                                                         (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "sortsDisjointModuloNull" (formula "56"))
                                                         (rule "eqSymm" (formula "56") (term "1"))
                                                         (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "57") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "60") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "50") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "44") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "commute_or" (formula "44") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "shift_paren_or" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "10"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "sortsDisjointModuloNull" (formula "58"))
                                                         (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")))
                                                         (rule "false_right" (formula "58"))
                                                         (rule "applyEq" (formula "58") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "52") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "45") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "54") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "false_right" (formula "46"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "44"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "ifthenelse_split" (formula "45") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "inEqSimp_homoInEq0" (formula "46"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "45") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "eqSymm" (formula "48"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "46") (term "0,0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "46") (term "0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "castDel" (formula "46") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "commute_or" (formula "46") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "commute_or_2" (formula "46") (term "0"))
                                                (rule "shift_paren_or" (formula "47") (term "0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "sortsDisjointModuloNull" (formula "59"))
                                                   (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "56")))
                                                   (rule "false_right" (formula "59"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "52") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "49") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "sortsDisjointModuloNull" (formula "56"))
                                                         (rule "eqSymm" (formula "56") (term "1"))
                                                         (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "44"))
                                                         (rule "sortsDisjointModuloNull" (formula "44"))
                                                         (rule "eqSymm" (formula "44") (term "1"))
                                                         (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "52")))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "57") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "57"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "59") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or" (formula "43") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "43") (term "0,0"))
                                                (rule "commute_or" (formula "22") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "43") (term "0"))
                                                (rule "distr_forallAnd" (formula "43"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "castDel" (formula "43") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "commute_or" (formula "43") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "43") (term "0"))
                                                (rule "distr_forallAnd" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "shift_paren_or" (formula "44") (term "0"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "sortsDisjointModuloNull" (formula "55"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "46") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "sortsDisjointModuloNull" (formula "59"))
                                                      (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "55")))
                                                      (rule "false_right" (formula "59"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "54") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "sortsDisjointModuloNull" (formula "54"))
                                                         (rule "eqSymm" (formula "54") (term "1"))
                                                         (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "sortsDisjointModuloNull" (formula "41"))
                                                         (rule "eqSymm" (formula "41") (term "1"))
                                                         (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "54") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "57") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                        (rule "applyEqReverse" (formula "43") (term "2,0,1") (ifseqformula "42"))
                        (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "42"))
                        (rule "hideAuxiliaryEq" (formula "42"))
                        (rule "ifthenelse_split" (formula "40") (term "0"))
                        (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "41"))
                           (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "41"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "41"))
                           (rule "hideAuxiliaryEq" (formula "41"))
                           (rule "disjointNotInOtherLocset1" (formula "40") (ifseqformula "24"))
                           (rule "elementOfSingleton" (formula "51"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "false_right" (formula "51"))
                           (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "eqSymm" (formula "51"))
                           (rule "ifthenelse_split" (formula "32") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "34") (term "0,1,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "eqSymm" (formula "51"))
                              (rule "sortsDisjointModuloNull" (formula "51"))
                              (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "55")))
                              (rule "false_right" (formula "51"))
                              (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "24"))
                              (rule "elementOfSingleton" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "false_right" (formula "51"))
                              (rule "cut_direct" (formula "64") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "9") (term "0,0"))
                                 (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "8"))
                                 (rule "hideAuxiliaryEq" (formula "8"))
                                 (rule "applyEqRigid" (formula "56") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "56") (term "1"))
                                 (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "false_right" (formula "56"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "notRight" (formula "65"))
                                 (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "false_right" (formula "63"))
                                 (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "false_right" (formula "61"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "62"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "false_right" (formula "61"))
                                 (rule "replace_known_right" (formula "62") (term "0,1") (ifseqformula "61"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "notRight" (formula "62"))
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "49") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,0"))
                                 (rule "times_zero_1" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "cut_direct" (formula "57") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "8") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "8") (term "0,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "53") (ifseqformula "19"))
                                    (rule "false_right" (formula "53"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "51")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "49"))
                                       (rule "mul_literals" (formula "47") (term "0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                       (rule "mul_literals" (formula "47") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "41") (term "0,1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "notLeft" (formula "33"))
                                       (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "51"))
                                       (rule "close" (formula "48") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "50"))
                                       (rule "notRight" (formula "51"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "42"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "47"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "49")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or_2" (formula "47") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "43") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "44"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "ifthenelse_split" (formula "45") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "inEqSimp_homoInEq0" (formula "46"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "45") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "eqSymm" (formula "48"))
                                             (rule "commute_or" (formula "47") (term "0,0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "sortsDisjointModuloNull" (formula "50"))
                                                (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "51") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "51") (term "0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "45") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "castDel" (formula "46") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "commute_or" (formula "46") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                (rule "distr_forallAnd" (formula "46"))
                                                (rule "andLeft" (formula "46"))
                                                (rule "commute_or_2" (formula "46") (term "0"))
                                                (rule "shift_paren_or" (formula "47") (term "0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "38") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "53") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "49") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "close" (formula "55") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "48") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "32"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                         (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                         (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "polySimp_homoEq" (formula "32"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "32") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                         (rule "add_literals" (formula "32") (term "1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "cut_direct" (formula "47") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "57") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "9"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "51") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "7"))
                                                               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "lenNonNegative" (formula "37") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "37"))
                                                               (rule "cut_direct" (formula "46") (term "0"))
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> TRUE"
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "60")))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch "CUT: f_3 = <transactionConditionallyUpdated> FALSE"
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
                                                                     (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "false_right" (formula "46"))
                                                                     (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                                     (rule "close" (formula "57") (ifseqformula "26"))
                                                                  )
                                                                  (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 FALSE"
                                                                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "commute_or" (formula "44") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "sortsDisjointModuloNull" (formula "48"))
                                                (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "45"))
                                                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "44")))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "43") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "43") (term "0"))
                                                (rule "distr_forallAnd" (formula "43"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "castDel" (formula "43") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "commute_or" (formula "43") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "43") (term "0"))
                                                (rule "distr_forallAnd" (formula "43"))
                                                (rule "andLeft" (formula "43"))
                                                (rule "commute_or_2" (formula "43") (term "0"))
                                                (rule "shift_paren_or" (formula "44") (term "0"))
                                                (rule "commute_or" (formula "44") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "38") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "46") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "notRight" (formula "52"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "46") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "44") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "lenNonNegative" (formula "39") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "39"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "55"))
                                                               (rule "sortsDisjointModuloNull" (formula "55"))
                                                               (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "8"))
                                                               (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "false_right" (formula "45"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "false_right" (formula "42"))
                                                               (rule "applyEq" (formula "52") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "false_right" (formula "42"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "46") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "cut_direct" (formula "43") (term "1"))
                                                               (branch "CUT: o_3 = x_arr_3 TRUE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "56"))
                                                                  (rule "sortsDisjointModuloNull" (formula "56"))
                                                                  (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                                  (rule "false_right" (formula "56"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "51") (ifseqformula "3"))
                                                               )
                                                               (branch "CUT: o_3 = x_arr_3 FALSE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "false_right" (formula "44"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "43"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "43"))
                                          (rule "hideAuxiliaryEq" (formula "43"))
                                          (rule "ifthenelse_split" (formula "44") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1"))
                                             (rule "mul_literals" (formula "45") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "44") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "eqSymm" (formula "47"))
                                             (rule "commute_or" (formula "46") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "51") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "commute_or" (formula "45") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "38") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "false_right" (formula "45"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "47") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "eqSymm" (formula "53") (term "1"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "43"))
                                                         (rule "sortsDisjointModuloNull" (formula "43"))
                                                         (rule "eqSymm" (formula "43") (term "1"))
                                                         (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "53") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "53"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "56") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "43"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "50")))
                                                (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "10"))
                                                (rule "hideAuxiliaryEq" (formula "10"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "3"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "51") (ifseqformula "2"))
                                                (rule "closeTrue" (formula "51"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "42") (term "0"))
                                                (rule "distr_forallAnd" (formula "42"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "commute_or" (formula "42") (term "0"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0"))
                                                (rule "distr_forallAnd" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "shift_paren_or" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "38") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "38"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "sortsDisjointModuloNull" (formula "55"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "50") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "45") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "sortsDisjointModuloNull" (formula "56"))
                                                      (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "51") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "false_right" (formula "39"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "51"))
                                                         (rule "sortsDisjointModuloNull" (formula "51"))
                                                         (rule "eqSymm" (formula "51") (term "1"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "48")))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "sortsDisjointModuloNull" (formula "40"))
                                                         (rule "eqSymm" (formula "40") (term "1"))
                                                         (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "47")))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "51") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "54") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "33") (term "0,1,1") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "cut_direct" (formula "64") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "9") (term "0,0"))
                                 (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                 (rule "hideAuxiliaryEq" (formula "9"))
                                 (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "closeTrue" (formula "55"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "notRight" (formula "65"))
                                 (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "notRight" (formula "66"))
                                 (rule "replace_known_right" (formula "65") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "false_right" (formula "63"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "commute_or_2" (formula "48") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                 (rule "add_literals" (formula "32") (term "1,0"))
                                 (rule "times_zero_1" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "cut_direct" (formula "57") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "7") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "55")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "54") (ifseqformula "20"))
                                    (rule "false_right" (formula "54"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "51")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "48"))
                                       (rule "times_zero_1" (formula "46") (term "0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "51"))
                                       (rule "close" (formula "47") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "49"))
                                       (rule "notRight" (formula "50"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                       (rule "true_left" (formula "41"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "46"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "42") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "43"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "43"))
                                          (rule "hideAuxiliaryEq" (formula "43"))
                                          (rule "disjointNotInOtherLocset2" (formula "42") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "commute_or" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "44") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1"))
                                             (rule "mul_literals" (formula "45") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "44") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "eqSymm" (formula "47"))
                                             (rule "cnf_rightDist" (formula "46") (term "0"))
                                             (rule "distr_forallAnd" (formula "46"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "castDel" (formula "46") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "commute_or" (formula "46") (term "0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "7") (term "0,0"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "sortsDisjointModuloNull" (formula "53"))
                                                   (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "49")))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "58"))
                                                      (rule "sortsDisjointModuloNull" (formula "58"))
                                                      (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "55")))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "35") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "57") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "57"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "57") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "43"))
                                             (rule "cnf_rightDist" (formula "43") (term "0"))
                                             (rule "distr_forallAnd" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "castDel" (formula "43") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "commute_or" (formula "43") (term "0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "6") (term "0,0"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "46")))
                                                (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "sortsDisjointModuloNull" (formula "49"))
                                                (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "45")))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "51") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "51") (term "0") (ifseqformula "8"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "close" (formula "50") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "22") (term "0"))
                                                (rule "distr_forallAnd" (formula "22"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "shift_paren_or" (formula "22") (term "0"))
                                                (rule "commute_or" (formula "22") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "42") (term "0"))
                                                (rule "distr_forallAnd" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "shift_paren_or" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "sortsDisjointModuloNull" (formula "54"))
                                                   (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "50")))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "47") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "45") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "closeTrue" (formula "54"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "47") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "43") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "51") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "commute_or" (formula "45") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "43") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "inEqSimp_homoInEq0" (formula "44"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "eqSymm" (formula "46"))
                                             (rule "cnf_rightDist" (formula "45") (term "0"))
                                             (rule "distr_forallAnd" (formula "45"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "commute_or" (formula "45") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "sortsDisjointModuloNull" (formula "55"))
                                                (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "8") (term "0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "50")))
                                                (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "53") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "3"))
                                                (rule "castTrueImpliesOriginalTrue" (formula "51") (ifseqformula "2"))
                                                (rule "closeTrue" (formula "51"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "shift_paren_or" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "eqSymm" (formula "53") (term "1"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "42"))
                                                         (rule "sortsDisjointModuloNull" (formula "42"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "49")))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "53") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "53"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "56") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "43"))
                                             (rule "hideAuxiliaryEq" (formula "42"))
                                             (rule "cnf_rightDist" (formula "42") (term "0"))
                                             (rule "distr_forallAnd" (formula "42"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "commute_or" (formula "42") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "sortsDisjointModuloNull" (formula "50"))
                                                (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "45") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "41") (term "0"))
                                                (rule "distr_forallAnd" (formula "41"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "shift_paren_or" (formula "42") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "11"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "47") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "44") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "false_right" (formula "39"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "applyEq" (formula "52") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "closeTrue" (formula "54"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "47") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                         (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                         (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "polySimp_homoEq" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                         (rule "add_literals" (formula "31") (term "1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                         (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                         (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "cut_direct" (formula "42") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "false_right" (formula "41"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "false_right" (formula "41"))
                                                               (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "8"))
                                                               (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "47") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "7"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "cut_direct" (formula "40") (term "1"))
                                                               (branch "CUT: o_3 = x_arr_3 TRUE"
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "55"))
                                                                  (rule "sortsDisjointModuloNull" (formula "55"))
                                                                  (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                                                                  (rule "false_right" (formula "55"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "50") (ifseqformula "3"))
                                                               )
                                                               (branch "CUT: o_3 = x_arr_3 FALSE"
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "false_right" (formula "41"))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "(null, registered_receiver_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "40"))
                           (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "40"))
                           (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "40"))
                           (rule "hideAuxiliaryEq" (formula "40"))
                           (rule "ifthenelse_split" (formula "32") (term "0"))
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                              (rule "applyEqReverse" (formula "34") (term "0,1,1") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "disjointNotInOtherLocset2" (formula "32") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "eqSymm" (formula "50"))
                              (rule "sortsDisjointModuloNull" (formula "50"))
                              (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "55")))
                              (rule "false_right" (formula "50"))
                              (rule "disjointNotInOtherLocset1" (formula "32") (ifseqformula "24"))
                              (rule "elementOfSingleton" (formula "50"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "false_right" (formula "50"))
                              (rule "cut_direct" (formula "64") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "applyEqRigid" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "10") (term "0,0"))
                                 (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "5") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "50") (term "1"))
                                 (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "false_right" (formula "50"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "closeTrue" (formula "54"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "notRight" (formula "65"))
                                 (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "66"))
                                 (rule "notRight" (formula "66"))
                                 (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "66"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "false_right" (formula "63"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "48") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                 (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,0"))
                                 (rule "times_zero_1" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "cut_direct" (formula "57") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "applyEq" (formula "7") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "7") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "55")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                    (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "disjointAllFields" (formula "52") (ifseqformula "18"))
                                    (rule "false_right" (formula "52"))
                                    (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")) (ifInst ""  (formula "51")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "ifthenelse_split" (formula "34") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "48") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "49") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "48"))
                                       (rule "times_zero_1" (formula "46") (term "0,0"))
                                       (rule "add_zero_left" (formula "46") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "notLeft" (formula "33"))
                                       (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "51"))
                                       (rule "close" (formula "47") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "49"))
                                       (rule "notRight" (formula "50"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                       (rule "true_left" (formula "41"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "46"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "42") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "43"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "43"))
                                          (rule "hideAuxiliaryEq" (formula "43"))
                                          (rule "disjointNotInOtherLocset2" (formula "42") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "commute_or" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "44") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1"))
                                             (rule "mul_literals" (formula "45") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "44") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "eqSymm" (formula "47"))
                                             (rule "cnf_rightDist" (formula "46") (term "0"))
                                             (rule "distr_forallAnd" (formula "46"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "castDel" (formula "46") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "commute_or" (formula "46") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "9") (term "0,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "51")))
                                                (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "sortsDisjointModuloNull" (formula "52"))
                                                (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "48")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "close" (formula "52") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                (rule "distr_forallAnd" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "shift_paren_or" (formula "46") (term "0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "44") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "false_right" (formula "44"))
                                                   (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "47") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "48") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "close" (formula "55") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "10"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "51") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "lenNonNegative" (formula "38") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38"))
                                                         (rule "cut_direct" (formula "47") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "54") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "43"))
                                             (rule "cnf_rightDist" (formula "43") (term "0"))
                                             (rule "distr_forallAnd" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "castDel" (formula "43") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "commute_or" (formula "43") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "sortsDisjointModuloNull" (formula "51"))
                                                (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "48")))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "10"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "6") (term "0,0"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "44") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "42") (term "0"))
                                                (rule "distr_forallAnd" (formula "42"))
                                                (rule "andLeft" (formula "42"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "shift_paren_or" (formula "43") (term "0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "false_right" (formula "45"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "45") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "51") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "false_right" (formula "39"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "54") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "54"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "54") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "commute_or" (formula "45") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "43") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "inEqSimp_homoInEq0" (formula "44"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "eqSymm" (formula "46"))
                                             (rule "cnf_rightDist" (formula "45") (term "0"))
                                             (rule "distr_forallAnd" (formula "45"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "commute_or" (formula "45") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "55") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "48") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and" (formula "6") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "44") (term "0"))
                                                (rule "distr_forallAnd" (formula "44"))
                                                (rule "andLeft" (formula "44"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "shift_paren_or" (formula "45") (term "0"))
                                                (rule "commute_or" (formula "45") (term "0,0"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "49") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "eqSymm" (formula "53") (term "1"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "42"))
                                                         (rule "sortsDisjointModuloNull" (formula "42"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "49")))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "53") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "56") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "43"))
                                             (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                             (rule "hideAuxiliaryEq" (formula "42"))
                                             (rule "cnf_rightDist" (formula "42") (term "0"))
                                             (rule "distr_forallAnd" (formula "42"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "castDel" (formula "42") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "commute_or" (formula "42") (term "0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0"))
                                             (rule "distr_forallAnd" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "0,1,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "4")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "50"))
                                                (rule "sortsDisjointModuloNull" (formula "50"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "46")))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "6") (term "0,0"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "46")))
                                                (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "49"))
                                                (rule "close" (formula "49") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cnf_rightDist" (formula "41") (term "0"))
                                                (rule "distr_forallAnd" (formula "41"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "commute_or_2" (formula "41") (term "0"))
                                                (rule "shift_paren_or" (formula "42") (term "0"))
                                                (rule "commute_or" (formula "42") (term "0,0"))
                                                (rule "applyEq_and_gen3" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "37") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "37"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                                (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "polySimp_homoEq" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "false_right" (formula "44"))
                                                   (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "9"))
                                                   (rule "hideAuxiliaryEq" (formula "9"))
                                                   (rule "applyEq" (formula "55") (term "1") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "50"))
                                                   (rule "sortsDisjointModuloNull" (formula "50"))
                                                   (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "46")))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "45") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "44") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "51") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_homoEq" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "52") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "sortsDisjointModuloNull" (formula "39"))
                                                         (rule "eqSymm" (formula "39") (term "1"))
                                                         (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
                                                         (rule "false_right" (formula "39"))
                                                         (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "50"))
                                                         (rule "sortsDisjointModuloNull" (formula "50"))
                                                         (rule "eqSymm" (formula "50") (term "1"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "51") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "51"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "54") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "(x_arr_3, arr(0)) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                              (rule "applyEqReverse" (formula "33") (term "0,1,1") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "cut_direct" (formula "64") (term "0,0"))
                              (branch "CUT: o_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "61"))
                                 (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "false_right" (formula "65"))
                                 (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "hideAuxiliaryEq" (formula "10"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "53"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "6") (term "0,0"))
                                 (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "50") (term "1"))
                                 (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "false_right" (formula "50"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "notRight" (formula "65"))
                                 (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "false_right" (formula "63"))
                                 (rule "replace_known_right" (formula "65") (term "0,1") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "65"))
                                 (rule "notRight" (formula "65"))
                                 (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "65"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "64"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "false_right" (formula "63"))
                                 (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "63"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "hideAuxiliaryEq" (formula "11"))
                                 (rule "hideAuxiliaryEqConcrete" (formula "1"))
                                 (rule "commute_or_2" (formula "47") (term "0,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                 (rule "add_literals" (formula "32") (term "1,0"))
                                 (rule "times_zero_1" (formula "32") (term "0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "cut_direct" (formula "57") (term "1"))
                                 (branch "CUT: o_3 = self TRUE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "9") (term "1,0,0"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0,0"))
                                    (rule "replace_known_right" (formula "9") (term "1,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "52")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_3 = self FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "ifthenelse_split" (formula "33") (term "0"))
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE TRUE"
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "47"))
                                       (rule "mul_literals" (formula "45") (term "0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                       (rule "mul_literals" (formula "45") (term "1"))
                                       (rule "commute_and_2" (formula "6") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commuteIntersection" (formula "23") (term "0"))
                                       (rule "intersectWithSingleton" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "52"))
                                       (rule "close" (formula "47") (ifseqformula "12"))
                                    )
                                    (branch " (self.sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep ∨ ¬self.sender.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "48"))
                                       (rule "notRight" (formula "49"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "40"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "34"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "45"))
                                       (rule "mul_literals" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "commute_and_2" (formula "7") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commuteIntersection" (formula "24") (term "0"))
                                       (rule "intersectWithSingleton" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "47")))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or_2" (formula "45") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "ifthenelse_split" (formula "41") (term "0"))
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "42"))
                                          (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "disjointNotInOtherLocset2" (formula "41") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "eqSymm" (formula "46"))
                                          (rule "commute_or" (formula "45") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "45") (term "0"))
                                          (rule "distr_forallAnd" (formula "45"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "castDel" (formula "45") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "commute_or" (formula "45") (term "0"))
                                          (rule "cnf_rightDist" (formula "23") (term "0"))
                                          (rule "distr_forallAnd" (formula "23"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "0"))
                                          (rule "commute_or" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "43") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "44"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "hideAuxiliaryEq" (formula "44"))
                                             (rule "inEqSimp_homoInEq0" (formula "44"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                             (rule "mul_literals" (formula "44") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "eqSymm" (formula "46"))
                                             (rule "cnf_rightDist" (formula "45") (term "0"))
                                             (rule "distr_forallAnd" (formula "45"))
                                             (rule "andLeft" (formula "45"))
                                             (rule "commute_or_2" (formula "45") (term "0"))
                                             (rule "shift_paren_or" (formula "46") (term "0"))
                                             (rule "commute_or" (formula "46") (term "0,0"))
                                             (rule "applyEq_and_gen3" (formula "7") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "sortsDisjointModuloNull" (formula "55"))
                                                (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEq" (formula "55") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "6") (term "0,0"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "46") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "sortsDisjointModuloNull" (formula "55"))
                                                   (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "50") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "47") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "applyEq" (formula "54") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "closeTrue" (formula "56"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "1"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                      (rule "lenOfSeqConcat" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "polySimp_homoEq" (formula "32"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                      (rule "add_literals" (formula "32") (term "1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "9"))
                                                         (rule "eqSymm" (formula "58"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "56"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "notRight" (formula "56"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                         (rule "close" (formula "49") (ifseqformula "3"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "9"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "lenNonNegative" (formula "37") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37"))
                                                         (rule "cut_direct" (formula "46") (term "1"))
                                                         (branch "CUT: o_3 = x_arr_3 TRUE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "sortsDisjointModuloNull" (formula "59"))
                                                            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "55")))
                                                            (rule "false_right" (formula "59"))
                                                            (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "54") (ifseqformula "3"))
                                                         )
                                                         (branch "CUT: o_3 = x_arr_3 FALSE"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "43"))
                                             (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                             (rule "hideAuxiliaryEq" (formula "42"))
                                             (rule "cnf_rightDist" (formula "42") (term "0"))
                                             (rule "distr_forallAnd" (formula "42"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "shift_paren_or" (formula "43") (term "0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "applyEq_and_gen3" (formula "7") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqRigid" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                (rule "hideAuxiliaryEq" (formula "10"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "8") (term "0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "49")))
                                                (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "47") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and" (formula "6") (term "0,0"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEqRigid" (formula "55") (term "1") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "57"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "47") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "44") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "sortsDisjointModuloNull" (formula "56"))
                                                      (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "53")))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "51") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "lenNonNegative" (formula "34") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "54"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "sortsDisjointModuloNull" (formula "40"))
                                                         (rule "eqSymm" (formula "40") (term "1"))
                                                         (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "48")))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                                         (rule "castTrueImpliesOriginalTrue" (formula "53") (ifseqformula "2"))
                                                         (rule "closeTrue" (formula "53"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "55") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "(null, registered_sender_ids) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "40") (term "0,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "commute_or" (formula "44") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0"))
                                          (rule "distr_forallAnd" (formula "44"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "castDel" (formula "44") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "commute_or" (formula "44") (term "0"))
                                          (rule "cnf_rightDist" (formula "23") (term "0"))
                                          (rule "distr_forallAnd" (formula "23"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "castDel" (formula "23") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "23") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "0"))
                                          (rule "commute_or" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "42") (term "0"))
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                             (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "43"))
                                             (rule "hideAuxiliaryEq" (formula "43"))
                                             (rule "inEqSimp_homoInEq0" (formula "43"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1"))
                                             (rule "mul_literals" (formula "43") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                             (rule "disjointNotInOtherLocset2" (formula "42") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "eqSymm" (formula "45"))
                                             (rule "cnf_rightDist" (formula "44") (term "0"))
                                             (rule "distr_forallAnd" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "shift_paren_or" (formula "45") (term "0"))
                                             (rule "commute_or" (formula "45") (term "0,0"))
                                             (rule "commute_and" (formula "7") (term "0,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "52")))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "8") (term "0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "47") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "54") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "8"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "46") (term "1"))
                                                   (branch "CUT: o_3 = x_arr_3 TRUE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_3 = x_arr_3 FALSE"
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "28") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
                                                      (rule "lenOfSeqConcat" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "28") (term "0,0,1,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "6"))
                                                      (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "55"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "53"))
                                                         (rule "sortsDisjointModuloNull" (formula "53"))
                                                         (rule "eqSymm" (formula "53") (term "1"))
                                                         (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "50")))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "sortsDisjointModuloNull" (formula "41"))
                                                         (rule "eqSymm" (formula "41") (term "1"))
                                                         (rule "replace_known_right" (formula "41") (term "1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "49")))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "53") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <created> ∧ o_3 = strPool(\"localhost\") FALSE"
                                                         (rule "close" (formula "56") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "(null, numberOfVoters) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                             (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "42"))
                                             (rule "hideAuxiliaryEq" (formula "41"))
                                             (rule "cnf_rightDist" (formula "41") (term "0"))
                                             (rule "distr_forallAnd" (formula "41"))
                                             (rule "andLeft" (formula "41"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "shift_paren_or" (formula "42") (term "0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_and" (formula "7") (term "0,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "49") (ifseqformula "2"))
                                             )
                                             (branch "f_3 = <created> ∧ o_3 = x_arr_3 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_and_2" (formula "6") (term "0,0"))
                                                (rule "applyEq_and_gen2" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "lenNonNegative" (formula "17") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17"))
                                                (rule "lenNonNegative" (formula "36") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36"))
                                                (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "1"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,0"))
                                                (rule "times_zero_1" (formula "31") (term "0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "49") (ifseqformula "2"))
                                                )
                                                (branch "f_3 = <transient> ∧ o_3 = x_arr_3 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "43") (term "0"))
                                                   (branch "CUT: f_3 = <created> TRUE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "53"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: f_3 = <created> FALSE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "47") (ifseqformula "2"))
                                                      )
                                                      (branch "f_3 = <transactionConditionallyUpdated> ∧ o_3 = x_arr_3 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "cut_direct" (formula "41") (term "0"))
                                                         (branch "CUT: f_3 = <transient> TRUE"
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "CUT: f_3 = <transient> FALSE"
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "false_right" (formula "40"))
                                                               (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                               (rule "applyEqRigid" (formula "53") (term "1") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                               (rule "eqSymm" (formula "52"))
                                                               (rule "sortsDisjointModuloNull" (formula "52"))
                                                               (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "48")))
                                                               (rule "false_right" (formula "52"))
                                                               (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "47") (ifseqformula "2"))
                                                            )
                                                            (branch "f_3 = <initialized> ∧ o_3 = x_arr_3 FALSE"
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "39"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "29"))
                                                               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                               (rule "lenOfSeqConcat" (formula "29") (term "1"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                               (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                               (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "polySimp_homoEq" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "29") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                               (rule "add_literals" (formula "29") (term "1,0"))
                                                               (rule "times_zero_1" (formula "29") (term "0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "30"))
                                                               (rule "lenOfSeqConcat" (formula "29") (term "0,1,0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "29") (term "0,0,1,0") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "ifthenelse_split" (formula "3") (term "0"))
                                                               (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 TRUE"
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                                  (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "53") (term "1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                                  (rule "eqSymm" (formula "50"))
                                                                  (rule "sortsDisjointModuloNull" (formula "50"))
                                                                  (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "47")))
                                                                  (rule "false_right" (formula "50"))
                                                                  (rule "applyEq" (formula "51") (term "2,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "4"))
                                                                  (rule "narrowSelectArrayType" (formula "51") (term "0") (ifseqformula "7") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                                  (rule "close" (formula "45") (ifseqformula "2"))
                                                               )
                                                               (branch "f_3 = arr(0) ∧ o_3 = x_arr_3 FALSE"
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Exceptional Post (sendTo)"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "13"))
               (rule "instanceof_static_type" (formula "15") (term "0,0,0,1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")))
               (rule "andLeft" (formula "15"))
               (rule "eqSymm" (formula "14") (term "0,1"))
               (rule "eqSymm" (formula "14") (term "0,1,1"))
               (rule "eqSymm" (formula "14") (term "0,1,1,1"))
               (rule "eqSymm" (formula "14") (term "0,1,1,1,1,1,1"))
               (rule "eqSymm" (formula "14") (term "0,1,1,1,1,1,1,1"))
               (rule "replace_known_left" (formula "14") (term "1,1,1,1,1,1,1,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
               (rule "true_left" (formula "14"))
               (rule "pullOutSelect" (formula "12") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
               (rule "simplifySelectOfCreate" (formula "12"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfMemset" (formula "12"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "elementOfArrayRange" (formula "12") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
               (rule "simplifySelectOfCreate" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")))
               (rule "simplifySelectOfStore" (formula "12"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "20")))
               (rule "applyEqReverse" (formula "13") (term "0,1,0") (ifseqformula "12"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "castDel" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "13") (term "0,0,0"))
               (rule "eqSymm" (formula "13") (term "0,1,0,0"))
               (rule "replace_known_right" (formula "13") (term "0,1,0,0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sortsDisjointModuloNull" (formula "13") (term "0,0"))
               (rule "eqSymm" (formula "13") (term "1,0,0"))
               (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "22")))
               (rule "simplifySelectOfStore" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfStore" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfMemset" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfStore" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfStore" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfStore" (formula "13"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "simplifySelectOfCreate" (formula "13"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
               (rule "castDel" (formula "13") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "13") (term "0,0"))
               (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
               (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "commute_or_2" (formula "15"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_or_2" (formula "15"))
               (rule "commuteUnion" (formula "12") (term "1,1,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "commute_or_2" (formula "15"))
               (rule "commute_or" (formula "15") (term "0,0,0"))
               (rule "commute_or_2" (formula "15") (term "0,0"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (rule "methodCallThrow" (formula "22") (term "1"))
               (rule "commuteUnion" (formula "12") (term "1,0"))
               (rule "commuteUnion" (formula "12") (term "0,1,0"))
               (rule "commuteUnion_2" (formula "12") (term "0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "tryCatchThrow" (formula "22") (term "1"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion_2" (formula "12") (term "0,0,1,0"))
               (rule "commuteUnion" (formula "12") (term "0,0,0,1,0"))
               (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
               (rule "equality_comparison_simple" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_right" (formula "22") (term "0,0,1,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "ifElseSplit" (formula "22"))
               (branch "if x_2 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_2 false"
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "22"))
                  (branch "if exc_0 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "instanceof_static_type" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "e"))
                     (rule "reference_type_cast" (formula "22"))
                     (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "assignment" (formula "22") (term "1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "emptyModality" (formula "22") (term "1"))
                        (rule "andRight" (formula "22"))
                        (branch "Case 1"
                           (rule "andRight" (formula "22"))
                           (branch "Case 1"
                              (rule "impRight" (formula "22"))
                              (rule "andRight" (formula "23"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "23"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "23"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "23"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "23"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "23"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "impRight" (formula "22"))
                              (rule "orRight" (formula "23"))
                              (rule "orRight" (formula "23"))
                              (rule "orRight" (formula "23"))
                              (rule "orRight" (formula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                              (builtin "One Step Simplification" (formula "27"))
                              (builtin "One Step Simplification" (formula "26"))
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "24"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "1"))
                              (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")) (ifInst ""  (formula "26")) (ifInst ""  (formula "23")))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "allRight" (formula "22") (inst "sk=f_2") (userinteraction))
                           (rule "allRight" (formula "22") (inst "sk=o_2") (userinteraction))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "selectOfAnonEQ" (formula "29") (term "1") (ifseqformula "12") (userinteraction))
                           (rule "elementOfUnion" (formula "29") (term "0,0,0,1") (userinteraction))
                           (rule "elementOfUnion" (formula "29") (term "0,0,0,0,1") (userinteraction))
                           (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0,1") (userinteraction))
                           (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0,0,1") (userinteraction))
                           (rule "elementOfSingleton" (formula "29") (term "0,0,0,0,0,0,0,1") (userinteraction))
                           (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,0,0,1") (userinteraction))
                           (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,0,1") (userinteraction))
                           (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,1") (userinteraction))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "23")))
                           (rule "ifthenelse_split" (formula "29") (term "1") (userinteraction))
                           (branch " ¬o_2 = null ∧ ¬ o_2.<created>@heap[self.voted := TRUE] [create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, 0), 0)] [x_arr_3.<initialized> := TRUE] [x_arr_3[0] := self.choice] [create(strPool(\"localhost\"))] = TRUE TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "false_right" (formula "29"))
                              (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "false_right" (formula "29"))
                              (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "false_right" (formula "28"))
                              (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "false_right" (formula "27"))
                              (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Object_created__37"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "17"))
                              (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=java_lang_Object_created__38"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " ¬o_2 = null ∧ ¬ o_2.<created>@heap[self.voted := TRUE] [create(x_arr_3)] [x_arr_3.<transient> := 0] [x_arr_3.<transactionConditionallyUpdated> := FALSE] [x_arr_3.<initialized> := FALSE] [memset(arrayRange(x_arr_3, 0, 0), 0)] [x_arr_3.<initialized> := TRUE] [x_arr_3[0] := self.choice] [create(strPool(\"localhost\"))] = TRUE FALSE"
                              (rule "andRight" (formula "29") (userinteraction))
                              (branch "Case 1"
                                 (rule "notRight" (formula "29"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "29") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_2_18"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "selectOfCreate" (formula "30") (term "1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,2,1") (userinteraction))
                                 (rule "selectOfMemset" (formula "30") (term "2,2,2,1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,2,2,2,1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,2,2,2,2,1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,2,2,2,2,2,1") (userinteraction))
                                 (rule "selectOfCreate" (formula "30") (term "2,2,2,2,2,2,2,1") (userinteraction))
                                 (rule "selectOfStore" (formula "30") (term "2,2,2,2,2,2,2,2,1") (userinteraction))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "18")))
                                 (rule "ifthenelse_split" (formula "30") (term "1") (userinteraction))
                                 (branch " strPool(\"localhost\") = o_2 ∧ ¬strPool(\"localhost\") = null ∧ f_2 = <created> TRUE"
                                    (rule "castDel" (formula "31") (term "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notRight" (formula "31"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "applyEqRigid" (formula "28") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "6"))
                                    (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "notRight" (formula "30"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "applyEqRigid" (formula "26") (term "0,1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "close" (formula "25") (ifseqformula "3"))
                                 )
                                 (branch " strPool(\"localhost\") = o_2 ∧ ¬strPool(\"localhost\") = null ∧ f_2 = <created> FALSE"
                                    (rule "ifthenelse_split" (formula "31") (term "1") (userinteraction))
                                    (branch "x_arr_3 = o_2 ∧ arr(0) = f_2 TRUE"
                                       (rule "castDel" (formula "32") (term "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notRight" (formula "31"))
                                       (rule "eqSymm" (formula "32") (term "0,1,0"))
                                       (rule "eqSymm" (formula "32") (term "0,0"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "replace_known_right" (formula "32") (term "0,1,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                       (rule "sortsDisjointModuloNull" (formula "32") (term "0"))
                                       (rule "eqSymm" (formula "32") (term "1,0"))
                                       (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "24")))
                                       (rule "false_right" (formula "32"))
                                       (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "29") (term "0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "applyEqRigid" (formula "29") (term "0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "applyEqRigid" (formula "27") (term "0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "notRight" (formula "28"))
                                       (rule "applyEqRigid" (formula "28") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "26") (term "0"))
                                       (rule "sortsDisjointModuloNull" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")))
                                       (rule "false_right" (formula "26"))
                                       (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "27") (term "0") (ifseqformula "7") (ifseqformula "22"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "21") (ifseqformula "1"))
                                    )
                                    (branch "x_arr_3 = o_2 ∧ arr(0) = f_2 FALSE"
                                       (rule "ifthenelse_split" (formula "32") (term "1") (userinteraction))
                                       (branch "x_arr_3 = o_2 ∧ <initialized> = f_2 TRUE"
                                          (rule "castDel" (formula "33") (term "1"))
                                          (rule "notRight" (formula "30"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "eqSymm" (formula "33") (term "1"))
                                          (rule "eqSymm" (formula "33") (term "0"))
                                          (rule "eqSymm" (formula "32") (term "0,1,0"))
                                          (rule "eqSymm" (formula "32") (term "0,0"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqRigid" (formula "25") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "32") (term "0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "false_right" (formula "26"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "2"))
                                          (rule "sortsDisjointModuloNull" (formula "30") (term "0"))
                                          (rule "eqSymm" (formula "30") (term "1,0"))
                                          (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                          (rule "false_right" (formula "30"))
                                          (rule "applyEqRigid" (formula "28") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "false_right" (formula "28"))
                                          (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "21") (ifseqformula "1"))
                                       )
                                       (branch "x_arr_3 = o_2 ∧ <initialized> = f_2 FALSE"
                                          (rule "castDel" (formula "33") (term "1,2,2,2,2,2,1"))
                                          (rule "castDel" (formula "33") (term "1,2,2,2,1"))
                                          (rule "castDel" (formula "33") (term "1,2,2,1"))
                                          (rule "castDel" (formula "33") (term "1,2,1"))
                                          (rule "castDel" (formula "33") (term "1,2,2,2,2,1"))
                                          (rule "castDel" (formula "33") (term "1,1"))
                                          (rule "notRight" (formula "29"))
                                          (rule "eqSymm" (formula "33") (term "1,0,2,2,2,2,2,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,2,2,2,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "31") (term "1"))
                                          (rule "eqSymm" (formula "31") (term "0"))
                                          (rule "eqSymm" (formula "33") (term "0,0,2,2,2,2,2,1"))
                                          (rule "eqSymm" (formula "33") (term "1,0,2,1"))
                                          (rule "eqSymm" (formula "32") (term "1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,2,2,2,2,1"))
                                          (rule "eqSymm" (formula "30") (term "0,1,0"))
                                          (rule "eqSymm" (formula "30") (term "0,0"))
                                          (rule "eqSymm" (formula "33") (term "1,0,2,2,2,1"))
                                          (rule "eqSymm" (formula "33") (term "1,0,2,2,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,2,2,1"))
                                          (rule "eqSymm" (formula "32") (term "0"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "replace_known_right" (formula "33") (term "0,2,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "30") (term "0,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfArrayRange" (formula "33") (term "0,0,0") (inst "iv=iv"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0,1,0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_created__45"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,1") (inst "selectSK=java_lang_Object_created__46"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "hideAuxiliaryEqConcrete" (formula "3"))
                                          (rule "commute_and" (formula "27"))
                                          (rule "commute_and" (formula "29"))
                                          (rule "commute_and" (formula "26"))
                                          (rule "commute_and" (formula "28"))
                                          (rule "commute_and" (formula "24"))
                                          (rule "commute_or" (formula "2"))
                                          (rule "commute_and" (formula "32"))
                                          (rule "commute_and" (formula "33"))
                                          (rule "commute_and" (formula "31"))
                                          (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "disjointDefinition" (formula "10"))
                                          (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "17") (inst "s=s_1") (inst "i=i"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "exLeft" (formula "17") (inst "sk=i_25"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20"))
                                          (rule "inEqSimp_commuteLeq" (formula "17"))
                                          (rule "disjointDefinition" (formula "23"))
                                          (rule "castedGetAny" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                          (rule "times_zero_1" (formula "20") (term "0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "pullOutSelect" (formula "23") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_17"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "19") (term "1") (ifseqformula "23"))
                                          (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "elementOfUnion" (formula "23") (term "0,0,0"))
                                          (rule "elementOfUnion" (formula "23") (term "0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                          (rule "elementOfUnion" (formula "23") (term "0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                          (rule "elementOfUnion" (formula "23") (term "0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "23") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                          (rule "elementOfSingleton" (formula "23") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                          (rule "pullOutSelect" (formula "25") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
                                          (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replaceKnownSelect_taclet6_0" (formula "25") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "25") (term "2,0"))
                                          (rule "elementOfUnion" (formula "25") (term "0,0"))
                                          (rule "elementOfUnion" (formula "25") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "25") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "elementOfUnion" (formula "25") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "25") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "elementOfUnion" (formula "25") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "25") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_21"))
                                          (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
                                          (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "25") (term "1,0,0,0,0") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "elementOfUnion" (formula "19") (term "0,0"))
                                          (rule "elementOfUnion" (formula "19") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "elementOfUnion" (formula "19") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "elementOfUnion" (formula "19") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_21"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "20"))
                                          (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "elementOfUnion" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                          (rule "times_zero_1" (formula "22") (term "0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1"))
                                          (rule "elementOfUnion" (formula "20") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "elementOfUnion" (formula "20") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "elementOfUnion" (formula "20") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "20") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "elementOfSingleton" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "pullOutSelect" (formula "24") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_18"))
                                          (rule "simplifySelectOfCreate" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfMemset" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "elementOfArrayRange" (formula "24") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfCreate" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "pullOutSelect" (formula "24") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__47"))
                                          (rule "simplifySelectOfCreate" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "castDel" (formula "24") (term "1,0"))
                                          (rule "eqSymm" (formula "24") (term "0,1,0,0"))
                                          (rule "eqSymm" (formula "24") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "24") (term "0,1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "sortsDisjointModuloNull" (formula "24") (term "0,0"))
                                          (rule "eqSymm" (formula "24") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfMemset" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfStore" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "simplifySelectOfCreate" (formula "24"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
                                          (rule "castDel" (formula "24") (term "1,0"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                          (rule "sortsDisjointModuloNull" (formula "24") (term "0,0"))
                                          (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
                                          (rule "applyEqReverse" (formula "25") (term "0,0,1,0,0") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_22"))
                                          (rule "simplifySelectOfCreate" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfMemset" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "elementOfArrayRange" (formula "19") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfCreate" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "34")))
                                          (rule "applyEqReverse" (formula "20") (term "2,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_22"))
                                          (rule "simplifySelectOfCreate" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfMemset" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "elementOfArrayRange" (formula "20") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfCreate" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
                                          (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                          (rule "nnf_notOr" (formula "25") (term "1,0,0,0"))
                                          (rule "nnf_notOr" (formula "25") (term "1,1,0,0,0"))
                                          (rule "commute_and" (formula "46") (term "0,2,0"))
                                          (rule "commute_and" (formula "46") (term "0,2,2,0"))
                                          (rule "commute_and" (formula "46") (term "0,2,2,2,0"))
                                          (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "9") (inst "s=s_1") (inst "i=i"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "exLeft" (formula "9") (inst "sk=i_26"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_ltToLeq" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12"))
                                          (rule "inEqSimp_commuteLeq" (formula "9"))
                                          (rule "disjointDefinition" (formula "15"))
                                          (rule "castedGetAny" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1"))
                                          (rule "mul_literals" (formula "13") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                          (rule "times_zero_1" (formula "12") (term "0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                                          (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                                          (rule "commuteIntersection" (formula "17") (term "0"))
                                          (rule "commuteIntersection" (formula "34") (term "0"))
                                          (rule "intersectWithSingleton" (formula "34") (term "0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "notLeft" (formula "34"))
                                          (rule "cut_direct" (formula "49") (term "0,0"))
                                          (branch "CUT: o_2 = null TRUE"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "applyEq" (formula "53") (term "0,1,0,2,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "53") (term "1,0,2,0"))
                                             (rule "replace_known_right" (formula "53") (term "1,0,2,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "49") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "49") (term "1"))
                                             (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "43") (term "1"))
                                             (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "applyEqRigid" (formula "48") (term "0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "48") (term "1"))
                                             (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEq" (formula "48") (term "0,1,0,2,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "48") (term "1,0,2,0"))
                                             (rule "replace_known_right" (formula "48") (term "1,0,2,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEqRigid" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "48") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "48") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "notRight" (formula "48"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "applyEqRigid" (formula "50") (term "2,0") (ifseqformula "1"))
                                             (rule "narrowSelectType" (formula "50") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEqRigid" (formula "45") (term "1") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "close" (formula "41") (ifseqformula "2"))
                                          )
                                          (branch "CUT: o_2 = null FALSE"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "notRight" (formula "50"))
                                             (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "cut_direct" (formula "33") (term "1,0,0"))
                                             (branch "CUT: de.uni.trier.infsec.functionalities.smt.SMTError::instance(exc_0) = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "cut_direct" (formula "22") (term "0"))
                                                (branch "CUT: exc_0.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "cut_direct" (formula "42") (term "1"))
                                                   (branch "CUT: o_2 = self TRUE"
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "applyEq" (formula "49") (term "1,2,2,2,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1,1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "46") (term "1"))
                                                      (rule "eqSymm" (formula "46") (term "1,1"))
                                                      (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "46") (term "0,1,0,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "46") (term "1,0,2,0"))
                                                      (rule "replace_known_right" (formula "46") (term "0,1,0,2,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                      (rule "disjointAllFields" (formula "44") (ifseqformula "17"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "43") (term "1"))
                                                      (rule "replace_known_right" (formula "43") (term "1,1") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "applyEq" (formula "43") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "43") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "43") (term "1,0,0,0,0") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "43") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "43") (term "1,1,0,0") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")))
                                                      (rule "orRight" (formula "43"))
                                                      (rule "notRight" (formula "43"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "45"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                      (rule "sortsDisjointModuloNull" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "close" (formula "42") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: o_2 = self FALSE"
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "cut_direct" (formula "46") (term "1"))
                                                      (branch "CUT: o_2 = x_arr_3 TRUE"
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "49") (term "1,0,2,2,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEq" (formula "49") (term "1,2,2,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "46") (term "1"))
                                                         (rule "eqSymm" (formula "46") (term "1,1"))
                                                         (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "39"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "38") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_2 = x_arr_3 FALSE"
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "replace_known_right" (formula "48") (term "1,0,2,2,0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                                         (rule "closeTrue" (formula "48"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: exc_0.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cut_direct" (formula "43") (term "1"))
                                                   (branch "CUT: o_2 = self TRUE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "50") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "50") (term "1,0,0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "41")))
                                                      (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "48") (term "1"))
                                                      (rule "replace_known_right" (formula "48") (term "1,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "41")))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "46") (term "1"))
                                                      (rule "replace_known_right" (formula "46") (term "1,1") (ifseqformula "39"))
                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                      (rule "disjointAllFields" (formula "44") (ifseqformula "16"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1"))
                                                      (rule "eqSymm" (formula "44") (term "1,1"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "42")))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1,0,2,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1,0,2,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "closeTrue" (formula "44"))
                                                   )
                                                   (branch "CUT: o_2 = self FALSE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "cut_direct" (formula "47") (term "1"))
                                                      (branch "CUT: o_2 = x_arr_3 TRUE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "50") (term "1,0,2,2,2,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "47") (term "1"))
                                                         (rule "eqSymm" (formula "47") (term "1,1"))
                                                         (rule "replace_known_right" (formula "47") (term "1,1") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "40")))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "39") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_2 = x_arr_3 FALSE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "replace_known_right" (formula "49") (term "1,0,2,2,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                         (rule "closeTrue" (formula "49"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: de.uni.trier.infsec.functionalities.smt.SMTError::instance(exc_0) = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "cut_direct" (formula "22") (term "0"))
                                                (branch "CUT: exc_0.<created> = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "cut_direct" (formula "43") (term "1"))
                                                   (branch "CUT: o_2 = self TRUE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0,2,2,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "49") (term "1,0,2,2,2,0"))
                                                      (rule "replace_known_right" (formula "49") (term "1,1,0,2,2,2,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "41")))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                      (rule "disjointAllFields" (formula "45") (ifseqformula "17"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "46") (term "1"))
                                                      (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1"))
                                                      (rule "eqSymm" (formula "44") (term "1,1"))
                                                      (rule "replace_known_right" (formula "44") (term "1,1") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,2,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1,0,2,2,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1,0,2,2,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,0,0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "44") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "44") (term "0,1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "39")))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "closeTrue" (formula "44"))
                                                   )
                                                   (branch "CUT: o_2 = self FALSE"
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "cut_direct" (formula "47") (term "1"))
                                                      (branch "CUT: o_2 = x_arr_3 TRUE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "50") (term "1,0,2,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "39") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_2 = x_arr_3 FALSE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "replace_known_right" (formula "49") (term "1,0,2,2,0") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                         (rule "closeTrue" (formula "49"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: exc_0.<created> = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "cut_direct" (formula "44") (term "1"))
                                                   (branch "CUT: o_2 = self TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,2,2,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "51") (term "1,0,2,2,2,0"))
                                                      (rule "replace_known_right" (formula "51") (term "0,1,0,2,2,2,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "41")))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                      (rule "disjointAllFields" (formula "45") (ifseqformula "16"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "48") (term "1"))
                                                      (rule "replace_known_right" (formula "48") (term "0,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "40")))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1,1") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "41")))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "45") (term "1"))
                                                      (rule "eqSymm" (formula "45") (term "1,1"))
                                                      (rule "replace_known_right" (formula "45") (term "1,1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "41")))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,2,2,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "45") (term "1,0,2,2,0"))
                                                      (rule "replace_known_right" (formula "45") (term "0,1,0,2,2,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "40")))
                                                      (rule "applyEq" (formula "45") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "45") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "45") (term "1,0,0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "41")))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "45") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "45") (term "1,1,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "41")))
                                                      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "closeTrue" (formula "45"))
                                                   )
                                                   (branch "CUT: o_2 = self FALSE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "cut_direct" (formula "48") (term "1"))
                                                      (branch "CUT: o_2 = x_arr_3 TRUE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "51") (term "1,0,2,2,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "51") (term "1,2,2,2,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "45"))
                                                         (rule "sortsDisjointModuloNull" (formula "45"))
                                                         (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "41")))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "40") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_2 = x_arr_3 FALSE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "replace_known_right" (formula "50") (term "1,0,2,2,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                                         (rule "closeTrue" (formula "50"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                        (rule "orRight" (formula "22"))
                        (rule "false_right" (formula "24"))
                        (builtin "One Step Simplification" (formula "23"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "16")))
                        (rule "false_right" (formula "22"))
                        (rule "instanceof_static_type" (formula "22") (term "0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "closeTrue" (formula "22"))
                     )
                  )
                  (branch "if exc_0 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "notLeft" (formula "1"))
                     (rule "instanceof_static_type" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "closeTrue" (formula "16"))
                  )
               )
            )
            (branch "Pre (sendTo)"
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
               (rule "wellFormedCreate" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitiveArray" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "16") (term "0,0,1"))
               (rule "eqSymm" (formula "16") (term "0,0"))
               (rule "eqSymm" (formula "16") (term "0,1,0"))
               (rule "eqSymm" (formula "16") (term "0,1,1"))
               (rule "replace_known_right" (formula "16") (term "0,1,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "wellFormedMemsetArrayPrimitive" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "16") (term "0,0,1"))
               (rule "wellFormedCreate" (formula "16") (term "0,0,1"))
               (rule "wellFormedStorePrimitive" (formula "16") (term "0,0,1"))
               (rule "replace_known_left" (formula "16") (term "0,0,1") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "pullOutSelect" (formula "16") (term "0,1,0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_2"))
               (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "applyEqReverse" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "17") (term "0,1,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "16") (term "0,0,1") (inst "selectSK=java_lang_Object_created__34"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "17") (term "0,0,1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "16") (term "0,1") (inst "selectSK=java_lang_Object_created__35"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "16") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_2"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "17") (term "0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "16") (term "0"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "pullOutSelect" (formula "16") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_2"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "17") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "16") (term "0"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "disjointDefinition" (formula "8"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "18") (inst "s=s_1") (inst "i=i"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,0"))
               (rule "castedGetAny" (formula "18") (term "0,1,0,0,0,0"))
               (rule "disjointDefinition" (formula "18") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,0"))
               (rule "pullOutSelect" (formula "18") (term "1,0,0,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_10"))
               (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "19") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "19") (term "1,1,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "19") (term "0,1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "19") (term "1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "19") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "18") (term "0,0,1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_16"))
               (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "19") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "18") (term "0,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_4"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "applyEqReverse" (formula "19") (term "0,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "18") (term "0,1,1,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_16"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "applyEqReverse" (formula "19") (term "0,1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
               (rule "nnf_notOr" (formula "18") (term "1,0,0,0,1,0"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "7") (inst "s=s_1") (inst "i=i"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "8"))
               (rule "exLeft" (formula "7") (inst "sk=i_20"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "inEqSimp_ltToLeq" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "10"))
               (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_commuteLeq" (formula "7"))
               (rule "disjointDefinition" (formula "13"))
               (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "castedGetAny" (formula "9") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1"))
               (rule "polySimp_rightDist" (formula "11") (term "1"))
               (rule "mul_literals" (formula "11") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
               (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "11"))
               (rule "times_zero_1" (formula "10") (term "0,0"))
               (rule "add_zero_left" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "mul_literals" (formula "10") (term "1"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
               (rule "nnf_notOr" (formula "13") (term "1,0,0,0"))
               (rule "commuteIntersection" (formula "15") (term "0"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or" (formula "13") (term "0,0,0"))
               (rule "commute_or_2" (formula "13") (term "0,0"))
               (rule "andRight" (formula "25"))
               (branch "Case 1"
                  (rule "nnf_ex2all" (formula "25"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "cnf_rightDist" (formula "14") (term "0"))
                  (rule "distr_forallAnd" (formula "14"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "castDel" (formula "14") (term "0,1,0,0,0"))
                  (rule "castDel" (formula "14") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "shift_paren_or" (formula "14") (term "0"))
                  (rule "commute_or" (formula "14") (term "0,0"))
                  (rule "commuteIntersection" (formula "15") (term "0"))
                  (rule "intersectWithSingleton" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "allLeft" (formula "1") (inst "t=i_20"))
                  (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "25") (inst "sk=s_1_2"))
                  (rule "orRight" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "notRight" (formula "25"))
                  (rule "eqSymm" (formula "28"))
                  (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "notRight" (formula "26"))
                  (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_11"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "eqSymm" (formula "3"))
                  (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0"))
                  (rule "dismissNonSelectedField" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_created__36"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_12"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "eqSymm" (formula "2"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "1,0,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                  (rule "times_zero_1" (formula "13") (term "0,0"))
                  (rule "add_zero_left" (formula "13") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "commuteIntersection" (formula "16") (term "0"))
                  (rule "intersectWithSingleton" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "notLeft" (formula "16"))
                  (rule "cnf_rightDist" (formula "15") (term "0"))
                  (rule "distr_forallAnd" (formula "15"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "shift_paren_or" (formula "15") (term "0"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "lenNonNegative" (formula "10") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "allLeft" (formula "16") (inst "t=s_1_2"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")))
                  (rule "eqSymm" (formula "16"))
                  (rule "close" (formula "30") (ifseqformula "16"))
               )
            )
            (branch "Null reference (var = null)"
               (builtin "One Step Simplification" (formula "16"))
               (rule "notRight" (formula "16"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "close" (formula "13") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (x_arr = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (builtin "One Step Simplification" (formula "16"))
            (rule "false_right" (formula "16"))
            (rule "less_literals" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
