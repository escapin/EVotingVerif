\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 24 13:58:29 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=8000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Apr 24 13:58:29 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onCollectBallot(de.uni.trier.infsec.functionalities.smt.AuthenticatedMessage)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:onCollectBallot(de.uni.trier.infsec.functionalities.smt.AuthenticatedMessage)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "1f808ab73a683dacc73a23aec78f73741925bebf"))

(autoModeTime "254")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "eqSymm" (formula "17") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "14"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(rule "inEqSimp_sepPosMonomial0" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1"))
(rule "polySimp_rightDist" (formula "8") (term "1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
(rule "mul_literals" (formula "8") (term "0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "13"))
(rule "polySimp_mulComm0" (formula "13") (term "1"))
(rule "polySimp_rightDist" (formula "13") (term "1"))
(rule "mul_literals" (formula "13") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
(rule "polySimp_elimOne" (formula "13") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
(rule "times_zero_1" (formula "7") (term "0,0"))
(rule "add_zero_left" (formula "7") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7"))
(rule "mul_literals" (formula "7") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
(rule "times_zero_1" (formula "13") (term "0,0"))
(rule "add_zero_left" (formula "13") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "13"))
(rule "mul_literals" (formula "13") (term "1"))
(rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_onCollectBallot,savedHeapBefore_onCollectBallot"))
(builtin "One Step Simplification" (formula "19"))
(rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
(rule "equality_comparison_simple" (formula "19") (term "1"))
(builtin "One Step Simplification" (formula "19"))
(rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "19"))
(rule "ifSplit" (formula "19"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "voterID"))
   (rule "assignment_read_attribute" (formula "19"))
   (branch "Normal Execution (_authMsg != null)"
      (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "ballot"))
      (rule "assignment_read_attribute" (formula "19"))
      (branch "Normal Execution (_authMsg != null)"
         (builtin "One Step Simplification" (formula "19"))
         (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
         (rule "compound_assignment_5_nonsimple" (formula "19") (term "1"))
         (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2"))
         (rule "less_than_comparison_simple" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,1,0"))
         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,1,0") (ifseqformula "8"))
         (rule "qeq_literals" (formula "19") (term "0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "arrayLengthIsAnInt" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "12") (term "0"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "ifElseSplit" (formula "19"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "compound_greater_equal_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_4"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_3"))
            (rule "assignment_read_attribute_this" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "greater_equal_than_comparison_simple" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "blockEmpty" (formula "19") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "19") (term "0,0,1,0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "1"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_1 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_1 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
               (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
               (rule "assignment_read_attribute_this" (formula "20"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (x_arr != null)"
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "ifSplit" (formula "21"))
                  (branch "if x_5 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallEmptyReturn" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "tryEmpty" (formula "21") (term "1"))
                     (rule "emptyModality" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                     (rule "closeTrue" (formula "21"))
                  )
                  (branch "if x_5 false"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr = null)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "21"))
                  (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0,0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_10_in_Server" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "disjointDefinition" (formula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "eqSymm" (formula "23"))
                  (rule "disjointDefinition" (formula "11"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "eqSymm" (formula "22"))
                  (rule "disjointDefinition" (formula "10"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "eqSymm" (formula "21"))
                  (rule "disjointDefinition" (formula "9"))
                  (rule "disjointDefinition" (formula "7"))
                  (rule "disjointDefinition" (formula "8"))
                  (rule "sortsDisjointModuloNull" (formula "23"))
                  (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "sortsDisjointModuloNull" (formula "22"))
                  (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")))
                  (rule "false_right" (formula "22"))
                  (rule "sortsDisjointModuloNull" (formula "21"))
                  (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                  (rule "false_right" (formula "21"))
                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "1"))
                  (rule "commuteIntersection" (formula "9") (term "0"))
                  (rule "commuteIntersection" (formula "7") (term "0"))
                  (rule "commuteIntersection" (formula "8") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_8_in_Server" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_22_in_Server" (formula "12"))
                  (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "12") (inst "r=r") (inst "i=i"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "exLeft" (formula "12") (inst "sk=i_0"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "inEqSimp_ltToLeq" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "disjointDefinition" (formula "16"))
                  (rule "castedGetAny" (formula "14") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
                  (rule "nnf_notOr" (formula "15") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "15") (term "0,0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or" (formula "15") (term "0,0,0"))
                  (rule "commute_or_2" (formula "15") (term "0,0"))
                  (rule "cnf_rightDist" (formula "15") (term "0"))
                  (rule "distr_forallAnd" (formula "15"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "castDel" (formula "15") (term "0,1,0,0,0"))
                  (rule "castDel" (formula "15") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "shift_paren_or" (formula "15") (term "0"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "commuteIntersection" (formula "16") (term "0"))
                  (rule "lenNonNegative" (formula "13") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "13"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_Server" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_14_in_Server" (formula "18"))
                  (rule "eqSymm" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                  (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "28"))
                  (rule "leq_literals" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_Server" (formula "19"))
                  (rule "notLeft" (formula "19"))
                  (rule "close" (formula "30") (ifseqformula "3"))
               )
               (branch "Index Out of Bounds (x_arr != null, but voterID Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "false_right" (formula "21"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "3") (term "1"))
                  (rule "arrayLengthIsAnInt" (formula "4") (term "1"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "Partial_inv_axiom_for_JML_class_invariant_nr_12_in_Server" (formula "10"))
                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "10"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
         )
      )
      (branch "Null Reference (_authMsg = null)"
         (rule "false_right" (formula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (_authMsg = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
