\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Apr 25 09:15:03 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=9000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Apr 25 09:15:03 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:computeResult([B,int)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:computeResult([B,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "1f808ab73a683dacc73a23aec78f73741925bebf"))

(autoModeTime "3663")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "0,2,0,1,0,0,1,0,0,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "7") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "cnf_rightDist" (formula "5") (term "0"))
(rule "distr_forallAnd" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "commute_or" (formula "6") (term "0"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_computeResult,savedHeapBefore_computeResult"))
(builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "res"))
(rule "arrayCreation" (formula "8") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "dim0"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,1,0"))
(rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,1,0") (ifseqformula "4"))
(rule "qeq_literals" (formula "8") (term "0,0,0,1,0"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifSplit" (formula "8"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "9"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0,0"))
   (rule "arrayLengthIsAnInt" (formula "6") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "allocateInstanceWithLength" (formula "9"))
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "13") (term "1"))
   (rule "assignment" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "methodCall" (formula "13"))
   (branch "Normal Execution (newObject != null )"
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "assignment_write_attribute_this" (formula "13"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallWithinClass" (formula "13") (term "1"))
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "arrayInitialisation" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_elimSub" (formula "13") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "13") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment_write_attribute_this" (formula "13"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "methodCallReturn" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "for_to_while" (formula "13") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "i"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (builtin "Loop Invariant" (formula "13") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
         (rule "wellFormedStorePrimitive" (formula "13") (term "1,1"))
         (rule "bsum_lower_equals_upper" (formula "13") (term "1,1,0,1,0"))
         (rule "leq_literals" (formula "13") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,1,0,1"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "1,0,1,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0,0,0"))
         (rule "wellFormedMemsetArrayPrimitive" (formula "13") (term "1,1"))
         (rule "wellFormedStorePrimitive" (formula "13") (term "1,1"))
         (rule "wellFormedStorePrimitive" (formula "13") (term "1,1"))
         (rule "wellFormedStorePrimitive" (formula "13") (term "1,1"))
         (rule "wellFormedCreate" (formula "13") (term "1,1"))
         (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "pullOutSelect" (formula "13") (term "0,1,1") (inst "selectSK=java_lang_Object_created__3"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "applyEqReverse" (formula "14") (term "0,1,1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "13") (term "1,1") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "pullOutSelect" (formula "13") (term "0,1") (inst "selectSK=java_lang_Object_created__4"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "nnf_imp2or" (formula "13") (term "0,0"))
         (rule "nnf_imp2or" (formula "13") (term "0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
         (rule "andRight" (formula "13"))
         (branch "Case 1"
            (rule "allRight" (formula "13") (inst "sk=j_3"))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "13"))
            (rule "inEqSimp_leqRight" (formula "13"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "14"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=arr_12"))
            (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "applyEqReverse" (formula "16") (term "0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "polySimp_addComm1" (formula "15") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1"))
            (rule "allLeft" (formula "11") (inst "t=j_3"))
            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "11") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_geqRight" (formula "16"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "allLeft" (formula "11") (inst "t=j_3"))
            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "3"))
            (rule "qeq_literals" (formula "11") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "1"))
            (rule "qeq_literals" (formula "11") (term "0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "2"))
            (rule "andLeft" (formula "11"))
            (rule "inEqSimp_homoInEq1" (formula "11"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "times_zero_1" (formula "11") (term "1,0"))
            (rule "add_zero_right" (formula "11") (term "0"))
            (rule "leq_literals" (formula "11"))
            (rule "closeFalse" (formula "11"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "13") (inst "sk=k_1"))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "13"))
            (rule "inEqSimp_leqRight" (formula "13"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "14"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_10"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_11"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "applyEq_and_int4" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEq_and_int6" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "instanceof_static_type" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "closeTrue" (formula "16"))
         )
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
         (builtin "One Step Simplification" (formula "15"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1"))
         (rule "andLeft" (formula "11"))
         (rule "impRight" (formula "16"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "eqSymm" (formula "15") (term "1,0"))
         (rule "eqSymm" (formula "19") (term "1,0,0,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "19") (term "0,2,1,1,0,1,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "15") (term "0,2,0,1,0"))
         (rule "eqSymm" (formula "19") (term "1,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc"))
         (rule "blockThrow" (formula "19") (term "1,0,0,1"))
         (rule "blockThrow" (formula "19") (term "1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,0,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,0,1,1,0,1"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "cnf_rightDist" (formula "13") (term "0"))
         (rule "distr_forallAnd" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "commute_or" (formula "14") (term "0"))
         (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "16"))
         (branch "Normal Execution (_choices != null)"
            (builtin "One Step Simplification" (formula "16"))
            (rule "less_than_comparison_simple" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "emptyModality" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "notRight" (formula "16"))
            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_5"))
            (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
            (rule "assignment_read_length" (formula "19"))
            (branch "Normal Execution (_choices != null)"
               (builtin "One Step Simplification" (formula "19"))
               (rule "less_than_comparison_simple" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
               (rule "replace_known_left" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "ifSplit" (formula "19"))
               (branch "if x_5 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "1"))
                  (rule "preincrement_array" (formula "19") (term "1") (inst "#v0=x") (inst "#v=x_arr"))
                  (rule "variableDeclarationAssign" (formula "19") (term "1"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_3"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "variableDeclarationAssign" (formula "19") (term "1"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_8"))
                  (rule "assignment_array2" (formula "19"))
                  (branch "Normal Execution (_choices != null)"
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "eval_order_array_access3" (formula "20") (inst "#v1=x_10") (inst "#v2=x_9") (inst "#v0=x_arr_4"))
                     (branch "ArrayIndexOutOfBounds (x_8<0 | x_8>=x_arr_3.length)"
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                        (rule "applyEq" (formula "20") (term "0,1,0,1") (ifseqformula "3"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "20") (term "1,1,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: choices[i_0] ≥ 0 TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "allLeft" (formula "15") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "15") (term "0,1"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "allLeft" (formula "12") (inst "t=i_0"))
                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "12") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                           (rule "add_literals" (formula "12") (term "0,0,1"))
                           (rule "leq_literals" (formula "12") (term "0,1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                        (branch "CUT: choices[i_0] ≥ 0 FALSE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "allLeft" (formula "14") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "14") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "14") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "14") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "14") (term "0,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch "Normal Execution"
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_4"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                        (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "20") (term "0,1,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_11"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_11"))
                        (rule "remove_parentheses_right" (formula "19") (term "1"))
                        (rule "compound_addition_1" (formula "19") (term "1") (inst "#v=x_12"))
                        (rule "variableDeclarationAssign" (formula "19") (term "1"))
                        (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_12"))
                        (rule "assignment_array2" (formula "19"))
                        (branch "Normal Execution (x_arr_3 != null)"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "assignmentAdditionInt" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "19") (term "1"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "assignment_to_primitive_array_component" (formula "19"))
                           (branch "Normal Execution (x_arr_4 != null)"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "postincrement" (formula "19") (term "1"))
                              (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_13"))
                              (rule "remove_parentheses_right" (formula "19") (term "1"))
                              (rule "assignmentAdditionInt" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "tryEmpty" (formula "19") (term "1"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "2")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                              (rule "eqSymm" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                              (rule "bsum_induction_upper_concrete" (formula "19") (term "0,1,0,1,0,0"))
                              (rule "polySimp_homoEq" (formula "19") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,1,0,1,0,0"))
                              (rule "replace_known_left" (formula "19") (term "0,0,0,1,0,1,0,1,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,1,0,0"))
                              (rule "precOfInt" (formula "19") (term "1"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                              (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,1,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "19") (term "0,1,1"))
                              (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,1,0,0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0,1"))
                              (rule "times_zero_2" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,1"))
                              (rule "add_literals" (formula "19") (term "1,0,1,1"))
                              (rule "times_zero_1" (formula "19") (term "0,1,1"))
                              (rule "leq_literals" (formula "19") (term "1,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "19") (term "0,0,0") (ifseqformula "12"))
                              (rule "leq_literals" (formula "19") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "pullOutSelect" (formula "19") (term "1,0,0,1,1,1,0,1,0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "1") (term "2,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                              (rule "applyEqReverse" (formula "20") (term "1,0,0,1,1,1,0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "andRight" (formula "19"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "19"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "19") (inst "sk=j_2"))
                                    (rule "orRight" (formula "19"))
                                    (rule "orRight" (formula "19"))
                                    (rule "inEqSimp_geqRight" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "20"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=arr_9"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0,0,1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "0,1,0,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                                    (rule "allLeft" (formula "16") (inst "t=j_2"))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "16") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                    (rule "leq_literals" (formula "16") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "16") (inst "t=j_2"))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "16") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                    (rule "leq_literals" (formula "16") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "19") (inst "sk=k_0"))
                                    (rule "orRight" (formula "19"))
                                    (rule "orRight" (formula "19"))
                                    (rule "eqSymm" (formula "21") (term "0,0,1,1"))
                                    (rule "eqSymm" (formula "21") (term "0,2,0"))
                                    (rule "inEqSimp_leqRight" (formula "19"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "22") (term "0,1,1"))
                                    (branch "choices[i_0] = k_0 TRUE"
                                       (rule "mul_literals" (formula "23") (term "1,1"))
                                       (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "23") (term "0,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1"))
                                       (rule "add_literals" (formula "22") (term "0,1"))
                                       (rule "add_zero_left" (formula "22") (term "1"))
                                       (rule "applyEq" (formula "22") (term "0,2,0,0,0,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0,2,1,3,0,0,0,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "22") (term "0,2,1") (ifseqformula "1"))
                                       (rule "allLeft" (formula "17") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "17") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                       (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                       (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "18") (inst "t=k_0"))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "18") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "18") (term "1,1"))
                                       (rule "eqSymm" (formula "18") (term "0,2,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "bsum_equal_split4" (formula "23") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "bsum_lower_equals_upper" (formula "23") (term "1,1,1"))
                                       (rule "bsum_lower_equals_upper" (formula "23") (term "0,2,1"))
                                       (rule "less_literals" (formula "23") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "eqSymm" (formula "23") (term "1"))
                                       (rule "polySimp_elimSub" (formula "23") (term "2,0,1"))
                                       (rule "polySimp_addComm0" (formula "23") (term "2,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "equal_bsum2" (formula "24") (ifseqformula "18"))
                                       (rule "allRight" (formula "24") (inst "sk=j_1"))
                                       (rule "impRight" (formula "24"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "pullOutSelect" (formula "26") (term "0,0,1") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "eqSymm" (formula "27") (term "0,1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "applyEqReverse" (formula "27") (term "1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "26") (term "0,1"))
                                       (rule "pullOutSelect" (formula "26") (term "0,0,0") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet24_0" (formula "1") (term "2,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "eqSymm" (formula "27") (term "0,1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "applyEqReverse" (formula "27") (term "1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "26") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "closeTrue" (formula "26"))
                                    )
                                    (branch "choices[i_0] = k_0 FALSE"
                                       (rule "times_zero_2" (formula "23") (term "1,1"))
                                       (rule "add_zero_right" (formula "23") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "allLeft" (formula "16") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                       (rule "leq_literals" (formula "16") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "allLeft" (formula "18") (inst "t=k_0"))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "18") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "18") (term "1,1"))
                                       (rule "eqSymm" (formula "18") (term "0,2,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "bsum_equal_split2" (formula "24") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "bsum_lower_equals_upper" (formula "24") (term "0,1,1"))
                                       (rule "bsum_lower_equals_upper" (formula "24") (term "1,2,1"))
                                       (rule "eqSymm" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "24") (term "2,0,2,1"))
                                       (rule "polySimp_elimSub" (formula "24") (term "2,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                       (rule "leq_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "equal_bsum2" (formula "25") (ifseqformula "18"))
                                       (rule "allRight" (formula "25") (inst "sk=j_0"))
                                       (rule "impRight" (formula "25"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "pullOutSelect" (formula "27") (term "0,0,1") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "eqSymm" (formula "28") (term "0,1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "applyEqReverse" (formula "28") (term "1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "27") (term "0,1"))
                                       (rule "pullOutSelect" (formula "27") (term "0,0,0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet24_0" (formula "1") (term "2,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "28") (term "0,0"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                       (rule "applyEqReverse" (formula "28") (term "1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "closeTrue" (formula "27"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "19") (inst "sk=f_1"))
                                 (rule "allRight" (formula "19") (inst "sk=o_1"))
                                 (rule "orRight" (formula "19"))
                                 (rule "orRight" (formula "19"))
                                 (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_1_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (x_arr_4 = null)"
                              (builtin "One Step Simplification" (formula "20"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_4 != null, but x_9 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "commute_or" (formula "1"))
                              (rule "allLeft" (formula "14") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "14") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "14") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "14") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "14") (term "0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "allLeft" (formula "11") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "11") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0"))
                              (rule "leq_literals" (formula "11") (term "0,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "11"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (x_arr_3 = null)"
                           (builtin "One Step Simplification" (formula "20"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_3 != null, but x_8 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "commute_or" (formula "1"))
                           (rule "allLeft" (formula "15") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "15") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0"))
                           (rule "leq_literals" (formula "15") (term "0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "leq_literals" (formula "1") (term "0,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "14") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "14") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "14") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1"))
                           (rule "leq_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                  )
                  (branch "Null Reference (_choices = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_choices != null, but i Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "false_right" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "if x_5 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_choices = null)"
               (rule "false_right" (formula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_choices = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "eqSymm" (formula "14") (term "0,2,1,1,0"))
         (rule "eqSymm" (formula "14") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_1"))
         (rule "blockEmpty" (formula "18") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "cnf_rightDist" (formula "13") (term "0"))
         (rule "distr_forallAnd" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "commute_or" (formula "14") (term "0"))
         (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
         (rule "assignment_read_length" (formula "19"))
         (branch "Normal Execution (_choices != null)"
            (builtin "One Step Simplification" (formula "19"))
            (rule "less_than_comparison_simple" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (rule "emptyModality" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "impRight" (formula "19"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "16"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "12"))
            (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "11"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
            (rule "inEqSimp_homoInEq1" (formula "12"))
            (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "1,0"))
            (rule "times_zero_1" (formula "12") (term "0"))
            (rule "leq_literals" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "methodCallReturn" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "tryEmpty" (formula "18") (term "1"))
            (rule "emptyModality" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
            (rule "eqSymm" (formula "18") (term "1,0,0,1"))
            (rule "applyEq" (formula "18") (term "1,0,1,0,0") (ifseqformula "11"))
            (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "allRight" (formula "18") (inst "sk=f_0"))
            (rule "allRight" (formula "18") (inst "sk=o_0"))
            (rule "orRight" (formula "18"))
            (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "20"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "6") (term "0,0"))
            (rule "commute_and" (formula "8") (term "0,0,0"))
            (rule "commute_and" (formula "8") (term "1,0,0"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
            (rule "commute_or" (formula "8") (term "1,1,0,0"))
            (rule "commute_or" (formula "8") (term "0,1,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
            (rule "commute_or" (formula "8") (term "1,0,0,0"))
            (rule "commute_and" (formula "5") (term "0,0,1,0,0,0"))
            (rule "shift_paren_and" (formula "8") (term "0,0"))
            (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
            (rule "cut_direct" (formula "26") (term "0,0"))
            (branch "CUT: o_0 = null TRUE"
               (builtin "One Step Simplification" (formula "27"))
               (rule "false_right" (formula "27"))
               (rule "replace_known_left" (formula "9") (term "0,0,1,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
               (rule "applyEqRigid" (formula "27") (term "1,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "8") (term "0,0"))
               (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
               (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0,0,0") (ifseqformula "8"))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "4") (term "1,0,0"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "6") (term "1,0,0"))
               (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "4") (term "1,0,0"))
               (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "2") (term "1,0,0"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "eqSymm" (formula "19"))
               (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "closeTrue" (formula "19"))
            )
            (branch "CUT: o_0 = null FALSE"
               (builtin "One Step Simplification" (formula "27"))
               (rule "notRight" (formula "27"))
               (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
               (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "f_0 = <created> ∧ o_0 = x_arr_2 TRUE"
                  (rule "andLeft" (formula "2"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "22") (ifseqformula "1"))
               )
               (branch "f_0 = <created> ∧ o_0 = x_arr_2 FALSE"
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch "f_0 = <transient> ∧ o_0 = x_arr_2 TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "8"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "eqSymm" (formula "27"))
                     (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "27") (term "2,1") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "27") (term "1") (ifseqformula "10"))
                     (rule "applyEqRigid" (formula "6") (term "1,1,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "25") (term "2,0") (ifseqformula "2"))
                     (rule "narrowSelectType" (formula "25") (term "0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "false_right" (formula "20"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
                  (branch "f_0 = <transient> ∧ o_0 = x_arr_2 FALSE"
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = <transactionConditionallyUpdated> ∧ o_0 = x_arr_2 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "eqSymm" (formula "26"))
                        (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "false_right" (formula "20"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "false_right" (formula "19"))
                        (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "2"))
                        (rule "narrowSelectType" (formula "22") (term "0") (ifseqformula "13"))
                        (rule "eqSymm" (formula "22"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "19") (ifseqformula "1"))
                     )
                     (branch "f_0 = <transactionConditionallyUpdated> ∧ o_0 = x_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = <initialized> ∧ o_0 = x_arr_2 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "26") (term "2,1") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "26") (term "1") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "2"))
                           (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "false_right" (formula "19"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "false_right" (formula "19"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "18") (ifseqformula "1"))
                        )
                        (branch "f_0 = <initialized> ∧ o_0 = x_arr_2 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "cut_direct" (formula "21") (term "1"))
                           (branch "CUT: o_0 = x_arr_2 TRUE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "26"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "close" (formula "22") (ifseqformula "2"))
                           )
                           (branch "CUT: o_0 = x_arr_2 FALSE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "false_right" (formula "22"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Null Reference (_choices = null)"
            (rule "false_right" (formula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (newObject = null)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
