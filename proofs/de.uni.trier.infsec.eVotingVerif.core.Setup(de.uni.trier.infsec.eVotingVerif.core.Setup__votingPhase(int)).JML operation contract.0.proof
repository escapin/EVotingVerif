\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue May 13 11:37:54 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=8000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue May 13 11:37:54 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:votingPhase(int)].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:votingPhase(int)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "f5f85d2fc067f1564f97734aa2a0a03481df127d"))

(autoModeTime "413962")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "25"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "27"))
(rule "andLeft" (formula "28"))
(rule "andLeft" (formula "29"))
(rule "andLeft" (formula "30"))
(rule "instanceof_static_type" (formula "36") (term "0,1,1,1,0,1"))
(builtin "One Step Simplification" (formula "36"))
(rule "eqSymm" (formula "10"))
(rule "eqSymm" (formula "17"))
(rule "eqSymm" (formula "18"))
(rule "eqSymm" (formula "22"))
(rule "eqSymm" (formula "36") (term "1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "31") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
(rule "disjointDefinition" (formula "23"))
(rule "disjointDefinition" (formula "24"))
(rule "disjointDefinition" (formula "25"))
(rule "disjointDefinition" (formula "26"))
(rule "disjointDefinition" (formula "27"))
(rule "disjointDefinition" (formula "28"))
(rule "disjointDefinition" (formula "29"))
(rule "disjointDefinition" (formula "30"))
(rule "assignment" (formula "36") (term "1"))
(builtin "One Step Simplification" (formula "36"))
(rule "apply_eq_monomials" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "10"))
(rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0b" (formula "13") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "13") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "13") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "13") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
(rule "apply_eq_monomials" (formula "31") (term "1,0,0,1,1,0") (ifseqformula "10"))
(rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,1,0"))
(rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,1,0"))
(rule "polySimp_pullOutFactor0b" (formula "31") (term "1,0,0,1,1,0"))
(rule "add_literals" (formula "31") (term "1,1,1,0,0,1,1,0"))
(rule "times_zero_1" (formula "31") (term "1,1,0,0,1,1,0"))
(rule "add_zero_right" (formula "31") (term "1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0"))
(rule "apply_eq_monomials" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "10"))
(rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0b" (formula "20") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "20") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "20") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "20") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
(rule "apply_eq_monomials" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "8"))
(rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "7") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "7") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
(rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
(rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0"))
(rule "polySimp_rightDist" (formula "31") (term "1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1,0"))
(rule "mul_literals" (formula "31") (term "0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "31") (term "1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
(rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "intersectWithSingleton" (formula "25") (term "0"))
(builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "intersectWithSingleton" (formula "25") (term "0"))
(builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "intersectWithSingleton" (formula "25") (term "0"))
(builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "intersectWithSingleton" (formula "25") (term "0"))
(builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "12") (term "0"))
(rule "nnf_imp2or" (formula "19") (term "0"))
(rule "nnf_imp2or" (formula "13") (term "0"))
(rule "nnf_imp2or" (formula "27") (term "0"))
(rule "nnf_imp2or" (formula "20") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "19") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
(rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "19") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
(rule "mul_literals" (formula "19") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
(rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "13") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "13") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
(rule "mul_literals" (formula "13") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "27") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
(rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
(rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "27") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
(rule "mul_literals" (formula "27") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "20") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
(rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "20") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
(rule "mul_literals" (formula "20") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
(rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "commuteIntersection" (formula "23") (term "0"))
(rule "commuteIntersection" (formula "24") (term "0"))
(rule "intersectWithSingleton" (formula "24") (term "0"))
(builtin "One Step Simplification" (formula "24"))
(rule "notLeft" (formula "24"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_votingPhase,savedHeapBefore_votingPhase"))
(builtin "One Step Simplification" (formula "36"))
(rule "variableDeclarationAssign" (formula "36") (term "1"))
(rule "variableDeclaration" (formula "36") (term "1") (newnames "voter"))
(rule "assignment" (formula "36") (term "1"))
(builtin "One Step Simplification" (formula "36"))
(rule "cnf_rightDist" (formula "26") (term "0"))
(rule "distr_forallAnd" (formula "26"))
(rule "andLeft" (formula "26"))
(rule "commute_or" (formula "27") (term "0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "arrayLengthIsAnInt" (formula "8") (term "0"))
(builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "arrayLengthNotNegative" (formula "8") (term "0"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
(builtin "One Step Simplification" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "15"))
(rule "add_zero_left" (formula "16") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0" (formula "16") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
(rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
(rule "mul_literals" (formula "16") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "16") (term "0"))
(rule "nnf_notAnd" (formula "16") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
(rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
(rule "mul_literals" (formula "16") (term "1,0,0,0"))
(builtin "One Step Simplification" (formula "16"))
(rule "true_left" (formula "16"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "17") (inst "iv=iv"))
(builtin "One Step Simplification" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
(rule "add_zero_left" (formula "18") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor1" (formula "18") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "18") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
(rule "mul_literals" (formula "18") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "18") (term "0"))
(rule "nnf_notAnd" (formula "18") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
(rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "18") (term "0,0,1,0,0"))
(rule "add_zero_left" (formula "18") (term "0,1,0,0"))
(builtin "One Step Simplification" (formula "18"))
(rule "true_left" (formula "18"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "19") (inst "iv=iv"))
(builtin "One Step Simplification" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
(rule "apply_eq_monomials" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "19"))
(rule "add_zero_left" (formula "20") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0" (formula "20") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
(rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
(rule "mul_literals" (formula "20") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "20") (term "0"))
(rule "nnf_notAnd" (formula "20") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
(rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "20") (term "0,0,1,0,0"))
(rule "add_zero_left" (formula "20") (term "0,1,0,0"))
(builtin "One Step Simplification" (formula "20"))
(rule "true_left" (formula "20"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv"))
(builtin "One Step Simplification" (formula "25"))
(rule "andLeft" (formula "25"))
(rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
(rule "getOfSeqSingleton" (formula "26") (term "1,1,0"))
(rule "castDel" (formula "26") (term "2,1,1,0"))
(rule "castDel" (formula "26") (term "1,1,1,0"))
(rule "eqSymm" (formula "26") (term "1,0"))
(rule "apply_eq_monomials" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "25"))
(rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0"))
(rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "26") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "26") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "26") (term "1,1,0,0,1,0,0"))
(rule "add_literals" (formula "26") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "26") (term "0,0,1,0,0"))
(rule "add_zero_left" (formula "26") (term "0,1,0,0"))
(rule "nnf_imp2or" (formula "26") (term "0"))
(rule "nnf_notAnd" (formula "26") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
(rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "26") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
(rule "mul_literals" (formula "26") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
(rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "26") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
(rule "mul_literals" (formula "26") (term "1,0,0,0"))
(rule "inEqSimp_or_antiSymm0" (formula "26") (term "0,0"))
(rule "add_literals" (formula "26") (term "0,0,0,0"))
(builtin "One Step Simplification" (formula "26"))
(rule "add_literals" (formula "26") (term "1,0,0,0"))
(rule "arrayLengthIsAnInt" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "arrayLengthNotNegative" (formula "11") (term "1"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
(rule "andLeft" (formula "29"))
(rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
(rule "polySimp_addComm1" (formula "30") (term "0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
(rule "getOfSeqDef" (formula "30") (term "0,1,0"))
(rule "castDel" (formula "30") (term "1,0,1,0"))
(rule "castDel" (formula "30") (term "2,0,1,0"))
(rule "add_zero_right" (formula "30") (term "1,0,1,0"))
(rule "polySimp_elimSub" (formula "30") (term "1,1,0,0,1,0"))
(rule "times_zero_2" (formula "30") (term "1,1,1,0,0,1,0"))
(rule "add_zero_right" (formula "30") (term "1,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
(rule "apply_eq_monomials" (formula "30") (term "1,0,1,0,0") (ifseqformula "29"))
(rule "polySimp_rightDist" (formula "30") (term "0,1,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,1,0,0"))
(rule "polySimp_pullOutFactor0b" (formula "30") (term "1,0,1,0,0"))
(rule "add_literals" (formula "30") (term "1,1,1,0,1,0,0"))
(rule "times_zero_1" (formula "30") (term "1,1,0,1,0,0"))
(rule "add_zero_right" (formula "30") (term "1,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0"))
(rule "polySimp_addComm1" (formula "30") (term "0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
(rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
(rule "lenOfSeqDef" (formula "29") (term "0"))
(rule "polySimp_elimSub" (formula "29") (term "1,0"))
(rule "mul_literals" (formula "29") (term "1,1,0"))
(rule "add_zero_right" (formula "29") (term "1,0"))
(rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
(rule "add_zero_right" (formula "29") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
(rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
(rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
(rule "lenOfSeqDefEQ" (formula "29") (term "1") (ifseqformula "31"))
(rule "eqSymm" (formula "29"))
(rule "polySimp_elimSub" (formula "29") (term "1,0"))
(rule "times_zero_2" (formula "29") (term "1,1,0"))
(rule "add_zero_right" (formula "29") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "29") (term "0,0"))
(rule "eqSymm" (formula "29"))
(rule "getOfSeqDefEQ" (formula "30") (term "1,1,0") (ifseqformula "31"))
(rule "castDel" (formula "30") (term "1,1,1,0"))
(rule "castDel" (formula "30") (term "2,1,1,0"))
(rule "add_zero_right" (formula "30") (term "1,1,1,0"))
(rule "eqSymm" (formula "30") (term "1,0"))
(rule "polySimp_elimSub" (formula "30") (term "1,1,0,0,1,0"))
(rule "times_zero_2" (formula "30") (term "1,1,1,0,0,1,0"))
(rule "add_zero_right" (formula "30") (term "1,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
(builtin "One Step Simplification" (formula "30"))
(rule "true_left" (formula "30"))
(rule "commute_or" (formula "27") (term "0"))
(builtin "One Step Simplification" (formula "27"))
(rule "typeEqDerived2" (formula "27") (term "0,0,1") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "27"))
(rule "castDel" (formula "27") (term "0,0,0"))
(builtin "One Step Simplification" (formula "27"))
(rule "castDel" (formula "27") (term "1,1"))
(rule "eqSymm" (formula "27"))
(rule "for_to_while" (formula "45") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "45") (term "1"))
(rule "variableDeclaration" (formula "45") (term "1") (newnames "i"))
(rule "assignment" (formula "45") (term "1"))
(builtin "One Step Simplification" (formula "45"))
(rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "45"))
(builtin "One Step Simplification" (formula "9"))
(rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "1"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
(builtin "One Step Simplification" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "2"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
(builtin "One Step Simplification" (formula "1"))
(rule "lenNonNegative" (formula "19") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19"))
(rule "lenNonNegative" (formula "22") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "22"))
(rule "lenNonNegative" (formula "25") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "25"))
(rule "lenNonNegative" (formula "32") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "32"))
(builtin "Loop Invariant" (formula "52") (newnames "heapBeforeLoop,iBeforeLoop,voterBeforeLoop,i_0,voter_0,anon_heap_loop,o,f,variant,b"))
(branch "Invariant Initially Valid"
   (rule "andRight" (formula "52"))
   (branch "Case 1"
      (rule "andRight" (formula "52"))
      (branch "Case 1"
         (rule "andRight" (formula "52"))
         (branch "Case 1"
            (rule "andRight" (formula "52"))
            (branch "Case 1"
               (rule "andRight" (formula "52"))
               (branch "Case 1"
                  (rule "andRight" (formula "52"))
                  (branch "Case 1"
                     (rule "andRight" (formula "52"))
                     (branch "Case 1"
                        (rule "andRight" (formula "52"))
                        (branch "Case 1"
                           (rule "andRight" (formula "52"))
                           (branch "Case 1"
                              (rule "andRight" (formula "52"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "52"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "52"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "52"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "52"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "52"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "52"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "52"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "52"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "52"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "52"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "52"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "52"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "52"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "52"))
                                                                        (branch "Case 1"
                                                                           (rule "andRight" (formula "52"))
                                                                           (branch "Case 1"
                                                                              (rule "andRight" (formula "52"))
                                                                              (branch "Case 1"
                                                                                 (rule "andRight" (formula "52"))
                                                                                 (branch "Case 1"
                                                                                    (rule "andRight" (formula "52"))
                                                                                    (branch "Case 1"
                                                                                       (rule "andRight" (formula "52"))
                                                                                       (branch "Case 1"
                                                                                          (rule "andRight" (formula "52"))
                                                                                          (branch "Case 1"
                                                                                             (rule "andRight" (formula "52"))
                                                                                             (branch "Case 1"
                                                                                                (rule "andRight" (formula "52"))
                                                                                                (branch "Case 1"
                                                                                                   (rule "andRight" (formula "52"))
                                                                                                   (branch "Case 1"
                                                                                                      (rule "andRight" (formula "52"))
                                                                                                      (branch "Case 1"
                                                                                                         (rule "andRight" (formula "52"))
                                                                                                         (branch "Case 1"
                                                                                                            (rule "andRight" (formula "52"))
                                                                                                            (branch "Case 1"
                                                                                                               (rule "andRight" (formula "52"))
                                                                                                               (branch "Case 1"
                                                                                                                  (rule "andRight" (formula "52"))
                                                                                                                  (branch "Case 1"
                                                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                                                     (rule "leq_literals" (formula "52"))
                                                                                                                     (rule "closeTrue" (formula "52"))
                                                                                                                  )
                                                                                                                  (branch "Case 2"
                                                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                                                     (rule "inEqSimp_leqRight" (formula "52"))
                                                                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                                                                                                     (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "11"))
                                                                                                                     (builtin "One Step Simplification" (formula "37"))
                                                                                                                     (rule "eqSymm" (formula "37") (term "1"))
                                                                                                                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                                                                                     (rule "qeq_literals" (formula "20"))
                                                                                                                     (rule "true_left" (formula "20"))
                                                                                                                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                                                                                     (rule "qeq_literals" (formula "25"))
                                                                                                                     (rule "true_left" (formula "25"))
                                                                                                                     (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                                                     (rule "true_left" (formula "20"))
                                                                                                                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "33"))
                                                                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                                                                     (rule "qeq_literals" (formula "30"))
                                                                                                                     (rule "true_left" (formula "30"))
                                                                                                                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                                                                     (rule "true_left" (formula "30"))
                                                                                                                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                                                     (rule "true_left" (formula "24"))
                                                                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                                                                                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                                                     (rule "true_left" (formula "22"))
                                                                                                                     (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                                                     (rule "qeq_literals" (formula "21"))
                                                                                                                     (rule "true_left" (formula "21"))
                                                                                                                     (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                                                     (rule "castDel" (formula "27") (term "0"))
                                                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                                                     (rule "true_left" (formula "27"))
                                                                                                                     (rule "applyEq" (formula "24") (term "1") (ifseqformula "16"))
                                                                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                                     (rule "inEqSimp_contradEq3" (formula "28") (term "1") (ifseqformula "1"))
                                                                                                                     (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                                                                                     (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                                                                                     (rule "qeq_literals" (formula "28") (term "0,1"))
                                                                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                                                                                     (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                                                     (rule "closeFalse" (formula "1"))
                                                                                                                  )
                                                                                                               )
                                                                                                               (branch "Case 2"
                                                                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                                                                  (rule "leq_literals" (formula "52"))
                                                                                                                  (rule "closeTrue" (formula "52"))
                                                                                                               )
                                                                                                            )
                                                                                                            (branch "Case 2"
                                                                                                               (rule "orRight" (formula "52"))
                                                                                                               (builtin "One Step Simplification" (formula "53"))
                                                                                                               (builtin "One Step Simplification" (formula "52"))
                                                                                                               (rule "inEqSimp_leqRight" (formula "53"))
                                                                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                               (rule "inEqSimp_ltRight" (formula "53"))
                                                                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                                                                               (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "37"))
                                                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                                                               (rule "qeq_literals" (formula "34"))
                                                                                                               (rule "true_left" (formula "34"))
                                                                                                               (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                                               (builtin "One Step Simplification" (formula "22"))
                                                                                                               (rule "true_left" (formula "22"))
                                                                                                               (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                                                                               (rule "qeq_literals" (formula "26"))
                                                                                                               (rule "true_left" (formula "26"))
                                                                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                                                                               (builtin "One Step Simplification" (formula "23"))
                                                                                                               (rule "qeq_literals" (formula "23"))
                                                                                                               (rule "true_left" (formula "23"))
                                                                                                               (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                                                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                                                               (rule "true_left" (formula "31"))
                                                                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                                                               (builtin "One Step Simplification" (formula "23"))
                                                                                                               (rule "true_left" (formula "23"))
                                                                                                               (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                                                               (builtin "One Step Simplification" (formula "21"))
                                                                                                               (rule "qeq_literals" (formula "21"))
                                                                                                               (rule "true_left" (formula "21"))
                                                                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                                                                               (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "12"))
                                                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                                                               (rule "eqSymm" (formula "31") (term "1"))
                                                                                                               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                                                               (builtin "One Step Simplification" (formula "23"))
                                                                                                               (rule "true_left" (formula "23"))
                                                                                                               (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                                                               (rule "castDel" (formula "28") (term "0"))
                                                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                                                               (rule "true_left" (formula "28"))
                                                                                                               (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
                                                                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                                               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                                                               (rule "closeFalse" (formula "1"))
                                                                                                            )
                                                                                                         )
                                                                                                         (branch "Case 2"
                                                                                                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "7")))
                                                                                                            (rule "closeTrue" (formula "52"))
                                                                                                         )
                                                                                                      )
                                                                                                      (branch "Case 2"
                                                                                                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "8")))
                                                                                                         (rule "closeTrue" (formula "52"))
                                                                                                      )
                                                                                                   )
                                                                                                   (branch "Case 2"
                                                                                                      (rule "andRight" (formula "52"))
                                                                                                      (branch "Case 1"
                                                                                                         (rule "notRight" (formula "52"))
                                                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                                                                         (rule "closeFalse" (formula "1"))
                                                                                                      )
                                                                                                      (branch "Case 2"
                                                                                                         (builtin "One Step Simplification" (formula "52"))
                                                                                                         (rule "allRight" (formula "52") (inst "sk=i_1"))
                                                                                                         (rule "impRight" (formula "52"))
                                                                                                         (rule "notRight" (formula "53"))
                                                                                                         (rule "andLeft" (formula "2"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                                                         (rule "true_left" (formula "36"))
                                                                                                         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                                                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                                                         (rule "castDel" (formula "36") (term "0"))
                                                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                                                         (rule "true_left" (formula "36"))
                                                                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                                                                         (rule "qeq_literals" (formula "22"))
                                                                                                         (rule "true_left" (formula "22"))
                                                                                                         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                                                         (rule "true_left" (formula "25"))
                                                                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                                                                         (rule "qeq_literals" (formula "26"))
                                                                                                         (rule "true_left" (formula "26"))
                                                                                                         (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                                                         (rule "qeq_literals" (formula "32"))
                                                                                                         (rule "true_left" (formula "32"))
                                                                                                         (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                                                                                         (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "13"))
                                                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                                                         (rule "eqSymm" (formula "33") (term "1"))
                                                                                                         (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                                                                                                         (builtin "One Step Simplification" (formula "26"))
                                                                                                         (rule "true_left" (formula "26"))
                                                                                                         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                                                         (rule "qeq_literals" (formula "24"))
                                                                                                         (rule "true_left" (formula "24"))
                                                                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                                                                                                         (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                                                         (rule "true_left" (formula "22"))
                                                                                                         (rule "applyEq" (formula "26") (term "1") (ifseqformula "18"))
                                                                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                                         (rule "commute_or" (formula "30"))
                                                                                                         (rule "inEqSimp_or_weaken1" (formula "30"))
                                                                                                         (rule "add_zero_right" (formula "30") (term "1,0"))
                                                                                                         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "13")))
                                                                                                         (rule "true_left" (formula "30"))
                                                                                                         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "19") (term "0,0,0"))
                                                                                                         (rule "disjointDefinition" (formula "19") (term "1,0,0,0"))
                                                                                                         (rule "commute_or" (formula "19") (term "0,0"))
                                                                                                         (rule "commute_or_2" (formula "19") (term "0"))
                                                                                                         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "10"))
                                                                                                         (rule "andLeft" (formula "10"))
                                                                                                         (rule "andLeft" (formula "10"))
                                                                                                         (rule "notLeft" (formula "12"))
                                                                                                         (rule "notLeft" (formula "11"))
                                                                                                         (rule "andLeft" (formula "10"))
                                                                                                         (rule "notLeft" (formula "11"))
                                                                                                         (rule "nonNull" (formula "10") (inst "i=i_1"))
                                                                                                         (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
                                                                                                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")))
                                                                                                         (rule "greater_literals" (formula "10") (term "0"))
                                                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                                         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                                                         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "45"))
                                                                                                         (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                                                                         (rule "nnf_imp2or" (formula "10") (term "0"))
                                                                                                         (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                                                                         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                                                                                         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                                                                                         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                                                                         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                                                                                         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                                                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                                                                         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                                                                         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                                                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                                                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                                                                                         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "16"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "17"))
                                                                                                         (rule "notLeft" (formula "16"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "17"))
                                                                                                         (rule "notLeft" (formula "16"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "17"))
                                                                                                         (rule "notLeft" (formula "15"))
                                                                                                         (rule "notLeft" (formula "15"))
                                                                                                         (rule "andLeft" (formula "15"))
                                                                                                         (rule "eqSymm" (formula "22"))
                                                                                                         (rule "eqSymm" (formula "21"))
                                                                                                         (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                                                         (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                                                         (rule "disjointDefinition" (formula "20"))
                                                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                                                         (rule "notLeft" (formula "20"))
                                                                                                         (rule "eqSymm" (formula "45"))
                                                                                                         (rule "disjointDefinition" (formula "19"))
                                                                                                         (builtin "One Step Simplification" (formula "19"))
                                                                                                         (rule "notLeft" (formula "19"))
                                                                                                         (rule "eqSymm" (formula "44"))
                                                                                                         (rule "disjointDefinition" (formula "18"))
                                                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                                                         (rule "notLeft" (formula "18"))
                                                                                                         (rule "eqSymm" (formula "43"))
                                                                                                         (rule "disjointDefinition" (formula "17"))
                                                                                                         (rule "disjointDefinition" (formula "15"))
                                                                                                         (rule "disjointDefinition" (formula "16"))
                                                                                                         (rule "sortsDisjointModuloNull" (formula "45"))
                                                                                                         (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "47"))
                                                                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                                                                                         (rule "false_right" (formula "45"))
                                                                                                         (rule "sortsDisjointModuloNull" (formula "44"))
                                                                                                         (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
                                                                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")))
                                                                                                         (rule "false_right" (formula "44"))
                                                                                                         (rule "sortsDisjointModuloNull" (formula "43"))
                                                                                                         (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "55"))
                                                                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                                                                                         (rule "false_right" (formula "43"))
                                                                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "33"))
                                                                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "31"))
                                                                                                         (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
                                                                                                         (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
                                                                                                         (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                                                         (rule "distr_forallAnd" (formula "24"))
                                                                                                         (rule "andLeft" (formula "24"))
                                                                                                         (rule "commute_or" (formula "25") (term "0"))
                                                                                                         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "21") (inst "r=r") (inst "i=i_1"))
                                                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                                                         (rule "andLeft" (formula "21"))
                                                                                                         (rule "andLeft" (formula "21"))
                                                                                                         (rule "exLeft" (formula "21") (inst "sk=i_1_0"))
                                                                                                         (rule "andLeft" (formula "21"))
                                                                                                         (rule "andLeft" (formula "21"))
                                                                                                         (rule "inEqSimp_ltToLeq" (formula "22"))
                                                                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                         (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                                                         (rule "disjointDefinition" (formula "25"))
                                                                                                         (rule "castedGetAny" (formula "23") (term "0"))
                                                                                                         (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "39"))
                                                                                                         (rule "getOfSeqSingleton" (formula "23") (term "0"))
                                                                                                         (rule "castDel" (formula "23") (term "1,0"))
                                                                                                         (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "39"))
                                                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                                                         (rule "mul_literals" (formula "22") (term "1,0"))
                                                                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                         (rule "add_literals" (formula "22") (term "0,0"))
                                                                                                         (rule "add_zero_left" (formula "22") (term "0"))
                                                                                                         (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "22"))
                                                                                                         (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21"))
                                                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                                                         (rule "eqSymm" (formula "24"))
                                                                                                         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                                                                                         (rule "qeq_literals" (formula "22"))
                                                                                                         (rule "true_left" (formula "22"))
                                                                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                                                                         (rule "leq_literals" (formula "22"))
                                                                                                         (rule "true_left" (formula "22"))
                                                                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "22"))
                                                                                                         (rule "nnf_imp2or" (formula "23") (term "0"))
                                                                                                         (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                                                                         (builtin "One Step Simplification" (formula "23"))
                                                                                                         (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                                                                                         (rule "nnf_notOr" (formula "23") (term "1,0,0,0"))
                                                                                                         (rule "cnf_rightDist" (formula "27") (term "0"))
                                                                                                         (rule "distr_forallAnd" (formula "27"))
                                                                                                         (rule "andLeft" (formula "27"))
                                                                                                         (rule "commuteIntersection" (formula "17") (term "0"))
                                                                                                         (rule "commute_or_2" (formula "23") (term "0,0"))
                                                                                                         (rule "commute_or_2" (formula "23") (term "0"))
                                                                                                         (rule "commuteIntersection" (formula "15") (term "0"))
                                                                                                         (rule "commuteIntersection" (formula "16") (term "0"))
                                                                                                         (rule "shift_paren_or" (formula "28") (term "0"))
                                                                                                         (rule "allLeft" (formula "11") (inst "t=i_1"))
                                                                                                         (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "1"))
                                                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                                                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                                                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                                                                         (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                                                                         (rule "leq_literals" (formula "11") (term "0,1"))
                                                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "11"))
                                                                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                                                         (rule "closeFalse" (formula "2"))
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "12")))
                                                                                                   (rule "closeTrue" (formula "52"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Case 2"
                                                                                                (rule "andRight" (formula "52"))
                                                                                                (branch "Case 1"
                                                                                                   (rule "notRight" (formula "52"))
                                                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "13")))
                                                                                                   (rule "closeTrue" (formula "52"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch "Case 2"
                                                                                             (rule "andRight" (formula "52"))
                                                                                             (branch "Case 1"
                                                                                                (rule "notRight" (formula "52"))
                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                                                (rule "closeFalse" (formula "1"))
                                                                                             )
                                                                                             (branch "Case 2"
                                                                                                (builtin "One Step Simplification" (formula "52"))
                                                                                                (rule "eqSymm" (formula "52"))
                                                                                                (rule "close" (formula "52") (ifseqformula "15"))
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (branch "Case 2"
                                                                                          (builtin "One Step Simplification" (formula "52"))
                                                                                          (rule "closeTrue" (formula "52"))
                                                                                       )
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (builtin "One Step Simplification" (formula "52"))
                                                                                       (rule "closeTrue" (formula "52"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "allRight" (formula "52") (inst "sk=k_0"))
                                                                                    (rule "impRight" (formula "52"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                                    (rule "qeq_literals" (formula "34"))
                                                                                    (rule "true_left" (formula "34"))
                                                                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "36"))
                                                                                    (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "true_left" (formula "34"))
                                                                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                                    (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "true_left" (formula "25"))
                                                                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                                                    (rule "qeq_literals" (formula "25"))
                                                                                    (rule "true_left" (formula "25"))
                                                                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                                    (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "true_left" (formula "25"))
                                                                                    (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                                                    (builtin "One Step Simplification" (formula "30"))
                                                                                    (rule "castDel" (formula "30") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "30"))
                                                                                    (rule "true_left" (formula "30"))
                                                                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                                    (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "qeq_literals" (formula "21"))
                                                                                    (rule "true_left" (formula "21"))
                                                                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                                                    (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "12"))
                                                                                    (builtin "One Step Simplification" (formula "30"))
                                                                                    (rule "eqSymm" (formula "30") (term "1"))
                                                                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "qeq_literals" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "commute_or" (formula "29"))
                                                                                    (rule "inEqSimp_or_weaken1" (formula "29"))
                                                                                    (rule "add_zero_right" (formula "29") (term "1,0"))
                                                                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "12")))
                                                                                    (rule "true_left" (formula "29"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "16"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "notLeft" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "16"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "15"))
                                                                                    (rule "notLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "eqSymm" (formula "22"))
                                                                                    (rule "eqSymm" (formula "21"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                                    (rule "disjointDefinition" (formula "20"))
                                                                                    (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "notLeft" (formula "20"))
                                                                                    (rule "eqSymm" (formula "45"))
                                                                                    (rule "disjointDefinition" (formula "19"))
                                                                                    (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "notLeft" (formula "19"))
                                                                                    (rule "eqSymm" (formula "44"))
                                                                                    (rule "disjointDefinition" (formula "18"))
                                                                                    (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "eqSymm" (formula "43"))
                                                                                    (rule "disjointDefinition" (formula "17"))
                                                                                    (rule "disjointDefinition" (formula "16"))
                                                                                    (rule "disjointDefinition" (formula "15"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "45"))
                                                                                    (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "46"))
                                                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                                                                                    (rule "false_right" (formula "45"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "44"))
                                                                                    (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
                                                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
                                                                                    (rule "false_right" (formula "44"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "43"))
                                                                                    (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "54"))
                                                                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                                                                    (rule "false_right" (formula "43"))
                                                                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
                                                                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "24") (term "0,0,0"))
                                                                                    (rule "disjointDefinition" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "9"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "notLeft" (formula "11"))
                                                                                    (rule "notLeft" (formula "10"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "notLeft" (formula "10"))
                                                                                    (rule "nonNull" (formula "9") (inst "i=i_1"))
                                                                                    (rule "greater_literals" (formula "9") (term "0,1"))
                                                                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "54")))
                                                                                    (rule "sub_literals" (formula "9") (term "2,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
                                                                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "9") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "54"))
                                                                                    (rule "disjointDefinition" (formula "54") (term "1"))
                                                                                    (rule "commute_or" (formula "23") (term "0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "20") (inst "r=r") (inst "i=i_1"))
                                                                                    (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "exLeft" (formula "20") (inst "sk=i_1_1"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "20"))
                                                                                    (rule "disjointDefinition" (formula "24"))
                                                                                    (rule "castedGetAny" (formula "22") (term "0"))
                                                                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "37"))
                                                                                    (rule "getOfSeqSingleton" (formula "22") (term "0"))
                                                                                    (rule "castDel" (formula "22") (term "1,0"))
                                                                                    (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "37"))
                                                                                    (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "mul_literals" (formula "21") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                                    (rule "add_literals" (formula "21") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "21") (term "0"))
                                                                                    (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "21"))
                                                                                    (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "20"))
                                                                                    (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "20"))
                                                                                    (rule "leq_literals" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                                                                    (rule "qeq_literals" (formula "21"))
                                                                                    (rule "true_left" (formula "21"))
                                                                                    (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "21"))
                                                                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                                                    (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "commute_or_2" (formula "26") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "16") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "15") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "14") (term "0"))
                                                                                    (rule "commute_and" (formula "57") (term "0"))
                                                                                    (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                                    (rule "commute_or_2" (formula "22") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "57") (term "0,1"))
                                                                                    (rule "commute_or" (formula "22") (term "0,0,0"))
                                                                                    (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                                    (rule "cnf_rightDist" (formula "26") (term "0"))
                                                                                    (rule "distr_forallAnd" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "commute_or" (formula "27") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "23") (term "0"))
                                                                                    (rule "cnf_rightDist" (formula "22") (term "0"))
                                                                                    (rule "distr_forallAnd" (formula "22"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "shift_paren_or" (formula "22") (term "0"))
                                                                                    (rule "commute_or" (formula "22") (term "0,0"))
                                                                                    (rule "cnf_rightDist" (formula "26") (term "0"))
                                                                                    (rule "distr_forallAnd" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "shift_paren_or" (formula "27") (term "0"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "59") (term "0,0") (inst "s=s_1") (inst "i=i_1"))
                                                                                    (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "59") (term "0,1,0,0,0,0"))
                                                                                    (rule "disjointDefinition" (formula "59") (term "1,0,0"))
                                                                                    (rule "castedGetAny" (formula "59") (term "0,1,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "59") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "59") (term "0,1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,1,1,0,0,0,0"))
                                                                                    (rule "lenOfSeqDefEQ" (formula "59") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_2" (formula "59") (term "1,1,1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "59") (term "1,1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "59") (term "0,1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "59") (term "0,1,1,1,0,0,0,0,0,0,0") (ifseqformula "11"))
                                                                                    (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "getOfSeqDefEQ" (formula "59") (term "0,1,0,0,0,0,0,0") (ifseqformula "39"))
                                                                                    (rule "castDel" (formula "59") (term "1,0,1,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "59") (term "1,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "59") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_2" (formula "59") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "59") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "59") (term "0,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "59") (term "0,0,1,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "nnf_notAnd" (formula "59") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "nnf_notOr" (formula "59") (term "1,0,0,0,1,0,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "27") (term "0,0,0") (inst "s=s_1") (inst "i=i_1"))
                                                                                    (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "eqSymm" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "disjointDefinition" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "castedGetAny" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "lenOfSeqDefEQ" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "27") (term "0,1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
                                                                                    (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "getOfSeqDefEQ" (formula "27") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                                    (rule "castDel" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "27") (term "0,1,0,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                                                                    (rule "nnf_notOr" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
                                                                                    (rule "commute_or" (formula "27") (term "0,0"))
                                                                                    (rule "commute_or_2" (formula "27") (term "0"))
                                                                                    (rule "commuteIntersection" (formula "59") (term "0,1,0,0"))
                                                                                    (rule "intersectWithSingleton" (formula "59") (term "0,1,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                                                    (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                                                    (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "true_left" (formula "17"))
                                                                                    (rule "commute_or_2" (formula "27") (term "0,0,1,0,1,0"))
                                                                                    (rule "commute_or_2" (formula "27") (term "0,1,0,1,0"))
                                                                                    (rule "allLeft" (formula "36") (inst "t=k_0"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "36"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "36") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "36"))
                                                                                    (rule "notLeft" (formula "36"))
                                                                                    (rule "allLeft" (formula "10") (inst "t=k_0"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "notLeft" (formula "10"))
                                                                                    (rule "allLeft" (formula "43") (inst "t=k_0"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "43") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "allLeft" (formula "29") (inst "t=k_0"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "29") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "notLeft" (formula "29"))
                                                                                    (rule "allLeft" (formula "45") (inst "t=k_0"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "45") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "45") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "45"))
                                                                                    (rule "times_zero_1" (formula "43") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "43") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                                    (rule "mul_literals" (formula "43") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "43"))
                                                                                    (rule "leq_literals" (formula "24") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "true_left" (formula "24"))
                                                                                    (rule "commute_or" (formula "26") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "ex_pull_out0" (formula "26") (term "0,0,1,0"))
                                                                                    (rule "commute_or_2" (formula "26") (term "0,0,1,0,1,0"))
                                                                                    (rule "commute_and_2" (formula "26") (term "0,0,0,1,0"))
                                                                                    (rule "cnf_rightDist" (formula "26") (term "0,1,0,1,0"))
                                                                                    (rule "commute_or_2" (formula "26") (term "0,0,1,0,1,0"))
                                                                                    (rule "applyEq_or_gen1" (formula "26") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "26") (term "1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "shift_paren_or" (formula "26") (term "1,0,1,0,1,0"))
                                                                                    (rule "commute_or" (formula "26") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "commute_or" (formula "26") (term "0,0,0,0,1,0,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "cut_direct" (formula "64") (term "0,1,0,0,0,0"))
                                                                                    (branch "CUT: self.voters[k_0].sender.id ≥ 0 TRUE"
                                                                                       (builtin "One Step Simplification" (formula "65"))
                                                                                       (rule "shift_paren_and" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "applyEq_and_int3" (formula "27") (term "0,0,0,1,0"))
                                                                                       (rule "commute_and_2" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "applyEq_and_int1" (formula "27") (term "0,0,0,1,0"))
                                                                                       (rule "commute_and_2" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "ex_pull_out0" (formula "27") (term "0,1,0"))
                                                                                       (rule "ifthenelse_to_or_right" (formula "27") (term "1,0,0,0,1,0"))
                                                                                       (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "commute_or" (formula "27") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "cnf_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "commute_or" (formula "27") (term "0,1,1,0,0,0,1,0"))
                                                                                       (rule "allLeft" (formula "30") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "30"))
                                                                                       (rule "allLeft" (formula "38") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "38"))
                                                                                       (rule "shift_paren_and" (formula "27") (term "1,0,0,0,1,0"))
                                                                                       (rule "shift_paren_and" (formula "27") (term "0,0,0,1,0"))
                                                                                       (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                                                       (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (rule "notLeft" (formula "26"))
                                                                                       (rule "replace_known_right" (formula "68") (term "0,1,0") (ifseqformula "50"))
                                                                                       (builtin "One Step Simplification" (formula "68"))
                                                                                       (rule "allLeft" (formula "28") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "3"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                                                       (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                                                       (builtin "One Step Simplification" (formula "28"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "28") (term "0,0"))
                                                                                       (builtin "One Step Simplification" (formula "28"))
                                                                                       (rule "commuteIntersection" (formula "28") (term "0"))
                                                                                       (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "28"))
                                                                                       (builtin "One Step Simplification" (formula "69"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,0,0,1,0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "58"))
                                                                                       (builtin "One Step Simplification" (formula "38"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,1,0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "58"))
                                                                                       (builtin "One Step Simplification" (formula "41"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "6"))
                                                                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                                                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "69"))
                                                                                       (builtin "One Step Simplification" (formula "20"))
                                                                                       (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "21"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0") (ifseqformula "7"))
                                                                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "62"))
                                                                                       (builtin "One Step Simplification" (formula "21"))
                                                                                       (rule "shift_paren_and" (formula "29") (term "0,0,0,0,1,0"))
                                                                                       (rule "cut_direct" (formula "33") (term "0"))
                                                                                       (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.correctResult.length ≤ k_0 TRUE"
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "true_left" (formula "34"))
                                                                                          (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "33"))
                                                                                          (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "true_left" (formula "42"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "33"))
                                                                                          (rule "mul_literals" (formula "49") (term "0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                                          (rule "mul_literals" (formula "49") (term "1"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "49"))
                                                                                          (rule "leq_literals" (formula "3") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (rule "true_left" (formula "3"))
                                                                                          (rule "all_pull_out1" (formula "28") (term "0,0,1,0"))
                                                                                          (rule "ex_pull_out0" (formula "28") (term "1,0"))
                                                                                          (rule "cut_direct" (formula "72") (term "1,0,0"))
                                                                                          (branch "CUT: self.voters[k_0].sender.id ≤ -1 + de.uni.trier.infsec.eVotingVerif.core.Setup.numberOfVoters TRUE"
                                                                                             (builtin "One Step Simplification" (formula "73"))
                                                                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                                             (rule "add_zero_left" (formula "3") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                                             (rule "mul_literals" (formula "3") (term "1"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                                                                             (rule "leq_literals" (formula "14") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "14"))
                                                                                             (rule "true_left" (formula "14"))
                                                                                             (rule "all_pull_out0" (formula "29") (term "0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "ex_pull_out3" (formula "29") (term "0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "all_pull_out3" (formula "30") (term "0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                                                                                             (rule "distr_forallAnd" (formula "30") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "30"))
                                                                                             (rule "distr_existsAnd1" (formula "30") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "30"))
                                                                                             (rule "andLeft" (formula "30"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0"))
                                                                                             (rule "commute_or" (formula "31") (term "0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "30") (term "1,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "cut_direct" (formula "75") (term "0,1"))
                                                                                             (branch "CUT: (self.voters[k_0].sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                                                                (builtin "One Step Simplification" (formula "76"))
                                                                                                (rule "false_right" (formula "76"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "74"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "50"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "73"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "19"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "65"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "64"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "28"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "66"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "33"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "59"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "49"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "75"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "51"))
                                                                                                (builtin "One Step Simplification" (formula "58"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "58"))
                                                                                                (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "76"))
                                                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                                                (rule "false_right" (formula "58"))
                                                                                                (rule "commute_and_2" (formula "31") (term "0,0,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "10"))
                                                                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "commute_and_2" (formula "32") (term "0,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "11"))
                                                                                                (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "60"))
                                                                                                (builtin "One Step Simplification" (formula "7"))
                                                                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "12"))
                                                                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "61"))
                                                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "8")))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "allLeft" (formula "33") (inst "t=k_0"))
                                                                                                (rule "exLeft" (formula "33") (inst "sk=i_1_7"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "andLeft" (formula "33"))
                                                                                                (rule "eqSymm" (formula "39") (term "1"))
                                                                                                (rule "eqSymm" (formula "38") (term "1"))
                                                                                                (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "33"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "true_left" (formula "38"))
                                                                                                (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "34"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "true_left" (formula "38"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "9"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                                                                (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "33"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "34"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "9"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                                                                (rule "leq_literals" (formula "37") (term "0,0"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "60"))
                                                                                                (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "9"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                                                (rule "leq_literals" (formula "33") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "33"))
                                                                                                (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "33"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "33"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "9"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "34"))
                                                                                                (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "33")))
                                                                                                (rule "true_left" (formula "35"))
                                                                                                (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0"))
                                                                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0"))
                                                                                                (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "34"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "true_left" (formula "35"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "34"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                                                                (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "33"))
                                                                                                (rule "qeq_literals" (formula "36") (term "0,0"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "36"))
                                                                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "35"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                                                (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "33"))
                                                                                                (rule "elementOfSingleton" (formula "62"))
                                                                                                (builtin "One Step Simplification" (formula "62"))
                                                                                                (rule "closeTrue" (formula "62"))
                                                                                             )
                                                                                             (branch "CUT: (self.voters[k_0].sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                                                                (builtin "One Step Simplification" (formula "76"))
                                                                                                (rule "andRight" (formula "76"))
                                                                                                (branch
                                                                                                   (rule "nnf_ex2all" (formula "76"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0,0,1,0"))
                                                                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0"))
                                                                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0"))
                                                                                                   (rule "commute_or" (formula "1") (term "1,1,0"))
                                                                                                   (rule "applyEq_or_int1" (formula "1") (term "0,1,0"))
                                                                                                   (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0,1,0") (ifseqformula "3"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "applyEq_or_int2" (formula "1") (term "0,1,0"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,1,0") (ifseqformula "6"))
                                                                                                   (rule "qeq_literals" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                                                                   (rule "distr_forallAnd" (formula "1"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "castDel" (formula "1") (term "0,0,0,0"))
                                                                                                   (rule "castDel" (formula "1") (term "0,1,0,0"))
                                                                                                   (rule "andLeft" (formula "1"))
                                                                                                   (rule "instanceof_static_type" (formula "1") (term "0,0,1"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "7"))
                                                                                                   (rule "qeq_literals" (formula "1") (term "0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                                                                   (rule "andLeft" (formula "1"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0"))
                                                                                                   (rule "leq_literals" (formula "1"))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "allRight" (formula "76") (inst "sk=s_1_1"))
                                                                                                   (rule "orRight" (formula "76"))
                                                                                                   (rule "orRight" (formula "76"))
                                                                                                   (rule "orRight" (formula "76"))
                                                                                                   (rule "notRight" (formula "76"))
                                                                                                   (rule "eqSymm" (formula "79"))
                                                                                                   (rule "eqSymm" (formula "1"))
                                                                                                   (rule "replace_known_right" (formula "77") (term "0,0") (ifseqformula "78"))
                                                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                                                   (rule "notRight" (formula "77"))
                                                                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                                                                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "4"))
                                                                                                   (rule "mul_literals" (formula "7") (term "0,0"))
                                                                                                   (rule "add_zero_left" (formula "7") (term "0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                                                                   (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                                                                                   (rule "commute_and_2" (formula "32") (term "0,0"))
                                                                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "11"))
                                                                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "12"))
                                                                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "allLeft" (formula "35") (inst "t=k_0"))
                                                                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0,0"))
                                                                                                   (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "4"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "56"))
                                                                                                   (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "10"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0,0"))
                                                                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0,0"))
                                                                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0,0"))
                                                                                                   (rule "leq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                                                   (rule "allLeft" (formula "35") (inst "t=s_1_1"))
                                                                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "82")) (ifInst ""  (formula "3")))
                                                                                                   (rule "eqSymm" (formula "35"))
                                                                                                   (rule "close" (formula "83") (ifseqformula "35"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch "CUT: self.voters[k_0].sender.id ≤ -1 + de.uni.trier.infsec.eVotingVerif.core.Setup.numberOfVoters FALSE"
                                                                                             (builtin "One Step Simplification" (formula "73"))
                                                                                             (rule "false_right" (formula "73"))
                                                                                             (rule "inEqSimp_leqRight" (formula "72"))
                                                                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                             (rule "all_pull_out0" (formula "29") (term "0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "29") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "ex_pull_out3" (formula "29") (term "0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "7"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "all_pull_out3" (formula "30") (term "0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                                                                                             (rule "distr_forallAnd" (formula "30") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "30"))
                                                                                             (rule "distr_existsAnd1" (formula "30") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "30"))
                                                                                             (rule "andLeft" (formula "30"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "31") (term "0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0"))
                                                                                             (rule "commute_or" (formula "31") (term "0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "1,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "0,1,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "30") (term "1,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "30") (term "0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_and_2" (formula "30") (term "0,0,0"))
                                                                                             (rule "commute_and_2" (formula "30") (term "0,0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "8"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "9"))
                                                                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "59"))
                                                                                             (builtin "One Step Simplification" (formula "5"))
                                                                                             (rule "allLeft" (formula "32") (inst "t=k_0"))
                                                                                             (rule "exLeft" (formula "32") (inst "sk=i_1_6"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "eqSymm" (formula "38") (term "1"))
                                                                                             (rule "eqSymm" (formula "37") (term "1"))
                                                                                             (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "32"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "true_left" (formula "37"))
                                                                                             (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "33"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "true_left" (formula "37"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "59"))
                                                                                             (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "59"))
                                                                                             (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "32"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "59"))
                                                                                             (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "33"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "35") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "34"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0") (ifseqformula "59"))
                                                                                             (rule "qeq_literals" (formula "37") (term "0,1,0,0"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                                                             (rule "leq_literals" (formula "36") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "32"))
                                                                                             (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "32"))
                                                                                             (builtin "One Step Simplification" (formula "34"))
                                                                                             (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "32"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "33"))
                                                                                             (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "33"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                                                                                             (rule "true_left" (formula "34"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0"))
                                                                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0"))
                                                                                             (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "33"))
                                                                                             (builtin "One Step Simplification" (formula "34"))
                                                                                             (rule "true_left" (formula "34"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                                                             (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "33"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                                                             (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                                             (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "32"))
                                                                                             (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "35"))
                                                                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "3"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "32"))
                                                                                             (rule "andLeft" (formula "3"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                                             (rule "add_literals" (formula "3") (term "0"))
                                                                                             (rule "leq_literals" (formula "3"))
                                                                                             (rule "closeFalse" (formula "3"))
                                                                                          )
                                                                                       )
                                                                                       (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.correctResult.length ≤ k_0 FALSE"
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "55"))
                                                                                          (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "inEqSimp_leqRight" (formula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                          (rule "all_pull_out1" (formula "30") (term "0,0,1,0"))
                                                                                          (rule "ex_pull_out0" (formula "30") (term "1,0"))
                                                                                          (rule "cut_direct" (formula "74") (term "1,0,0"))
                                                                                          (branch "CUT: self.voters[k_0].sender.id ≤ -1 + de.uni.trier.infsec.eVotingVerif.core.Setup.numberOfVoters TRUE"
                                                                                             (builtin "One Step Simplification" (formula "75"))
                                                                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                                                                             (rule "add_zero_left" (formula "4") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                             (rule "mul_literals" (formula "4") (term "1"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                                                                             (rule "leq_literals" (formula "16") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "16"))
                                                                                             (rule "true_left" (formula "16"))
                                                                                             (rule "all_pull_out0" (formula "31") (term "0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "ex_pull_out3" (formula "31") (term "0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "10"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "all_pull_out3" (formula "32") (term "0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                                                                                             (rule "distr_forallAnd" (formula "32") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "32"))
                                                                                             (rule "distr_existsAnd1" (formula "32") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0"))
                                                                                             (rule "commute_or" (formula "33") (term "0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "32") (term "1,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "cut_direct" (formula "77") (term "0,1"))
                                                                                             (branch "CUT: (self.voters[k_0].sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                                                                (builtin "One Step Simplification" (formula "78"))
                                                                                                (rule "false_right" (formula "78"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "61"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "76")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "53"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "75"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "21"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "67"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "22"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "66"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "68"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "35"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "61"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "63")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "52"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "77"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "61")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "54"))
                                                                                                (builtin "One Step Simplification" (formula "60"))
                                                                                                (rule "sortsDisjointModuloNull" (formula "60"))
                                                                                                (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "61"))
                                                                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "78")))
                                                                                                (rule "false_right" (formula "60"))
                                                                                                (rule "commute_and_2" (formula "33") (term "0,0,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "12"))
                                                                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "commute_and_2" (formula "34") (term "0,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "13"))
                                                                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "62"))
                                                                                                (builtin "One Step Simplification" (formula "8"))
                                                                                                (rule "onlyCreatedObjectsAreInLocSets" (formula "2") (ifseqformula "14"))
                                                                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "63"))
                                                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "allLeft" (formula "35") (inst "t=k_0"))
                                                                                                (rule "exLeft" (formula "35") (inst "sk=i_1_5"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "andLeft" (formula "35"))
                                                                                                (rule "eqSymm" (formula "41") (term "1"))
                                                                                                (rule "eqSymm" (formula "40") (term "1"))
                                                                                                (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "36"))
                                                                                                (builtin "One Step Simplification" (formula "41"))
                                                                                                (rule "true_left" (formula "41"))
                                                                                                (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "35"))
                                                                                                (builtin "One Step Simplification" (formula "40"))
                                                                                                (rule "true_left" (formula "40"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "40") (term "0,1,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "40"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "39"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "10"))
                                                                                                (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "11"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                                                                (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                                                                (builtin "One Step Simplification" (formula "40"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "11"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                                                (rule "leq_literals" (formula "36") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "replace_known_left" (formula "37") (term "1,0,0,0") (ifseqformula "36"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "replace_known_left" (formula "38") (term "1,0,0,0") (ifseqformula "36"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "11"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                                                (rule "leq_literals" (formula "35") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "35"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "35"))
                                                                                                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "35")))
                                                                                                (rule "true_left" (formula "37"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0"))
                                                                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "37") (term "1,1,0"))
                                                                                                (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "36"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "true_left" (formula "37"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "11"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                                                                (rule "leq_literals" (formula "37") (term "0,0"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "35"))
                                                                                                (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "36"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "0,0,0"))
                                                                                                (rule "leq_literals" (formula "38") (term "0,0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "38"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "38"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                                                (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "35"))
                                                                                                (rule "elementOfSingleton" (formula "64"))
                                                                                                (builtin "One Step Simplification" (formula "64"))
                                                                                                (rule "closeTrue" (formula "64"))
                                                                                             )
                                                                                             (branch "CUT: (self.voters[k_0].sender, id) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                                                                (builtin "One Step Simplification" (formula "78"))
                                                                                                (rule "andRight" (formula "78"))
                                                                                                (branch
                                                                                                   (rule "nnf_ex2all" (formula "78"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                                                                   (rule "nnf_notAnd" (formula "1") (term "0,0,1,0"))
                                                                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                                                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0"))
                                                                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0"))
                                                                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0"))
                                                                                                   (rule "commute_or" (formula "1") (term "1,1,0"))
                                                                                                   (rule "applyEq_or_int1" (formula "1") (term "0,1,0"))
                                                                                                   (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0,1,0") (ifseqformula "3"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,0"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,0"))
                                                                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "applyEq_or_int2" (formula "1") (term "0,1,0"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,1,0") (ifseqformula "7"))
                                                                                                   (rule "qeq_literals" (formula "1") (term "0,0,0,1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                                                                   (rule "distr_forallAnd" (formula "1"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "castDel" (formula "1") (term "0,0,0,0"))
                                                                                                   (rule "castDel" (formula "1") (term "0,1,0,0"))
                                                                                                   (rule "andLeft" (formula "1"))
                                                                                                   (rule "instanceof_static_type" (formula "1") (term "0,0,1"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "4"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                                                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "closeFalse" (formula "1"))
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "allRight" (formula "78") (inst "sk=s_1_0"))
                                                                                                   (rule "orRight" (formula "78"))
                                                                                                   (rule "orRight" (formula "78"))
                                                                                                   (rule "orRight" (formula "78"))
                                                                                                   (rule "notRight" (formula "78"))
                                                                                                   (rule "eqSymm" (formula "81"))
                                                                                                   (rule "eqSymm" (formula "1"))
                                                                                                   (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "80"))
                                                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                                                   (rule "notRight" (formula "79"))
                                                                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                                                                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                                                                   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                                                                   (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                                                   (rule "add_zero_left" (formula "8") (term "0"))
                                                                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                                                                   (rule "commute_and_2" (formula "34") (term "0,0,0"))
                                                                                                   (rule "commute_and_2" (formula "34") (term "0,0"))
                                                                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "13"))
                                                                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "14"))
                                                                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                                                   (rule "allLeft" (formula "37") (inst "t=k_0"))
                                                                                                   (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0,0,0"))
                                                                                                   (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "4"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "11"))
                                                                                                   (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "12"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0,0,0,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0,0,0,0"))
                                                                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,0,0,0"))
                                                                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0"))
                                                                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,0"))
                                                                                                   (rule "leq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                                                   (rule "allLeft" (formula "37") (inst "t=s_1_0"))
                                                                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "84")) (ifInst ""  (formula "3")))
                                                                                                   (rule "eqSymm" (formula "37"))
                                                                                                   (rule "close" (formula "85") (ifseqformula "37"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch "CUT: self.voters[k_0].sender.id ≤ -1 + de.uni.trier.infsec.eVotingVerif.core.Setup.numberOfVoters FALSE"
                                                                                             (builtin "One Step Simplification" (formula "75"))
                                                                                             (rule "false_right" (formula "75"))
                                                                                             (rule "inEqSimp_leqRight" (formula "74"))
                                                                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                             (rule "all_pull_out0" (formula "31") (term "0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,0,1,0"))
                                                                                             (rule "commute_and_2" (formula "31") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "ex_pull_out3" (formula "31") (term "0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "9"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "all_pull_out3" (formula "32") (term "0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                                                                                             (rule "distr_forallAnd" (formula "32") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "32"))
                                                                                             (rule "distr_existsAnd1" (formula "32") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "32"))
                                                                                             (rule "andLeft" (formula "32"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "33") (term "0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0"))
                                                                                             (rule "commute_or" (formula "33") (term "0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "1,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "0,1,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "32") (term "1,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                                                             (rule "cnf_rightDist" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or_2" (formula "32") (term "0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "shift_paren_or" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_or" (formula "32") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                             (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                                                                             (rule "commute_and_2" (formula "32") (term "0,0"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "10"))
                                                                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "11"))
                                                                                             (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "61"))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (rule "allLeft" (formula "34") (inst "t=k_0"))
                                                                                             (rule "exLeft" (formula "34") (inst "sk=i_1_4"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "andLeft" (formula "34"))
                                                                                             (rule "eqSymm" (formula "40") (term "1"))
                                                                                             (rule "eqSymm" (formula "39") (term "1"))
                                                                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "34"))
                                                                                             (builtin "One Step Simplification" (formula "39"))
                                                                                             (rule "true_left" (formula "39"))
                                                                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "35"))
                                                                                             (builtin "One Step Simplification" (formula "39"))
                                                                                             (rule "true_left" (formula "39"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                                                             (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                                                             (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                                                             (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "39"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                                                             (builtin "One Step Simplification" (formula "38"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "34"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "36") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                                                                             (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "39"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "35") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "35"))
                                                                                             (rule "replace_known_left" (formula "36") (term "1,0,0") (ifseqformula "35"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "replace_known_left" (formula "37") (term "1,0,0,0") (ifseqformula "35"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                                                                             (builtin "One Step Simplification" (formula "34"))
                                                                                             (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "34"))
                                                                                             (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                                                                                             (rule "true_left" (formula "36"))
                                                                                             (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "34"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0"))
                                                                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0"))
                                                                                             (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "35"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "true_left" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "9"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                                                             (rule "leq_literals" (formula "36") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "36"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "35"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                                                                             (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                                                                             (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                                                                             (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                                             (rule "leq_literals" (formula "37") (term "0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "34"))
                                                                                             (rule "qeq_literals" (formula "37") (term "0,0"))
                                                                                             (builtin "One Step Simplification" (formula "37"))
                                                                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "37"))
                                                                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "36"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "3"))
                                                                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "34"))
                                                                                             (rule "andLeft" (formula "3"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                                             (rule "add_literals" (formula "3") (term "0"))
                                                                                             (rule "leq_literals" (formula "3"))
                                                                                             (rule "closeFalse" (formula "3"))
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    (branch "CUT: self.voters[k_0].sender.id ≥ 0 FALSE"
                                                                                       (builtin "One Step Simplification" (formula "65"))
                                                                                       (rule "false_right" (formula "65"))
                                                                                       (rule "inEqSimp_geqRight" (formula "64"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                       (rule "mul_literals" (formula "1") (term "1"))
                                                                                       (rule "shift_paren_and" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "applyEq_and_int3" (formula "27") (term "0,0,0,1,0"))
                                                                                       (rule "commute_and_2" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "applyEq_and_int1" (formula "27") (term "0,0,0,1,0"))
                                                                                       (rule "commute_and_2" (formula "27") (term "0,0,0,0,1,0"))
                                                                                       (rule "ex_pull_out0" (formula "27") (term "0,1,0"))
                                                                                       (rule "allLeft" (formula "30") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "30"))
                                                                                       (rule "allLeft" (formula "38") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "38"))
                                                                                       (rule "ifthenelse_to_or_right" (formula "27") (term "1,0,0,0,1,0"))
                                                                                       (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0,1,0"))
                                                                                       (rule "commute_or" (formula "27") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "cnf_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                                                                                       (rule "commute_or" (formula "27") (term "0,1,1,0,0,0,1,0"))
                                                                                       (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (rule "notLeft" (formula "26"))
                                                                                       (rule "allLeft" (formula "28") (inst "t=k_0"))
                                                                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "2"))
                                                                                       (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                                                       (builtin "One Step Simplification" (formula "28"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                                                       (rule "leq_literals" (formula "28") (term "0,0"))
                                                                                       (builtin "One Step Simplification" (formula "28"))
                                                                                       (rule "commuteIntersection" (formula "28") (term "0"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,0,0,1,0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "58"))
                                                                                       (builtin "One Step Simplification" (formula "38"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,0,1,0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "58"))
                                                                                       (builtin "One Step Simplification" (formula "41"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "6"))
                                                                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "7"))
                                                                                       (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "22"))
                                                                                       (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "6"))
                                                                                       (builtin "One Step Simplification" (formula "21"))
                                                                                       (rule "true_left" (formula "21"))
                                                                                       (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "7"))
                                                                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "shift_paren_and" (formula "29") (term "1,0,0,0,1,0"))
                                                                                       (rule "cut_direct" (formula "33") (term "0"))
                                                                                       (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.correctResult.length ≤ k_0 TRUE"
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "true_left" (formula "34"))
                                                                                          (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "33"))
                                                                                          (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "true_left" (formula "42"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "33"))
                                                                                          (rule "mul_literals" (formula "49") (term "0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                                          (rule "mul_literals" (formula "49") (term "1"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "49"))
                                                                                          (rule "leq_literals" (formula "4") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "4"))
                                                                                          (rule "true_left" (formula "4"))
                                                                                          (rule "shift_paren_and" (formula "28") (term "0,0,0,1,0"))
                                                                                          (rule "shift_paren_and" (formula "28") (term "0,0,0,0,1,0"))
                                                                                          (rule "all_pull_out1" (formula "28") (term "0,0,1,0"))
                                                                                          (rule "ex_pull_out0" (formula "28") (term "1,0"))
                                                                                          (rule "all_pull_out0" (formula "28") (term "0,1,0"))
                                                                                          (rule "commute_and_2" (formula "28") (term "0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "28") (term "0,0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "28") (term "0,0,0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "ex_pull_out3" (formula "28") (term "0"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "7"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "all_pull_out3" (formula "29") (term "0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                                                                                          (rule "distr_forallAnd" (formula "29") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "distr_existsAnd1" (formula "29") (term "0"))
                                                                                          (rule "distr_forallAnd" (formula "29"))
                                                                                          (rule "andLeft" (formula "29"))
                                                                                          (rule "commute_or_2" (formula "30") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "30") (term "0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "29") (term "1,0,0"))
                                                                                          (rule "commute_or" (formula "30") (term "0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "0,1,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "29") (term "1,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "0,1,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "29") (term "1,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "0,1,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or" (formula "29") (term "1,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "29") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "29") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or" (formula "29") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_and_2" (formula "29") (term "0,0,0"))
                                                                                          (rule "commute_and_2" (formula "29") (term "0,0"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "8"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "9"))
                                                                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "58"))
                                                                                          (builtin "One Step Simplification" (formula "5"))
                                                                                          (rule "allLeft" (formula "31") (inst "t=k_0"))
                                                                                          (rule "exLeft" (formula "31") (inst "sk=i_1_3"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "eqSymm" (formula "37") (term "1"))
                                                                                          (rule "eqSymm" (formula "36") (term "1"))
                                                                                          (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "31"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "true_left" (formula "36"))
                                                                                          (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "true_left" (formula "36"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "36") (term "0,1,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "7"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "34") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "7"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "31") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "31"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "31"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "58"))
                                                                                          (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "32") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")))
                                                                                          (rule "true_left" (formula "33"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "33"))
                                                                                          (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                                                                          (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "33") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "32"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "31"))
                                                                                          (rule "qeq_literals" (formula "34") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "34"))
                                                                                          (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "6"))
                                                                                          (rule "qeq_literals" (formula "31") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (rule "closeFalse" (formula "31"))
                                                                                       )
                                                                                       (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.correctResult.length ≤ k_0 FALSE"
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "55"))
                                                                                          (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "inEqSimp_leqRight" (formula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                          (rule "shift_paren_and" (formula "30") (term "0,0,0,1,0"))
                                                                                          (rule "shift_paren_and" (formula "30") (term "0,0,0,0,1,0"))
                                                                                          (rule "all_pull_out1" (formula "30") (term "0,0,1,0"))
                                                                                          (rule "ex_pull_out0" (formula "30") (term "1,0"))
                                                                                          (rule "all_pull_out0" (formula "30") (term "0,1,0"))
                                                                                          (rule "commute_and_2" (formula "30") (term "0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "30") (term "0,0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "30") (term "0,0,0,0,1,0"))
                                                                                          (rule "commute_and_2" (formula "30") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "ex_pull_out3" (formula "30") (term "0"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "9"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "all_pull_out3" (formula "31") (term "0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
                                                                                          (rule "distr_forallAnd" (formula "31") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (rule "distr_existsAnd1" (formula "31") (term "0"))
                                                                                          (rule "distr_forallAnd" (formula "31"))
                                                                                          (rule "andLeft" (formula "31"))
                                                                                          (rule "commute_or_2" (formula "32") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "32") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "32") (term "0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "31") (term "1,0,0"))
                                                                                          (rule "commute_or" (formula "32") (term "0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "0,1,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0"))
                                                                                          (rule "commute_or_2" (formula "31") (term "1,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "0,1,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "31") (term "1,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "0,1,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0,0,0"))
                                                                                          (rule "commute_or" (formula "31") (term "1,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                                                                          (rule "cnf_rightDist" (formula "31") (term "0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or_2" (formula "31") (term "0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "shift_paren_or" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_or" (formula "31") (term "0,0,0,0,0,0,0,0,0,0"))
                                                                                          (rule "commute_and_2" (formula "31") (term "0,0,0"))
                                                                                          (rule "commute_and_2" (formula "31") (term "0,0"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0") (ifseqformula "10"))
                                                                                          (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "61"))
                                                                                          (builtin "One Step Simplification" (formula "54"))
                                                                                          (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "10"))
                                                                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "60"))
                                                                                          (builtin "One Step Simplification" (formula "5"))
                                                                                          (rule "allLeft" (formula "32") (inst "t=k_0"))
                                                                                          (rule "exLeft" (formula "32") (inst "sk=i_1_2"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "eqSymm" (formula "38") (term "1"))
                                                                                          (rule "eqSymm" (formula "37") (term "1"))
                                                                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "37"))
                                                                                          (rule "true_left" (formula "37"))
                                                                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "33"))
                                                                                          (builtin "One Step Simplification" (formula "37"))
                                                                                          (rule "true_left" (formula "37"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "33") (term "0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "7"))
                                                                                          (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "7"))
                                                                                          (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "34") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0") (ifseqformula "7"))
                                                                                          (rule "qeq_literals" (formula "37") (term "0,1,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "37"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "35") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "7"))
                                                                                          (rule "qeq_literals" (formula "36") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                                          (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                                          (rule "leq_literals" (formula "32") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "32"))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "7"))
                                                                                          (rule "qeq_literals" (formula "33") (term "0,1"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "33"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                                                                                          (rule "true_left" (formula "34"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "34"))
                                                                                          (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "8"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "33"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "35") (term "0,1,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "32"))
                                                                                          (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "35"))
                                                                                          (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "6"))
                                                                                          (rule "qeq_literals" (formula "32") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "closeFalse" (formula "32"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (builtin "One Step Simplification" (formula "52"))
                                                                                 (rule "allRight" (formula "52") (inst "sk=k_1"))
                                                                                 (rule "impRight" (formula "52"))
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                                                 (rule "qeq_literals" (formula "34"))
                                                                                 (rule "true_left" (formula "34"))
                                                                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                                                 (builtin "One Step Simplification" (formula "24"))
                                                                                 (rule "qeq_literals" (formula "24"))
                                                                                 (rule "true_left" (formula "24"))
                                                                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "true_left" (formula "33"))
                                                                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
                                                                                 (builtin "One Step Simplification" (formula "26"))
                                                                                 (rule "qeq_literals" (formula "26"))
                                                                                 (rule "true_left" (formula "26"))
                                                                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "castDel" (formula "32") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "32"))
                                                                                 (rule "true_left" (formula "32"))
                                                                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                                 (builtin "One Step Simplification" (formula "24"))
                                                                                 (rule "true_left" (formula "24"))
                                                                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                                 (builtin "One Step Simplification" (formula "25"))
                                                                                 (rule "true_left" (formula "25"))
                                                                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "true_left" (formula "22"))
                                                                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                                                 (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "12"))
                                                                                 (builtin "One Step Simplification" (formula "30"))
                                                                                 (rule "eqSymm" (formula "30") (term "1"))
                                                                                 (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                 (rule "qeq_literals" (formula "21"))
                                                                                 (rule "true_left" (formula "21"))
                                                                                 (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                 (rule "mul_literals" (formula "2") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                           )
                                                                           (branch "Case 2"
                                                                              (builtin "One Step Simplification" (formula "52"))
                                                                              (rule "allRight" (formula "52") (inst "sk=k_2"))
                                                                              (rule "impRight" (formula "52"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "notRight" (formula "54"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                              (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "38"))
                                                                              (builtin "One Step Simplification" (formula "37"))
                                                                              (rule "castDel" (formula "37") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "37"))
                                                                              (rule "true_left" (formula "37"))
                                                                              (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "31"))
                                                                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                                              (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "true_left" (formula "29"))
                                                                              (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                                              (builtin "One Step Simplification" (formula "35"))
                                                                              (rule "true_left" (formula "35"))
                                                                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                                                              (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "13"))
                                                                              (builtin "One Step Simplification" (formula "36"))
                                                                              (rule "eqSymm" (formula "36") (term "1"))
                                                                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "true_left" (formula "23"))
                                                                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "qeq_literals" (formula "22"))
                                                                              (rule "true_left" (formula "22"))
                                                                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "qeq_literals" (formula "23"))
                                                                              (rule "true_left" (formula "23"))
                                                                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                                              (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "qeq_literals" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "true_left" (formula "23"))
                                                                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                              (builtin "One Step Simplification" (formula "24"))
                                                                              (rule "qeq_literals" (formula "24"))
                                                                              (rule "true_left" (formula "24"))
                                                                              (rule "applyEq" (formula "26") (term "1") (ifseqformula "18"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                              (rule "commute_or" (formula "30"))
                                                                              (rule "inEqSimp_or_weaken1" (formula "30"))
                                                                              (rule "add_zero_right" (formula "30") (term "1,0"))
                                                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "13")))
                                                                              (rule "true_left" (formula "30"))
                                                                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "19") (term "0,0,0"))
                                                                              (rule "disjointDefinition" (formula "19") (term "1,0,0,0"))
                                                                              (rule "commute_or" (formula "19") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "19") (term "0"))
                                                                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "10"))
                                                                              (rule "andLeft" (formula "10"))
                                                                              (rule "andLeft" (formula "10"))
                                                                              (rule "notLeft" (formula "12"))
                                                                              (rule "andLeft" (formula "10"))
                                                                              (rule "notLeft" (formula "12"))
                                                                              (rule "notLeft" (formula "11"))
                                                                              (rule "nonNull" (formula "10") (inst "i=i_1"))
                                                                              (rule "greater_literals" (formula "10") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")))
                                                                              (rule "sub_literals" (formula "10") (term "2,1,0"))
                                                                              (builtin "One Step Simplification" (formula "10"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                              (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "45"))
                                                                              (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                                              (rule "nnf_imp2or" (formula "10") (term "0"))
                                                                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                                              (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                                                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                                                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "16"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "17"))
                                                                              (rule "notLeft" (formula "16"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "17"))
                                                                              (rule "notLeft" (formula "16"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "17"))
                                                                              (rule "notLeft" (formula "15"))
                                                                              (rule "notLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "eqSymm" (formula "22"))
                                                                              (rule "eqSymm" (formula "21"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                              (rule "disjointDefinition" (formula "20"))
                                                                              (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "notLeft" (formula "20"))
                                                                              (rule "eqSymm" (formula "45"))
                                                                              (rule "disjointDefinition" (formula "19"))
                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                              (rule "notLeft" (formula "19"))
                                                                              (rule "eqSymm" (formula "44"))
                                                                              (rule "disjointDefinition" (formula "18"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "notLeft" (formula "18"))
                                                                              (rule "eqSymm" (formula "43"))
                                                                              (rule "disjointDefinition" (formula "17"))
                                                                              (rule "disjointDefinition" (formula "15"))
                                                                              (rule "disjointDefinition" (formula "16"))
                                                                              (rule "sortsDisjointModuloNull" (formula "45"))
                                                                              (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "47"))
                                                                              (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
                                                                              (rule "false_right" (formula "45"))
                                                                              (rule "sortsDisjointModuloNull" (formula "44"))
                                                                              (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
                                                                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")))
                                                                              (rule "false_right" (formula "44"))
                                                                              (rule "sortsDisjointModuloNull" (formula "43"))
                                                                              (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "55"))
                                                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                                                              (rule "false_right" (formula "43"))
                                                                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
                                                                              (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
                                                                              (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                              (rule "distr_forallAnd" (formula "24"))
                                                                              (rule "andLeft" (formula "24"))
                                                                              (rule "commute_or" (formula "25") (term "0"))
                                                                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "21") (inst "r=r") (inst "i=i_1"))
                                                                              (builtin "One Step Simplification" (formula "21"))
                                                                              (rule "andLeft" (formula "21"))
                                                                              (rule "andLeft" (formula "21"))
                                                                              (rule "exLeft" (formula "21") (inst "sk=i_1_8"))
                                                                              (rule "andLeft" (formula "21"))
                                                                              (rule "andLeft" (formula "21"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "22"))
                                                                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                              (rule "disjointDefinition" (formula "25"))
                                                                              (rule "castedGetAny" (formula "23") (term "0"))
                                                                              (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "39"))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "mul_literals" (formula "22") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                              (rule "add_literals" (formula "22") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "22") (term "0"))
                                                                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "39"))
                                                                              (rule "getOfSeqSingleton" (formula "23") (term "0"))
                                                                              (rule "castDel" (formula "23") (term "1,0"))
                                                                              (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "22"))
                                                                              (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21"))
                                                                              (builtin "One Step Simplification" (formula "24"))
                                                                              (rule "eqSymm" (formula "24"))
                                                                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                                                                              (rule "leq_literals" (formula "23"))
                                                                              (rule "true_left" (formula "23"))
                                                                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                                              (rule "qeq_literals" (formula "22"))
                                                                              (rule "true_left" (formula "22"))
                                                                              (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "22"))
                                                                              (rule "nnf_imp2or" (formula "23") (term "0"))
                                                                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                                                              (rule "nnf_notOr" (formula "23") (term "1,0,0,0"))
                                                                              (rule "cnf_rightDist" (formula "27") (term "0"))
                                                                              (rule "distr_forallAnd" (formula "27"))
                                                                              (rule "andLeft" (formula "27"))
                                                                              (rule "commuteIntersection" (formula "17") (term "0"))
                                                                              (rule "commute_or_2" (formula "23") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "23") (term "0"))
                                                                              (rule "commuteIntersection" (formula "15") (term "0"))
                                                                              (rule "commuteIntersection" (formula "16") (term "0"))
                                                                              (rule "shift_paren_or" (formula "28") (term "0"))
                                                                              (rule "allLeft" (formula "30") (inst "t=k_2"))
                                                                              (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                                              (rule "qeq_literals" (formula "30") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "3"))
                                                                              (rule "andLeft" (formula "30"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "30") (term "0"))
                                                                              (rule "leq_literals" (formula "30"))
                                                                              (rule "closeFalse" (formula "30"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                           (rule "allRight" (formula "52") (inst "sk=j_0"))
                                                                           (rule "impRight" (formula "52"))
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                                                           (rule "qeq_literals" (formula "27"))
                                                                           (rule "true_left" (formula "27"))
                                                                           (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "36"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "qeq_literals" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "true_left" (formula "27"))
                                                                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "qeq_literals" (formula "24"))
                                                                           (rule "true_left" (formula "24"))
                                                                           (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (rule "true_left" (formula "24"))
                                                                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "12"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "eqSymm" (formula "32") (term "1"))
                                                                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "true_left" (formula "22"))
                                                                           (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "qeq_literals" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "castDel" (formula "28") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "commute_or" (formula "29"))
                                                                           (rule "inEqSimp_or_weaken1" (formula "29"))
                                                                           (rule "add_zero_right" (formula "29") (term "1,0"))
                                                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "12")))
                                                                           (rule "true_left" (formula "29"))
                                                                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "9"))
                                                                           (rule "andLeft" (formula "9"))
                                                                           (rule "notLeft" (formula "10"))
                                                                           (rule "andLeft" (formula "9"))
                                                                           (rule "notLeft" (formula "10"))
                                                                           (rule "andLeft" (formula "9"))
                                                                           (rule "notLeft" (formula "10"))
                                                                           (rule "nonNull" (formula "9") (inst "i=i_1"))
                                                                           (rule "greater_literals" (formula "9") (term "0,1"))
                                                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "44")))
                                                                           (rule "sub_literals" (formula "9") (term "2,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                           (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "44"))
                                                                           (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                           (rule "nnf_imp2or" (formula "9") (term "0"))
                                                                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "16"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "notLeft" (formula "16"))
                                                                           (rule "andLeft" (formula "16"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "notLeft" (formula "16"))
                                                                           (rule "andLeft" (formula "16"))
                                                                           (rule "notLeft" (formula "15"))
                                                                           (rule "notLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "eqSymm" (formula "21"))
                                                                           (rule "eqSymm" (formula "20"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "22"))
                                                                           (rule "disjointDefinition" (formula "19"))
                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "notLeft" (formula "19"))
                                                                           (rule "eqSymm" (formula "44"))
                                                                           (rule "disjointDefinition" (formula "18"))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "notLeft" (formula "18"))
                                                                           (rule "eqSymm" (formula "43"))
                                                                           (rule "disjointDefinition" (formula "17"))
                                                                           (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "notLeft" (formula "17"))
                                                                           (rule "eqSymm" (formula "42"))
                                                                           (rule "disjointDefinition" (formula "16"))
                                                                           (rule "disjointDefinition" (formula "15"))
                                                                           (rule "disjointDefinition" (formula "14"))
                                                                           (rule "sortsDisjointModuloNull" (formula "44"))
                                                                           (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "46"))
                                                                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "45")))
                                                                           (rule "false_right" (formula "44"))
                                                                           (rule "sortsDisjointModuloNull" (formula "43"))
                                                                           (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "45"))
                                                                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "55")))
                                                                           (rule "false_right" (formula "43"))
                                                                           (rule "sortsDisjointModuloNull" (formula "42"))
                                                                           (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "54"))
                                                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "43")))
                                                                           (rule "false_right" (formula "42"))
                                                                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                                                                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "29"))
                                                                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
                                                                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "23") (term "0,0,0"))
                                                                           (rule "disjointDefinition" (formula "23") (term "1,0,0,0"))
                                                                           (rule "commute_or" (formula "23") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "23") (term "0"))
                                                                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "20") (inst "r=r") (inst "i=i_1"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "exLeft" (formula "20") (inst "sk=i_1_9"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "andLeft" (formula "20"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "21"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "20"))
                                                                           (rule "disjointDefinition" (formula "24"))
                                                                           (rule "castedGetAny" (formula "22") (term "0"))
                                                                           (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "37"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "21") (term "0"))
                                                                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "37"))
                                                                           (rule "getOfSeqSingleton" (formula "22") (term "0"))
                                                                           (rule "castDel" (formula "22") (term "1,0"))
                                                                           (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "21"))
                                                                           (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "20"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "eqSymm" (formula "23"))
                                                                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                                           (rule "qeq_literals" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                                           (rule "leq_literals" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "21"))
                                                                           (rule "nnf_imp2or" (formula "22") (term "0"))
                                                                           (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                                           (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
                                                                           (rule "cnf_rightDist" (formula "26") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "26"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "commute_or" (formula "27") (term "0"))
                                                                           (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "22") (term "0"))
                                                                           (rule "commuteIntersection" (formula "16") (term "0"))
                                                                           (rule "commuteIntersection" (formula "15") (term "0"))
                                                                           (rule "commuteIntersection" (formula "14") (term "0"))
                                                                           (rule "allLeft" (formula "29") (inst "t=j_0"))
                                                                           (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "59"))
                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "29") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                                                           (rule "andLeft" (formula "2"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                           (rule "add_literals" (formula "2") (term "0"))
                                                                           (rule "leq_literals" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "allRight" (formula "52") (inst "sk=j_1"))
                                                                        (rule "impRight" (formula "52"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "23"))
                                                                        (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "qeq_literals" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "true_left" (formula "27"))
                                                                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                        (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "castDel" (formula "33") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "true_left" (formula "33"))
                                                                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                                        (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "12"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "eqSymm" (formula "34") (term "1"))
                                                                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                                                        (rule "qeq_literals" (formula "31"))
                                                                        (rule "true_left" (formula "31"))
                                                                        (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                        (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "qeq_literals" (formula "25"))
                                                                        (rule "true_left" (formula "25"))
                                                                        (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "17"))
                                                                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                                        (rule "qeq_literals" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                                                        (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "commute_or" (formula "29"))
                                                                        (rule "inEqSimp_or_weaken1" (formula "29"))
                                                                        (rule "add_zero_right" (formula "29") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "12")))
                                                                        (rule "true_left" (formula "29"))
                                                                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "16"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "17"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "notLeft" (formula "17"))
                                                                        (rule "andLeft" (formula "17"))
                                                                        (rule "notLeft" (formula "16"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "17"))
                                                                        (rule "notLeft" (formula "15"))
                                                                        (rule "notLeft" (formula "15"))
                                                                        (rule "andLeft" (formula "15"))
                                                                        (rule "eqSymm" (formula "22"))
                                                                        (rule "eqSymm" (formula "21"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                        (rule "disjointDefinition" (formula "20"))
                                                                        (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "notLeft" (formula "20"))
                                                                        (rule "eqSymm" (formula "45"))
                                                                        (rule "disjointDefinition" (formula "19"))
                                                                        (builtin "One Step Simplification" (formula "19"))
                                                                        (rule "notLeft" (formula "19"))
                                                                        (rule "eqSymm" (formula "44"))
                                                                        (rule "disjointDefinition" (formula "18"))
                                                                        (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "notLeft" (formula "18"))
                                                                        (rule "eqSymm" (formula "43"))
                                                                        (rule "disjointDefinition" (formula "17"))
                                                                        (rule "disjointDefinition" (formula "16"))
                                                                        (rule "disjointDefinition" (formula "15"))
                                                                        (rule "sortsDisjointModuloNull" (formula "45"))
                                                                        (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "46"))
                                                                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
                                                                        (rule "false_right" (formula "45"))
                                                                        (rule "sortsDisjointModuloNull" (formula "44"))
                                                                        (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
                                                                        (rule "false_right" (formula "44"))
                                                                        (rule "sortsDisjointModuloNull" (formula "43"))
                                                                        (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "54"))
                                                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                                                        (rule "false_right" (formula "43"))
                                                                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "33"))
                                                                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "31"))
                                                                        (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
                                                                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "9"))
                                                                        (rule "andLeft" (formula "9"))
                                                                        (rule "notLeft" (formula "10"))
                                                                        (rule "andLeft" (formula "9"))
                                                                        (rule "andLeft" (formula "9"))
                                                                        (rule "notLeft" (formula "11"))
                                                                        (rule "notLeft" (formula "10"))
                                                                        (rule "nonNull" (formula "9") (inst "i=i_1"))
                                                                        (rule "greater_literals" (formula "9") (term "0,1"))
                                                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "54")))
                                                                        (rule "sub_literals" (formula "9") (term "2,1,0"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                        (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
                                                                        (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                        (rule "nnf_imp2or" (formula "9") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                                        (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "23") (term "0,0,0"))
                                                                        (rule "disjointDefinition" (formula "23") (term "1,0,0,0"))
                                                                        (rule "commute_and" (formula "54") (term "0,2,0"))
                                                                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "20") (inst "r=r") (inst "i=i_1"))
                                                                        (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "andLeft" (formula "20"))
                                                                        (rule "andLeft" (formula "20"))
                                                                        (rule "exLeft" (formula "20") (inst "sk=i_1_10"))
                                                                        (rule "andLeft" (formula "20"))
                                                                        (rule "andLeft" (formula "20"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "20"))
                                                                        (rule "disjointDefinition" (formula "24"))
                                                                        (rule "castedGetAny" (formula "22") (term "0"))
                                                                        (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "37"))
                                                                        (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "mul_literals" (formula "21") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                        (rule "add_literals" (formula "21") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "21") (term "0"))
                                                                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "37"))
                                                                        (rule "getOfSeqSingleton" (formula "22") (term "0"))
                                                                        (rule "castDel" (formula "22") (term "1,0"))
                                                                        (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "21"))
                                                                        (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "20"))
                                                                        (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "eqSymm" (formula "23"))
                                                                        (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "20"))
                                                                        (rule "leq_literals" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                                        (rule "qeq_literals" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "21"))
                                                                        (rule "nnf_imp2or" (formula "22") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                                        (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
                                                                        (rule "commute_or" (formula "26") (term "0,0"))
                                                                        (rule "commuteIntersection" (formula "16") (term "0"))
                                                                        (rule "commuteIntersection" (formula "15") (term "0"))
                                                                        (rule "commuteIntersection" (formula "14") (term "0"))
                                                                        (rule "commute_or_2" (formula "26") (term "0"))
                                                                        (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "22") (term "0"))
                                                                        (rule "commute_or" (formula "22") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                        (rule "commuteIntersection" (formula "23") (term "0"))
                                                                        (rule "cnf_rightDist" (formula "26") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "26"))
                                                                        (rule "andLeft" (formula "26"))
                                                                        (rule "commute_or" (formula "27") (term "0"))
                                                                        (rule "cnf_rightDist" (formula "22") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "22"))
                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "shift_paren_or" (formula "22") (term "0"))
                                                                        (rule "commute_or" (formula "22") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "26") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "26"))
                                                                        (rule "andLeft" (formula "26"))
                                                                        (rule "shift_paren_or" (formula "27") (term "0"))
                                                                        (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "27") (term "0,0,0") (inst "s=s_1") (inst "i=i_1"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "eqSymm" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
                                                                        (rule "disjointDefinition" (formula "27") (term "1,0,0,0"))
                                                                        (rule "castedGetAny" (formula "27") (term "1,1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "getOfSeqDefEQ" (formula "27") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                        (rule "castDel" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
                                                                        (rule "lenOfSeqDefEQ" (formula "27") (term "1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "39"))
                                                                        (rule "polySimp_elimSub" (formula "27") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "times_zero_2" (formula "27") (term "1,1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "27") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "27") (term "0,1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "nnf_imp2or" (formula "27") (term "0,1,0,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                                                        (rule "nnf_notOr" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
                                                                        (rule "commute_or" (formula "27") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "27") (term "0"))
                                                                        (rule "commute_or_2" (formula "27") (term "0,0,1,0,1,0"))
                                                                        (rule "commute_or_2" (formula "27") (term "0,1,0,1,0"))
                                                                        (rule "commute_or" (formula "27") (term "0,0,0,1,0,1,0"))
                                                                        (rule "commute_or_2" (formula "27") (term "0,0,1,0,1,0"))
                                                                        (rule "cnf_rightDist" (formula "27") (term "0,1,0,1,0"))
                                                                        (rule "commute_or_2" (formula "27") (term "0,0,1,0,1,0"))
                                                                        (rule "applyEq_or_gen1" (formula "27") (term "0,0,0,1,0,1,0"))
                                                                        (rule "eqSymm" (formula "27") (term "1,0,0,0,0,1,0,1,0"))
                                                                        (rule "shift_paren_or" (formula "27") (term "1,0,1,0,1,0"))
                                                                        (rule "commute_or" (formula "27") (term "0,1,0,1,0,1,0"))
                                                                        (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "true_left" (formula "18"))
                                                                        (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                                        (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                                                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                                        (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "true_left" (formula "17"))
                                                                        (rule "commute_or" (formula "27") (term "0,0,0,0,1,0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "allLeft" (formula "37") (inst "t=j_1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "37") (term "0,1,0"))
                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "37") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "applyEq" (formula "60") (term "1") (ifseqformula "37"))
                                                                        (rule "allLeft" (formula "30") (inst "t=j_1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "30") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "30"))
                                                                        (rule "bsum_zero_right" (formula "61"))
                                                                        (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "equal_literals" (formula "61") (term "1,1,0"))
                                                                        (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "allRight" (formula "61") (inst "sk=k_3"))
                                                                        (rule "impRight" (formula "61"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notRight" (formula "63"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                        (rule "ex_pull_out0" (formula "31") (term "0,0,1,0"))
                                                                        (rule "commute_and_2" (formula "31") (term "0,0,0,1,0"))
                                                                        (rule "allLeft" (formula "41") (inst "t=k_3"))
                                                                        (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "41") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "41"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "4") (term "0"))
                                                                        (rule "leq_literals" (formula "4"))
                                                                        (rule "closeFalse" (formula "4"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "eqSymm" (formula "52"))
                                                                     (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                                     (rule "qeq_literals" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "castDel" (formula "32") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                                                     (rule "qeq_literals" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "qeq_literals" (formula "29"))
                                                                     (rule "true_left" (formula "29"))
                                                                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "qeq_literals" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "21"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "eqSymm" (formula "44"))
                                                                     (rule "close" (formula "44") (ifseqformula "19"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "eqSymm" (formula "52"))
                                                                  (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "qeq_literals" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "qeq_literals" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "qeq_literals" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "castDel" (formula "27") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                                                  (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "10"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "eqSymm" (formula "28") (term "1"))
                                                                  (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "qeq_literals" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "closeTrue" (formula "43"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "eqSymm" (formula "52"))
                                                               (rule "seqDef_lower_equals_upper" (formula "52") (term "0"))
                                                               (rule "eqSymm" (formula "52"))
                                                               (rule "close" (formula "52") (ifseqformula "21"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "seqDef_lower_equals_upper" (formula "52") (term "0"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "close" (formula "52") (ifseqformula "24"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "seqDef_lower_equals_upper" (formula "52") (term "0"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "close" (formula "52") (ifseqformula "27"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "disjointDefinition" (formula "52"))
                                                      (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "qeq_literals" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "castDel" (formula "30") (term "0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "qeq_literals" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                                      (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "eqSymm" (formula "29") (term "1"))
                                                      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "qeq_literals" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "qeq_literals" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                                                      (rule "commute_or" (formula "27"))
                                                      (rule "inEqSimp_or_weaken1" (formula "27"))
                                                      (rule "add_zero_right" (formula "27") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "10")))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "nonNull" (formula "7") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "42")))
                                                      (rule "greater_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                      (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "42"))
                                                      (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "7") (term "0"))
                                                      (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                                      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "notLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "andLeft" (formula "12"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "eqSymm" (formula "18"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20"))
                                                      (rule "disjointDefinition" (formula "17"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "disjointDefinition" (formula "16"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "notLeft" (formula "16"))
                                                      (rule "eqSymm" (formula "41"))
                                                      (rule "disjointDefinition" (formula "15"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "eqSymm" (formula "40"))
                                                      (rule "disjointDefinition" (formula "14"))
                                                      (rule "disjointDefinition" (formula "13"))
                                                      (rule "disjointDefinition" (formula "12"))
                                                      (rule "sortsDisjointModuloNull" (formula "42"))
                                                      (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "44")))
                                                      (rule "false_right" (formula "42"))
                                                      (rule "sortsDisjointModuloNull" (formula "41"))
                                                      (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")))
                                                      (rule "false_right" (formula "41"))
                                                      (rule "sortsDisjointModuloNull" (formula "40"))
                                                      (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "52")))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "16") (term "1") (ifseqformula "28"))
                                                      (rule "applyEq" (formula "15") (term "1") (ifseqformula "27"))
                                                      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "21") (term "0,0,0"))
                                                      (rule "disjointDefinition" (formula "21") (term "1,0,0,0"))
                                                      (rule "commuteIntersection" (formula "52") (term "0"))
                                                      (rule "intersectWithSingleton" (formula "52") (term "0"))
                                                      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "43")))
                                                      (rule "closeTrue" (formula "52"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "closeTrue" (formula "52"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "close" (formula "52") (ifseqformula "28"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "eqSymm" (formula "52"))
                                             (rule "close" (formula "52") (ifseqformula "29"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "35")))
                                          (rule "closeTrue" (formula "52"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "eqSymm" (formula "52"))
                                       (rule "close" (formula "52") (ifseqformula "37"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "disjointDefinition" (formula "52"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                    (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "eqSymm" (formula "36") (term "1"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "castDel" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "qeq_literals" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                                    (rule "commute_or" (formula "27"))
                                    (rule "inEqSimp_or_weaken1" (formula "27"))
                                    (rule "add_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "27"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "21"))
                                    (rule "disjointDefinition" (formula "18"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "disjointDefinition" (formula "17"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "disjointDefinition" (formula "16"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "eqSymm" (formula "41"))
                                    (rule "disjointDefinition" (formula "15"))
                                    (rule "disjointDefinition" (formula "13"))
                                    (rule "disjointDefinition" (formula "14"))
                                    (rule "sortsDisjointModuloNull" (formula "43"))
                                    (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                    (rule "false_right" (formula "43"))
                                    (rule "sortsDisjointModuloNull" (formula "42"))
                                    (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")))
                                    (rule "false_right" (formula "42"))
                                    (rule "sortsDisjointModuloNull" (formula "41"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")))
                                    (rule "false_right" (formula "41"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "28"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "29"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "22") (term "0,0,0"))
                                    (rule "disjointDefinition" (formula "22") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "7"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "notLeft" (formula "9"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "notLeft" (formula "9"))
                                    (rule "notLeft" (formula "8"))
                                    (rule "nonNull" (formula "7") (inst "i=i_1"))
                                    (rule "greater_literals" (formula "7") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "52")))
                                    (rule "sub_literals" (formula "7") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                    (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "52"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "7") (term "0"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                    (rule "commuteIntersection" (formula "52") (term "0"))
                                    (rule "close" (formula "52") (ifseqformula "33"))
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "disjointDefinition" (formula "52"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                 (rule "qeq_literals" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                 (rule "qeq_literals" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                 (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "eqSymm" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "castDel" (formula "29") (term "0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                                 (rule "commute_or" (formula "27"))
                                 (rule "inEqSimp_or_weaken1" (formula "27"))
                                 (rule "add_zero_right" (formula "27") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "10")))
                                 (rule "true_left" (formula "27"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "16") (term "0,0,0"))
                                 (rule "disjointDefinition" (formula "16") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "16") (term "0,0"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "inEqSimp_commuteLeq" (formula "21"))
                                 (rule "disjointDefinition" (formula "18"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "eqSymm" (formula "43"))
                                 (rule "disjointDefinition" (formula "17"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "eqSymm" (formula "41"))
                                 (rule "disjointDefinition" (formula "15"))
                                 (rule "disjointDefinition" (formula "13"))
                                 (rule "disjointDefinition" (formula "14"))
                                 (rule "sortsDisjointModuloNull" (formula "43"))
                                 (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
                                 (rule "false_right" (formula "43"))
                                 (rule "sortsDisjointModuloNull" (formula "42"))
                                 (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")))
                                 (rule "false_right" (formula "42"))
                                 (rule "sortsDisjointModuloNull" (formula "41"))
                                 (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")))
                                 (rule "false_right" (formula "41"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "28"))
                                 (rule "applyEq" (formula "17") (term "1") (ifseqformula "29"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "notLeft" (formula "9"))
                                 (rule "notLeft" (formula "8"))
                                 (rule "nonNull" (formula "7") (inst "i=i_1"))
                                 (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "52")))
                                 (rule "greater_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "52"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "7") (term "0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                 (rule "commuteIntersection" (formula "52") (term "0"))
                                 (rule "intersectWithSingleton" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "43")))
                                 (rule "closeTrue" (formula "52"))
                              )
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "disjointDefinition" (formula "52"))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                              (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "eqSymm" (formula "35") (term "1"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                              (rule "qeq_literals" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "qeq_literals" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "castDel" (formula "29") (term "0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                              (rule "intersectWithSingleton" (formula "43") (term "0"))
                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "38")))
                              (rule "closeTrue" (formula "43"))
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "disjointDefinition" (formula "52"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                           (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                           (rule "qeq_literals" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "qeq_literals" (formula "30"))
                           (rule "true_left" (formula "30"))
                           (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "castDel" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                           (rule "intersectWithSingleton" (formula "43") (term "0"))
                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "37")))
                           (rule "closeTrue" (formula "43"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "disjointDefinition" (formula "52"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "qeq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                        (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "eqSymm" (formula "35") (term "1"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "qeq_literals" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "qeq_literals" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "castDel" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "qeq_literals" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                        (rule "intersectWithSingleton" (formula "43") (term "0"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "36")))
                        (rule "closeTrue" (formula "43"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "disjointDefinition" (formula "52"))
                     (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "qeq_literals" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                     (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "eqSymm" (formula "35") (term "1"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                     (rule "qeq_literals" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "qeq_literals" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "castDel" (formula "29") (term "0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                     (rule "qeq_literals" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                     (rule "intersectWithSingleton" (formula "43") (term "0"))
                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "35")))
                     (rule "closeTrue" (formula "43"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "disjointDefinition" (formula "52"))
                  (rule "close" (formula "52") (ifseqformula "39"))
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "52"))
               (rule "disjointDefinition" (formula "52"))
               (rule "close" (formula "52") (ifseqformula "40"))
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "52"))
            (rule "allRight" (formula "52") (inst "sk=j_2"))
            (rule "impRight" (formula "52"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "54") (term "1"))
            (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "54") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "qeq_literals" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
            (rule "qeq_literals" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
            (rule "qeq_literals" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "eqSymm" (formula "34") (term "1"))
            (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "castDel" (formula "32") (term "0"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "true_left" (formula "32"))
            (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "qeq_literals" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "45") (term "0,1,0,0,1") (ifseqformula "17"))
            (rule "applyEq" (formula "25") (term "1") (ifseqformula "17"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
            (rule "polySimp_rightDist" (formula "45") (term "1,1"))
            (rule "mul_literals" (formula "45") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
            (rule "commute_or" (formula "29"))
            (rule "inEqSimp_or_weaken1" (formula "29"))
            (rule "add_zero_right" (formula "29") (term "1,0"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "12")))
            (rule "true_left" (formula "29"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "18") (term "0,0,0"))
            (rule "disjointDefinition" (formula "18") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "15"))
            (rule "notLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "disjointDefinition" (formula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "eqSymm" (formula "45"))
            (rule "disjointDefinition" (formula "19"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "eqSymm" (formula "44"))
            (rule "disjointDefinition" (formula "18"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "eqSymm" (formula "43"))
            (rule "disjointDefinition" (formula "17"))
            (rule "disjointDefinition" (formula "15"))
            (rule "disjointDefinition" (formula "16"))
            (rule "sortsDisjointModuloNull" (formula "45"))
            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "47"))
            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "46")))
            (rule "false_right" (formula "45"))
            (rule "sortsDisjointModuloNull" (formula "44"))
            (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "55")))
            (rule "false_right" (formula "44"))
            (rule "sortsDisjointModuloNull" (formula "43"))
            (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")))
            (rule "false_right" (formula "43"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "31"))
            (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
            (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "10"))
            (rule "nonNull" (formula "9") (inst "i=i_1"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "54")))
            (rule "sub_literals" (formula "9") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "54"))
            (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "commute_or" (formula "23") (term "0,0"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "20") (inst "r=r") (inst "i=i_1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "exLeft" (formula "20") (inst "sk=i_1_11"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "inEqSimp_ltToLeq" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "disjointDefinition" (formula "24"))
            (rule "castedGetAny" (formula "22") (term "0"))
            (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "mul_literals" (formula "21") (term "1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "0,0"))
            (rule "add_zero_left" (formula "21") (term "0"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "37"))
            (rule "getOfSeqSingleton" (formula "22") (term "0"))
            (rule "castDel" (formula "22") (term "1,0"))
            (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "21"))
            (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "eqSymm" (formula "23"))
            (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "20"))
            (rule "leq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
            (rule "qeq_literals" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "21"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
            (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "26") (term "0"))
            (rule "commuteIntersection" (formula "16") (term "0"))
            (rule "commuteIntersection" (formula "14") (term "0"))
            (rule "commuteIntersection" (formula "15") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or" (formula "22") (term "0,0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "cnf_rightDist" (formula "26") (term "0"))
            (rule "distr_forallAnd" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "commute_or" (formula "27") (term "0"))
            (rule "cut_direct" (formula "58") (term "0"))
            (branch "CUT: self.voters[j_2].choice ≥ 0 TRUE"
               (builtin "One Step Simplification" (formula "59"))
               (rule "inEqSimp_leqRight" (formula "59"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "commuteIntersection" (formula "25") (term "0"))
               (rule "cnf_rightDist" (formula "24") (term "0"))
               (rule "distr_forallAnd" (formula "24"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "castDel" (formula "24") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "shift_paren_or" (formula "24") (term "0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "cnf_rightDist" (formula "28") (term "0"))
               (rule "distr_forallAnd" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "shift_paren_or" (formula "29") (term "0"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (term "0,0,0") (inst "s=s_1") (inst "i=i_1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "eqSymm" (formula "29") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,0,0,0,0,0"))
               (rule "disjointDefinition" (formula "29") (term "1,0,0,0"))
               (rule "castedGetAny" (formula "29") (term "1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0,0,0,0,0"))
               (rule "lenOfSeqDefEQ" (formula "29") (term "1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "41"))
               (rule "polySimp_elimSub" (formula "29") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "times_zero_2" (formula "29") (term "1,1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "replace_known_left" (formula "29") (term "0,1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "getOfSeqDefEQ" (formula "29") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "41"))
               (rule "castDel" (formula "29") (term "1,1,1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "1,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "times_zero_2" (formula "29") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "29") (term "0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "29") (term "0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "29") (term "1,0,0,0,1,0,0,0,0"))
               (rule "commute_or" (formula "29") (term "0,0"))
               (rule "commute_or_2" (formula "29") (term "0"))
               (rule "commute_or_2" (formula "29") (term "0,0,1,0,1,0"))
               (rule "commute_or_2" (formula "29") (term "0,1,0,1,0"))
               (rule "commute_or" (formula "29") (term "0,0,0,1,0,1,0"))
               (rule "commute_or_2" (formula "29") (term "0,0,1,0,1,0"))
               (rule "arrayLengthNotNegative" (formula "20") (term "0"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
               (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "arrayLengthNotNegative" (formula "19") (term "0"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "cnf_rightDist" (formula "29") (term "0,1,0,1,0"))
               (rule "commute_or_2" (formula "29") (term "0,0,1,0,1,0"))
               (rule "applyEq_or_gen1" (formula "29") (term "0,0,0,1,0,1,0"))
               (rule "eqSymm" (formula "29") (term "1,0,0,0,0,1,0,1,0"))
               (rule "shift_paren_or" (formula "29") (term "1,0,1,0,1,0"))
               (rule "commute_or" (formula "29") (term "0,1,0,1,0,1,0"))
               (rule "allLeft" (formula "46") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "46") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
               (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
               (rule "add_literals" (formula "46") (term "0,0,0"))
               (rule "leq_literals" (formula "46") (term "0,0"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "1"))
               (rule "andLeft" (formula "46"))
               (rule "inEqSimp_homoInEq1" (formula "46"))
               (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
               (rule "polySimp_rightDist" (formula "46") (term "1,0"))
               (rule "mul_literals" (formula "46") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "46") (term "0"))
               (rule "polySimp_addComm0" (formula "46") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
               (rule "add_literals" (formula "46") (term "1,1,0"))
               (rule "times_zero_1" (formula "46") (term "1,0"))
               (rule "add_literals" (formula "46") (term "0"))
               (rule "leq_literals" (formula "46"))
               (rule "closeFalse" (formula "46"))
            )
            (branch "CUT: self.voters[j_2].choice ≥ 0 FALSE"
               (builtin "One Step Simplification" (formula "59"))
               (rule "false_right" (formula "59"))
               (rule "inEqSimp_geqRight" (formula "58"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "commuteIntersection" (formula "24") (term "0"))
               (rule "cnf_rightDist" (formula "23") (term "0"))
               (rule "distr_forallAnd" (formula "23"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "castDel" (formula "23") (term "1,0,0,1,0,0"))
               (rule "castDel" (formula "23") (term "0,1,0,0,0"))
               (rule "castDel" (formula "23") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "shift_paren_or" (formula "23") (term "0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "cnf_rightDist" (formula "27") (term "0"))
               (rule "distr_forallAnd" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "shift_paren_or" (formula "28") (term "0"))
               (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "28") (term "0,0,0") (inst "s=s_1") (inst "i=i_1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "eqSymm" (formula "28") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,0,0,0,0,0"))
               (rule "disjointDefinition" (formula "28") (term "1,0,0,0"))
               (rule "castedGetAny" (formula "28") (term "1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0,0,0,0,0"))
               (rule "lenOfSeqDefEQ" (formula "28") (term "1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "40"))
               (rule "polySimp_elimSub" (formula "28") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "times_zero_2" (formula "28") (term "1,1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "1,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,1,1,0,0,0,0,0,0,0,0"))
               (rule "replace_known_left" (formula "28") (term "0,1,1,1,0,0,0,0,0,0,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqDefEQ" (formula "28") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "40"))
               (rule "castDel" (formula "28") (term "1,1,1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "1,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "times_zero_2" (formula "28") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0,0,0,0"))
               (rule "nnf_notOr" (formula "28") (term "1,0,0,0,1,0,0,0,0"))
               (rule "commute_or" (formula "28") (term "0,0"))
               (rule "commute_or_2" (formula "28") (term "0"))
               (rule "commute_or_2" (formula "28") (term "0,0,1,0,1,0"))
               (rule "commute_or_2" (formula "28") (term "0,1,0,1,0"))
               (rule "commute_or" (formula "28") (term "0,0,0,1,0,1,0"))
               (rule "commute_or_2" (formula "28") (term "0,0,1,0,1,0"))
               (rule "arrayLengthNotNegative" (formula "19") (term "0"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "arrayLengthNotNegative" (formula "18") (term "0"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
               (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "cnf_rightDist" (formula "28") (term "0,1,0,1,0"))
               (rule "commute_or_2" (formula "28") (term "0,0,1,0,1,0"))
               (rule "applyEq_or_gen1" (formula "28") (term "0,0,0,1,0,1,0"))
               (rule "eqSymm" (formula "28") (term "1,0,0,0,0,1,0,1,0"))
               (rule "shift_paren_or" (formula "28") (term "1,0,1,0,1,0"))
               (rule "commute_or" (formula "28") (term "0,1,0,1,0,1,0"))
               (rule "allLeft" (formula "45") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
               (rule "leq_literals" (formula "45") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "45") (term "0,0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "allLeft" (formula "11") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "11") (term "0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "11") (term "0,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "allLeft" (formula "37") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "37") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "37") (term "0,0,0"))
               (rule "leq_literals" (formula "37") (term "0,0"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "notLeft" (formula "37"))
               (rule "allLeft" (formula "30") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "30") (term "0,0,1,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "30") (term "0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "notLeft" (formula "30"))
               (rule "allLeft" (formula "44") (inst "t=j_2"))
               (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "44") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
               (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "44") (term "0,0,0"))
               (rule "leq_literals" (formula "44") (term "0,0"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_contradInEq0" (formula "44") (ifseqformula "1"))
               (rule "qeq_literals" (formula "44") (term "0"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "closeFalse" (formula "44"))
            )
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "52"))
         (rule "allRight" (formula "52") (inst "sk=j_3"))
         (rule "impRight" (formula "52"))
         (rule "andLeft" (formula "1"))
         (rule "impRight" (formula "54"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "eqSymm" (formula "39") (term "1"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "true_left" (formula "35"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
         (rule "qeq_literals" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "qeq_literals" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "castDel" (formula "31") (term "0"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "qeq_literals" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "applyEq" (formula "26") (term "1") (ifseqformula "18"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "commute_or" (formula "30"))
         (rule "inEqSimp_or_weaken1" (formula "30"))
         (rule "add_zero_right" (formula "30") (term "1,0"))
         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "13")))
         (rule "true_left" (formula "30"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "19") (term "0,0,0"))
         (rule "disjointDefinition" (formula "19") (term "1,0,0,0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "11"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "11"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "11"))
         (rule "nonNull" (formula "10") (inst "i=i_1"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "45")))
         (rule "greater_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "45"))
         (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "16"))
         (rule "notLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "eqSymm" (formula "22"))
         (rule "eqSymm" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "disjointDefinition" (formula "20"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "eqSymm" (formula "45"))
         (rule "disjointDefinition" (formula "19"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "notLeft" (formula "19"))
         (rule "eqSymm" (formula "44"))
         (rule "disjointDefinition" (formula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "notLeft" (formula "18"))
         (rule "eqSymm" (formula "43"))
         (rule "disjointDefinition" (formula "17"))
         (rule "disjointDefinition" (formula "16"))
         (rule "disjointDefinition" (formula "15"))
         (rule "sortsDisjointModuloNull" (formula "45"))
         (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")))
         (rule "false_right" (formula "45"))
         (rule "sortsDisjointModuloNull" (formula "44"))
         (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "56"))
         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "46")))
         (rule "false_right" (formula "44"))
         (rule "sortsDisjointModuloNull" (formula "43"))
         (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "55")))
         (rule "false_right" (formula "43"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
         (rule "applyEq" (formula "19") (term "1") (ifseqformula "31"))
         (rule "applyEq" (formula "18") (term "1") (ifseqformula "30"))
         (rule "cnf_rightDist" (formula "24") (term "0"))
         (rule "distr_forallAnd" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "commute_or" (formula "25") (term "0"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "21") (inst "r=r") (inst "i=i_1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "exLeft" (formula "21") (inst "sk=i_1_12"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "22"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "disjointDefinition" (formula "25"))
         (rule "castedGetAny" (formula "23") (term "0"))
         (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "39"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "mul_literals" (formula "22") (term "1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0"))
         (rule "add_literals" (formula "22") (term "0,0"))
         (rule "add_zero_left" (formula "22") (term "0"))
         (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "39"))
         (rule "getOfSeqSingleton" (formula "23") (term "0"))
         (rule "castDel" (formula "23") (term "1,0"))
         (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "22"))
         (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "eqSymm" (formula "24"))
         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
         (rule "leq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "22"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
         (rule "nnf_notOr" (formula "23") (term "1,0,0,0"))
         (rule "cnf_rightDist" (formula "27") (term "0"))
         (rule "distr_forallAnd" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "commuteIntersection" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "23") (term "0,0"))
         (rule "commute_or_2" (formula "23") (term "0"))
         (rule "commuteIntersection" (formula "16") (term "0"))
         (rule "commuteIntersection" (formula "15") (term "0"))
         (rule "shift_paren_or" (formula "28") (term "0"))
         (rule "allLeft" (formula "37") (inst "t=j_3"))
         (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "37") (term "0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "3"))
         (rule "andLeft" (formula "37"))
         (rule "inEqSimp_homoInEq1" (formula "37"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
         (rule "add_literals" (formula "37") (term "1,1,0"))
         (rule "times_zero_1" (formula "37") (term "1,0"))
         (rule "add_literals" (formula "37") (term "0"))
         (rule "leq_literals" (formula "37"))
         (rule "closeFalse" (formula "37"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "52"))
      (branch "Case 1"
         (rule "andRight" (formula "52"))
         (branch "Case 1"
            (rule "andRight" (formula "52"))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "52"))
               (rule "closeTrue" (formula "52"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "52"))
               (rule "closeTrue" (formula "52"))
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "52"))
            (rule "closeTrue" (formula "52"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "52"))
      )
   )
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "44"))
   (builtin "One Step Simplification" (formula "54"))
   (rule "andLeft" (formula "44"))
   (rule "impRight" (formula "55"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "47"))
   (rule "andLeft" (formula "46"))
   (rule "andLeft" (formula "45"))
   (rule "notLeft" (formula "49"))
   (rule "notLeft" (formula "47"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "47"))
   (rule "andLeft" (formula "45"))
   (rule "notLeft" (formula "48"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "45"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "94") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "eqSymm" (formula "71"))
   (rule "eqSymm" (formula "69"))
   (rule "eqSymm" (formula "68"))
   (rule "eqSymm" (formula "63"))
   (rule "eqSymm" (formula "62"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "94") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "94") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "48") (term "0"))
   (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "48") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "94") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "71"))
   (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "disjointDefinition" (formula "94") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "47"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "45"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,1,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "69"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "71"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "54"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "69"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "62"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "54"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,1,0"))
   (rule "disjointDefinition" (formula "79"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "69"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "63"))
   (rule "disjointDefinition" (formula "78"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "62"))
   (rule "disjointDefinition" (formula "77"))
   (rule "disjointDefinition" (formula "76"))
   (rule "disjointDefinition" (formula "75"))
   (rule "disjointDefinition" (formula "74"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "disjointDefinition" (formula "73"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0"))
   (rule "disjointDefinition" (formula "72"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "46"))
   (rule "polySimp_addComm1" (formula "81") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "71"))
   (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
   (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "69"))
   (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "71"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "94") (term "1"))
   (rule "blockThrow" (formula "94") (term "1,0,0,1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "94") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "94") (term "1"))
   (builtin "One Step Simplification" (formula "94"))
   (rule "variableDeclaration" (formula "94") (term "1") (newnames "thrownExc"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "59") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0") (ifseqformula "16"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "60") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0") (ifseqformula "16"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "61") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "66") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "66") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "66") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "67") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "67") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "70") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "70") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "70") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "64") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "64") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "81") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "81") (term "0,1,0,0"))
   (rule "apply_eq_monomials" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "65") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "65") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,1,0,0") (ifseqformula "52"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "51") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "84") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "84") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "84") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "84") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "84") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "84") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "84") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "84") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "63") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "63") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "83") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "83") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "83") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "83") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "83") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "76") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "76") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "76") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "76") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "add_literals" (formula "53") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "times_zero_1" (formula "53") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "add_zero_right" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "72") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "72") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "72") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "72") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "69") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "69") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "69") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "82") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "82") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "74") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "74") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "74") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "74") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "78") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "times_zero_1" (formula "78") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_zero_right" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "75") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "75") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "75") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "75") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "apply_eq_monomials" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "69") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "69") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "69") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "69"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "52") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "52") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "78") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "78") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "54") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "54") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "54") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "73") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "73") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "73") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,1,0") (ifseqformula "55"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "55") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "55") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "55") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "46") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "46") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "46") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "46") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "46") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "77") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "29"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "71") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "71") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "71") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "71") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "71"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "49") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "49") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_elimOne" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_pullOutFactor1b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "62") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "62") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "53") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "53") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "1") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "1") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "add_literals" (formula "1") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "1") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "blockThrow" (formula "94") (term "1,0,0,1"))
   (rule "apply_eq_monomials" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "94") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "94") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "add_literals" (formula "94") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "times_zero_1" (formula "94") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "add_zero_right" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,1,0,0") (ifseqformula "52"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "63") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "63") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "69") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "69") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "69") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "69"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "52") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "52") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,1,0") (ifseqformula "16"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "54") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "54") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "apply_eq_monomials" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "62") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "62") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "29"))
   (rule "polySimp_rightDist" (formula "71") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "71") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "71") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "71"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0"))
   (rule "mul_literals" (formula "48") (term "1,0"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,1,0,0") (ifseqformula "52"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,1,0,0") (ifseqformula "56"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,0,1,0,1,0,0,0,2,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,1,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,1,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "84") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "84") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "84") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "84") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "83") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "mul_literals" (formula "94") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "69"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "71"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
   (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
   (rule "intersectWithSingleton" (formula "94") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "94"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "68"))
   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "63"))
   (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "69"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "52"))
   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "54"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "eqSymm" (formula "61") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "71"))
   (rule "pullOutSelect" (formula "81") (term "1,1,0,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_1"))
   (rule "simplifySelectOfAnon" (formula "81"))
   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "93")) (ifInst ""  (formula "5")))
   (rule "replaceKnownSelect_taclet0_0" (formula "83") (term "0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "50") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "46") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "79") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "57") (term "1,1,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "58") (term "1,1,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "59") (term "1,1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "80") (term "1,1,0,1,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "80") (term "1,1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "57") (term "1,1,0,1,1,0"))
   (rule "eqSymm" (formula "52"))
   (rule "pullOutSelect" (formula "82") (term "1,1,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_server_2"))
   (rule "simplifySelectOfAnon" (formula "82"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "94")) (ifInst ""  (formula "5")))
   (rule "replaceKnownSelect_taclet1_0" (formula "85") (term "0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "53") (term "1"))
   (rule "replaceKnownSelect_taclet1_0" (formula "68") (term "1,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "69") (term "1,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "61") (term "1,1,1,1,0"))
   (rule "replaceKnownSelect_taclet1_0" (formula "61") (term "1,1,0,1,0,2,0,1,0"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_1"))
   (rule "simplifySelectOfAnon" (formula "65"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "replaceKnownSelect_taclet2_0" (formula "62") (term "0,0"))
   (rule "eqSymm" (formula "66"))
   (rule "hideAuxiliaryEq" (formula "66"))
   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "65") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "62") (term "0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_3"))
   (rule "simplifySelectOfAnon" (formula "66"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "replaceKnownSelect_taclet4_0" (formula "75") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "72") (term "0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "74") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "73") (term "0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "79") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "76") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "77") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "78") (term "1,0"))
   (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_1"))
   (rule "simplifySelectOfAnon" (formula "70"))
   (builtin "One Step Simplification" (formula "70"))
   (rule "eqSymm" (formula "71"))
   (rule "hideAuxiliaryEq" (formula "71"))
   (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "70") (term "1"))
   (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_1"))
   (rule "simplifySelectOfAnon" (formula "63"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "replaceKnownSelect_taclet7_0" (formula "62") (term "0,0"))
   (rule "replaceKnownSelect_taclet7_0" (formula "61") (term "0,1"))
   (rule "eqSymm" (formula "64"))
   (rule "hideAuxiliaryEq" (formula "64"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "63") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "62") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "61") (term "0,1"))
   (rule "eqSymm" (formula "62"))
   (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_1"))
   (rule "simplifySelectOfAnon" (formula "64"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "replaceKnownSelect_taclet9_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "65"))
   (rule "hideAuxiliaryEq" (formula "65"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "64") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_correctResult_2"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownSelect_taclet11_0" (formula "54") (term "0,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "79") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "60") (term "1,0,1,0"))
   (rule "eqSymm" (formula "54"))
   (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfCandidates_1"))
   (rule "simplifySelectOfAnon" (formula "55"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "replaceKnownSelect_taclet12_0" (formula "71") (term "1"))
   (rule "replaceKnownSelect_taclet12_0" (formula "54") (term "0"))
   (rule "simplifySelectOfAnon" (formula "71"))
   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "88")))
   (rule "eqSymm" (formula "56"))
   (rule "hideAuxiliaryEq" (formula "56"))
   (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "70") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "55") (term "1"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "54") (term "0"))
   (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_1"))
   (rule "simplifySelectOfAnon" (formula "56"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "replaceKnownSelect_taclet15_0" (formula "70") (term "1"))
   (rule "replaceKnownSelect_taclet15_0" (formula "52") (term "0"))
   (rule "replaceKnownSelect_taclet15_0" (formula "73") (term "1,0"))
   (rule "simplifySelectOfAnon" (formula "70"))
   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "88")))
   (rule "eqSymm" (formula "57"))
   (rule "hideAuxiliaryEq" (formula "57"))
   (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "69") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "52") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "56") (term "1"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "72") (term "1,0"))
   (rule "eqSymm" (formula "72"))
   (rule "intersectWithSingleton" (formula "98") (term "0,1,0,0,0,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "98"))
   (rule "elementOfUnion" (formula "82") (term "0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "96")))
   (rule "elementOfUnion" (formula "83") (term "0,0"))
   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "96")))
   (rule "elementOfUnion" (formula "66") (term "0,0"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "elementOfUnion" (formula "67") (term "0,0"))
   (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "intersectWithSingleton" (formula "76") (term "0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "notLeft" (formula "76"))
   (rule "intersectWithSingleton" (formula "75") (term "0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "notLeft" (formula "75"))
   (rule "intersectWithSingleton" (formula "75") (term "0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "notLeft" (formula "75"))
   (rule "intersectWithSingleton" (formula "75") (term "0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "notLeft" (formula "75"))
   (rule "elementOfUnion" (formula "71") (term "0,0"))
   (rule "elementOfSingleton" (formula "71") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "commuteUnion" (formula "68") (term "1"))
   (rule "lenOfSeqDef" (formula "63") (term "0"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_elimSub" (formula "63") (term "1,1"))
   (rule "times_zero_2" (formula "63") (term "1,1,1"))
   (rule "add_zero_right" (formula "63") (term "1,1"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1"))
   (rule "add_zero_right" (formula "63") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,1"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "lenOfSeqDef" (formula "62") (term "0"))
   (rule "polySimp_elimSub" (formula "62") (term "1,0"))
   (rule "mul_literals" (formula "62") (term "1,1,0"))
   (rule "add_zero_right" (formula "62") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0"))
   (rule "add_zero_right" (formula "62") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "0,0,0"))
   (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "62"))
   (rule "lenOfSeqDef" (formula "62") (term "1"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_elimSub" (formula "62") (term "1,0"))
   (rule "mul_literals" (formula "62") (term "1,1,0"))
   (rule "add_zero_right" (formula "62") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0"))
   (rule "add_zero_right" (formula "62") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "62"))
   (rule "true_left" (formula "62"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "86")))
   (rule "elementOfUnion" (formula "55") (term "0,0"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "86")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "intersectWithSingleton" (formula "97") (term "0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "97"))
   (rule "elementOfUnion" (formula "77") (term "0,0"))
   (rule "elementOfSingleton" (formula "77") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "95")))
   (rule "pullOutSelect" (formula "79") (term "1,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_2"))
   (rule "simplifySelectOfAnon" (formula "79"))
   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "87")))
   (rule "replaceKnownSelect_taclet18_0" (formula "61") (term "1,0,1,0,2,0,1,0"))
   (rule "elementOfUnion" (formula "78") (term "0,0"))
   (rule "elementOfSingleton" (formula "78") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "96")))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "eqSymm" (formula "65"))
   (rule "elementOfUnion" (formula "66") (term "0,0"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "pullOutSelect" (formula "61") (term "1,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_2"))
   (rule "simplifySelectOfAnon" (formula "61"))
   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "88")))
   (rule "elementOfUnion" (formula "71") (term "0,0"))
   (rule "elementOfSingleton" (formula "71") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "lenOfSeqDef" (formula "63") (term "0"))
   (rule "polySimp_elimSub" (formula "63") (term "1,0"))
   (rule "times_zero_2" (formula "63") (term "1,1,0"))
   (rule "add_zero_right" (formula "63") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0"))
   (rule "add_zero_right" (formula "63") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "lenOfSeqDef" (formula "63") (term "1"))
   (rule "eqSymm" (formula "63"))
   (rule "polySimp_elimSub" (formula "63") (term "1,0"))
   (rule "mul_literals" (formula "63") (term "1,1,0"))
   (rule "add_zero_right" (formula "63") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0"))
   (rule "add_zero_right" (formula "63") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "true_left" (formula "63"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "87")))
   (rule "elementOfUnion" (formula "55") (term "0,0"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "87")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "intersectWithSingleton" (formula "98") (term "0,1,0,0,0,0,0,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "98"))
   (rule "elementOfUnion" (formula "77") (term "0,0"))
   (rule "elementOfSingleton" (formula "77") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "96")))
   (rule "elementOfUnion" (formula "79") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "87")))
   (rule "elementOfUnion" (formula "78") (term "0,0"))
   (rule "elementOfSingleton" (formula "78") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "96")))
   (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_1"))
   (rule "simplifySelectOfAnon" (formula "71"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "eqSymm" (formula "72"))
   (rule "hideAuxiliaryEq" (formula "72"))
   (rule "replaceKnownAuxiliaryConstant_taclet21_0" (formula "71") (term "1"))
   (rule "elementOfUnion" (formula "66") (term "0,0"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "elementOfUnion" (formula "61") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "61") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "87")))
   (rule "elementOfSubsetOfUnion2" (formula "83") (ifseqformula "67") (ifseqformula "93"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "82") (ifseqformula "67") (ifseqformula "91"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "86") (ifseqformula "67") (ifseqformula "94"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "85") (ifseqformula "67") (ifseqformula "94"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfUnion" (formula "70") (term "0,0"))
   (rule "elementOfSingleton" (formula "70") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "70"))
   (rule "elementOfUnion" (formula "63") (term "0,0"))
   (rule "elementOfSingleton" (formula "63") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "disjointAndSubset_4" (formula "67") (ifseqformula "39"))
   (rule "intersectAllFieldsFreshLocs" (formula "67") (term "0"))
   (rule "replace_known_left" (formula "67") (term "1,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "101")))
   (rule "disjointAndSubset_4" (formula "68") (ifseqformula "41"))
   (rule "intersectAllFieldsFreshLocs" (formula "68") (term "0"))
   (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "103"))
   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "12")))
   (rule "disjointAndSubset_4" (formula "69") (ifseqformula "40"))
   (rule "intersectAllFieldsFreshLocs" (formula "69") (term "0"))
   (rule "replace_known_left" (formula "69") (term "1,0") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "101")))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "eqSymm" (formula "64"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "94")))
   (rule "elementOfUnion" (formula "55") (term "0,0"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfUnion" (formula "71") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "71") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "94")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "105") (term "0,0,0,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "105") (term "1,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "80") (term "0,0"))
   (builtin "One Step Simplification" (formula "80"))
   (rule "eqSymm" (formula "80") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "80") (term "0,0,0"))
   (rule "replace_known_right" (formula "80") (term "1,0,0,0") (ifseqformula "103"))
   (builtin "One Step Simplification" (formula "80"))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "94")))
   (rule "elementOfUnion" (formula "81") (term "0,0"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "eqSymm" (formula "81") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "81") (term "0,0,0"))
   (rule "replace_known_right" (formula "81") (term "1,0,0,0") (ifseqformula "103"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "1,0,0,1,0") (ifseqformula "4"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,0,1,0") (ifseqformula "4"))
   (rule "elementOfUnion" (formula "76") (term "0,0"))
   (rule "elementOfSingleton" (formula "76") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "elementOfUnion" (formula "68") (term "0,0"))
   (builtin "One Step Simplification" (formula "68"))
   (rule "eqSymm" (formula "68") (term "0,0,0"))
   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "63") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "96")))
   (rule "elementOfIntersect" (formula "89"))
   (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "92")))
   (rule "false_right" (formula "89"))
   (rule "elementOfIntersect" (formula "88"))
   (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "89")))
   (rule "false_right" (formula "88"))
   (rule "elementOfIntersect" (formula "87"))
   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "91")))
   (rule "false_right" (formula "87"))
   (rule "elementOfIntersect" (formula "86"))
   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "88")))
   (rule "false_right" (formula "86"))
   (rule "elementOfUnion" (formula "75") (term "0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "eqSymm" (formula "75") (term "0,0,0"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "eqSymm" (formula "65") (term "0,0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "0,0,0"))
   (rule "elementOfUnion" (formula "74") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "74") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "74") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "57") (term "0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "eqSymm" (formula "57") (term "0,0,0"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "eqSymm" (formula "73") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "73") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "elementOfUnion" (formula "58") (term "0,0"))
   (builtin "One Step Simplification" (formula "58"))
   (rule "eqSymm" (formula "58") (term "0,0,0"))
   (rule "elementOfUnion" (formula "103") (term "0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "103") (term "1,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "82") (term "0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "101")))
   (rule "elementOfUnion" (formula "84") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "84") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "92")))
   (rule "elementOfUnion" (formula "83") (term "0,0"))
   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "101")))
   (rule "elementOfUnion" (formula "76") (term "0,0"))
   (rule "elementOfSingleton" (formula "76") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "elementOfUnion" (formula "68") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "68") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "68"))
   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "63") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "92")))
   (rule "elementOfUnion" (formula "75") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "75") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "elementOfUnion" (formula "65") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "eqSymm" (formula "65"))
   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "74") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "74") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "92")))
   (rule "elementOfUnion" (formula "57") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "57") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "92")))
   (rule "elementOfUnion" (formula "58") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "58") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "58"))
   (rule "elementOfUnion" (formula "103") (term "0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "103") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "82") (term "0,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "eqSymm" (formula "82") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "82") (term "0,0,0"))
   (rule "replace_known_right" (formula "82") (term "1,0,0,0") (ifseqformula "101"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "elementOfUnion" (formula "84") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "84"))
   (rule "eqSymm" (formula "84") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "84") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "84") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "84"))
   (rule "elementOfUnion" (formula "83") (term "0,0"))
   (builtin "One Step Simplification" (formula "83"))
   (rule "eqSymm" (formula "83") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "83") (term "0,0,0"))
   (rule "replace_known_right" (formula "83") (term "1,0,0,0") (ifseqformula "101"))
   (builtin "One Step Simplification" (formula "83"))
   (rule "elementOfUnion" (formula "76") (term "0,0"))
   (rule "elementOfSingleton" (formula "76") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "elementOfUnion" (formula "68") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "68"))
   (rule "eqSymm" (formula "68") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "63") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "eqSymm" (formula "63") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "63") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "63") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "elementOfUnion" (formula "75") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "eqSymm" (formula "75") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "74") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "74") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "74") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "57") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "eqSymm" (formula "57") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "eqSymm" (formula "73") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "73") (term "1,0,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "elementOfUnion" (formula "58") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "58"))
   (rule "eqSymm" (formula "58") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "103") (term "0,0,0,0,0,0,0,1,1,1,0,1"))
   (builtin "One Step Simplification" (formula "103"))
   (rule "elementOfUnion" (formula "82") (term "0,0"))
   (rule "disjointAllFields" (formula "82") (term "1,0,0") (ifseqformula "41"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "elementOfInfiniteUnion" (formula "82") (term "0,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "hideAuxiliaryEq" (formula "82"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "90") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "48") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "52") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "53") (term "0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "79") (term "0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "59") (term "1,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "58") (term "1,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "52") (term "1,0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "58") (term "1,1,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "60") (term "1,1,0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "82") (term "1,1,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "79") (term "1,1,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "79") (term "1,1,0,0,1,0"))
   (rule "eqSymm" (formula "53"))
   (rule "elementOfUnion" (formula "80") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "80") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "87")))
   (rule "elementOfUnion" (formula "79") (term "0,0"))
   (rule "disjointAllFields" (formula "79") (term "1,0,0") (ifseqformula "41"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfInfiniteUnion" (formula "79") (term "0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "hideAuxiliaryEq" (formula "79"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "53") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "86") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,0,0,1,0,0"))
   (rule "replace_known_left" (formula "72") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "replace_known_left" (formula "79") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "replace_known_left" (formula "71") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfUnion" (formula "74") (term "0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,0,0"))
   (rule "elementOfUnion" (formula "66") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "66") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "elementOfUnion" (formula "73") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "73") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "elementOfSingleton" (formula "73") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "elementOfUnion" (formula "1") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,1,1,0,0") (ifseqformula "90"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfInfiniteUnion" (formula "1") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "55") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "55") (term "1,1,1,0,0") (ifseqformula "88"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfInfiniteUnion" (formula "55") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfUnion" (formula "56") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "56") (term "1,1,1,0,0") (ifseqformula "89"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfInfiniteUnion" (formula "56") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "96") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "96") (term "1,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "72") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "72") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfUnion" (formula "79") (term "0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "eqSymm" (formula "79") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "79") (term "0,0,0"))
   (rule "replace_known_right" (formula "79") (term "1,0,0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfUnion" (formula "71") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "71") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfSingleton" (formula "71") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfUnion" (formula "61") (term "0,0"))
   (rule "elementOfSingleton" (formula "61") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "93")))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "74") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "96") (term "0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (builtin "One Step Simplification" (formula "96"))
   (rule "elementOfUnion" (formula "79") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "79") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfUnion" (formula "61") (term "0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "eqSymm" (formula "61") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "61") (term "0,0,0"))
   (rule "replace_known_right" (formula "61") (term "1,0,0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "96") (term "1,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfInfiniteUnion" (formula "96") (term "0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (builtin "One Step Simplification" (formula "96"))
   (rule "elementOfSingleton" (formula "96") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1"))
   (rule "elementOfUnion" (formula "61") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "61") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfSingleton" (formula "61") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfUnion" (formula "74") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "74") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfSingleton" (formula "74") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74"))
   (rule "commuteUnion" (formula "80") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "80") (term "1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "80") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion_2" (formula "58") (term "1,0,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "58") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "1,0,1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "57") (term "1,0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "57") (term "1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "51") (term "0,0,0,1,0"))
   (rule "commuteUnion" (formula "53") (term "0,0,0,1,0"))
   (rule "nnf_imp2or" (formula "62") (term "0"))
   (rule "commuteUnion" (formula "78") (term "0,1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "78") (term "1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "85") (term "0,0,0,1,0,1,1,0"))
   (rule "commuteIntersection" (formula "75") (term "0"))
   (rule "commuteIntersection" (formula "75") (term "0"))
   (rule "intersectWithSingleton" (formula "75") (term "0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "notLeft" (formula "75"))
   (rule "elementOfSubsetOfUnion2" (formula "79") (ifseqformula "70") (ifseqformula "86"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "80"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfIntersect" (formula "79"))
   (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "80")))
   (rule "false_right" (formula "79"))
   (rule "less_than_comparison_simple" (formula "84") (term "1"))
   (builtin "One Step Simplification" (formula "84"))
   (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "84") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "84") (term "0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "84") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "84") (term "1,1,0,0,1,0"))
   (rule "nnf_imp2or" (formula "78") (term "0"))
   (rule "nnf_imp2or" (formula "59") (term "0"))
   (rule "nnf_imp2or" (formula "58") (term "0"))
   (rule "nnf_imp2or" (formula "60") (term "0"))
   (rule "nnf_imp2or" (formula "52") (term "0"))
   (rule "arrayLengthNotNegative" (formula "54") (term "1"))
   (rule "arrayLengthIsAnInt" (formula "55") (term "1"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "true_left" (formula "55"))
   (rule "nnf_imp2or" (formula "58") (term "0"))
   (rule "nnf_imp2or" (formula "77") (term "0"))
   (rule "nnf_notAnd" (formula "63") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "63") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "63") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "63") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "63") (term "0,0,0"))
   (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0,0"))
   (rule "mul_literals" (formula "63") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "96") (term "0,1,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "79") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
   (rule "times_zero_1" (formula "79") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "79") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
   (rule "mul_literals" (formula "79") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "79") (term "1,0"))
   (rule "nnf_notAnd" (formula "60") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "60") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "60") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "60") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "59") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "59") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0"))
   (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "59") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
   (rule "mul_literals" (formula "59") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "61") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "61") (term "0,0,0"))
   (rule "mul_literals" (formula "61") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "61") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0,0,0"))
   (rule "mul_literals" (formula "61") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "61") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "61") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "96") (term "0,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "52") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
   (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "58") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0"))
   (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "58") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
   (rule "mul_literals" (formula "58") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "77") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "77") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0"))
   (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "77") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
   (rule "mul_literals" (formula "77") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "96") (term "0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "96") (term "0,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "96") (term "1,0,0,0,0,0,1,0,1,1,0,1"))
   (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "96") (term "1,0,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "96") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "96") (term "0,1,0,0,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "96") (term "0,0,1,0,0,1,0,1,1,0,1"))
   (rule "add_literals" (formula "96") (term "0,0,0,1,0,0,1,0,1,1,0,1"))
   (rule "add_zero_left" (formula "96") (term "0,0,1,0,0,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,1,0,1,1,0,1"))
   (rule "nnf_imp2or" (formula "96") (term "1,0,1,0,1,1,0,1"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "66") (inst "iv=iv"))
   (rule "andLeft" (formula "66"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0"))
   (opengoal " ")
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "44"))
   (builtin "One Step Simplification" (formula "54"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "46"))
   (rule "andLeft" (formula "45"))
   (rule "andLeft" (formula "44"))
   (rule "notLeft" (formula "48"))
   (rule "notLeft" (formula "46"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "46"))
   (rule "andLeft" (formula "44"))
   (rule "notLeft" (formula "47"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "andLeft" (formula "44"))
   (rule "eqSymm" (formula "70"))
   (rule "eqSymm" (formula "68"))
   (rule "eqSymm" (formula "67"))
   (rule "eqSymm" (formula "62"))
   (rule "eqSymm" (formula "61"))
   (rule "eqSymm" (formula "59") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "75") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "55") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "83") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "47") (term "0"))
   (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "47") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "75") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "71") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "83") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "46"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "44"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "70"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "67"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "79") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "inEqSimp_commuteLeq" (formula "79") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "51"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "disjointDefinition" (formula "78"))
   (rule "disjointDefinition" (formula "77"))
   (rule "disjointDefinition" (formula "76"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0"))
   (rule "disjointDefinition" (formula "75"))
   (rule "disjointDefinition" (formula "74"))
   (rule "disjointDefinition" (formula "73"))
   (rule "disjointDefinition" (formula "72"))
   (rule "disjointDefinition" (formula "71"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "67"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "62"))
   (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "eqSymm" (formula "51"))
   (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "70"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "60") (term "0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "inEqSimp_commuteLeq" (formula "45"))
   (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "polySimp_addComm1" (formula "79") (term "0,1,0,0"))
   (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "variableDeclarationAssign" (formula "93") (term "1"))
   (rule "blockEmpty" (formula "93") (term "1,0,1"))
   (rule "variableDeclaration" (formula "93") (term "1") (newnames "b_1"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,1,0,0") (ifseqformula "55"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "80") (term "0,1,0,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,1,0,0") (ifseqformula "51"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,1,0,0") (ifseqformula "55"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "79") (term "0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "69") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "69") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "69") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "66") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "66") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "66") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "66") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "80") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "80") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "80") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0") (ifseqformula "15"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "59") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0") (ifseqformula "15"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "65") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "65") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "65") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "64") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "64") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "58") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "57") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "57") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "57") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "63") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "63") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "63") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "58") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "58") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "58") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "74") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "74") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "74") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "74") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "74") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "apply_eq_monomials" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "62") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "62") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "82") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "82") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "82") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "49") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "49") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "78") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "times_zero_1" (formula "78") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_zero_right" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "apply_eq_monomials" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "83") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "83") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "83") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "83") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "83") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "81") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "81") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "81") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,1,0") (ifseqformula "54"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,0,1,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "54") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "54") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "56") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "56") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "56") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "55") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "55") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "55") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "53") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "53") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "52") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "52") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "apply_eq_monomials" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "78") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "78") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "78") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "times_zero_1" (formula "77") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "add_zero_right" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "59") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "59") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "59") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "70") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "70") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "70") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "70"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "72") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "72") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "72") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "72") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "72") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,1,1,0"))
   (rule "apply_eq_monomials" (formula "45") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "45") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "45") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "45") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "45") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "50") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "73") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "73") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "73") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "71") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "71") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "71") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "71") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "apply_eq_monomials" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "67") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "67") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "67") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "67") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "67"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "apply_eq_monomials" (formula "48") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0") (ifseqformula "28"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "48") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_literals" (formula "48") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "48") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "48") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "add_literals" (formula "52") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "times_zero_1" (formula "52") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "add_zero_right" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "76") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "76") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "76") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "76") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "76") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "75") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "75") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "75") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "75") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_literals" (formula "77") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "times_zero_1" (formula "77") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "add_zero_right" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "93") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "93") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "93") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "93") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "93") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "add_literals" (formula "93") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "times_zero_1" (formula "93") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "add_zero_right" (formula "93") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,1,0,0") (ifseqformula "67"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "68") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "68") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "68") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "62") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "62") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "62") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "60") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "60") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "times_zero_1" (formula "60") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "add_zero_right" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "79") (term "1,0,0,1,1,0") (ifseqformula "15"))
   (rule "polySimp_rightDist" (formula "79") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "79") (term "1,0,0,1,1,0"))
   (rule "add_literals" (formula "79") (term "1,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "79") (term "1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "79") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,1,0"))
   (rule "apply_eq_monomials" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "67") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "67") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "67") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "67"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "53") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "53") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "53") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "51") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "51") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "70") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "70") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "70") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "70"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "apply_eq_monomials" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "61") (term "1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "61") (term "1,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,1,0,0") (ifseqformula "67"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
   (rule "apply_eq_monomials" (formula "50") (term "1,0,1,0,0") (ifseqformula "55"))
   (rule "polySimp_rightDist" (formula "50") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "50") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "50") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "50") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0"))
   (rule "mul_literals" (formula "47") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "83") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "83") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "83") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "83") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "83") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "78") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "78") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "78") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "78") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "72") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "93") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "93") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "93") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "93") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "68"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "67"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,1,0"))
   (rule "eqSymm" (formula "70"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
   (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "79") (term "1,1,1,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,1,1,0"))
   (rule "mul_literals" (formula "79") (term "0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "68"))
   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0"))
   (rule "eqSymm" (formula "60") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "67"))
   (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "53"))
   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "51"))
   (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0"))
   (rule "eqSymm" (formula "70"))
   (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "pullOutSelect" (formula "80") (term "1,1,0,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_0"))
   (rule "simplifySelectOfAnon" (formula "80"))
   (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "92")) (ifInst ""  (formula "4")))
   (rule "replaceKnownSelect_taclet0_0" (formula "82") (term "0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "51") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "45") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "49") (term "0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "78") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "57") (term "1,1,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "50") (term "1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "56") (term "1,1,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "56") (term "1,1,0,1,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "58") (term "1,1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "79") (term "1,1,0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "79") (term "1,1,0,1,1,0"))
   (rule "eqSymm" (formula "51"))
   (rule "pullOutSelect" (formula "69") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_0"))
   (rule "simplifySelectOfAnon" (formula "69"))
   (builtin "One Step Simplification" (formula "69"))
   (rule "eqSymm" (formula "70"))
   (rule "hideAuxiliaryEq" (formula "70"))
   (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "69") (term "1"))
   (rule "pullOutSelect" (formula "81") (term "1,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_0"))
   (rule "simplifySelectOfAnon" (formula "81"))
   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "84")))
   (rule "replaceKnownSelect_taclet3_0" (formula "60") (term "1,0,1,0,2,0,1,0"))
   (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
   (rule "simplifySelectOfAnon" (formula "66"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "replaceKnownSelect_taclet4_0" (formula "75") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "76") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "77") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "74") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "73") (term "0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "78") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "79") (term "1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "72") (term "0,0"))
   (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_0"))
   (rule "simplifySelectOfAnon" (formula "65"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "replaceKnownSelect_taclet5_0" (formula "62") (term "0,0"))
   (rule "eqSymm" (formula "66"))
   (rule "hideAuxiliaryEq" (formula "66"))
   (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "65") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "62") (term "0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_0"))
   (rule "simplifySelectOfAnon" (formula "64"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "replaceKnownSelect_taclet7_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "65"))
   (rule "hideAuxiliaryEq" (formula "65"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "64") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "61"))
   (rule "pullOutSelect" (formula "63") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_0"))
   (rule "simplifySelectOfAnon" (formula "63"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "replaceKnownSelect_taclet9_0" (formula "62") (term "0,0"))
   (rule "replaceKnownSelect_taclet9_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "64"))
   (rule "hideAuxiliaryEq" (formula "64"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "63") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "62") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "61") (term "0,0"))
   (rule "eqSymm" (formula "62"))
   (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_server_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")) (ifInst ""  (formula "5")))
   (rule "replaceKnownSelect_taclet11_0" (formula "53") (term "1"))
   (rule "replaceKnownSelect_taclet11_0" (formula "69") (term "1,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "70") (term "1,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "83") (term "1,2,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "83") (term "1,1,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "83") (term "0,0,0,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "61") (term "1,1,1,1,0"))
   (rule "replaceKnownSelect_taclet11_0" (formula "83") (term "1,0,0,1,0,0"))
   (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_correctResult_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "replaceKnownSelect_taclet12_0" (formula "55") (term "0,0"))
   (rule "replaceKnownSelect_taclet12_0" (formula "80") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet12_0" (formula "61") (term "1,0,1,0"))
   (rule "eqSymm" (formula "55"))
   (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfCandidates_0"))
   (rule "simplifySelectOfAnon" (formula "56"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "replaceKnownSelect_taclet13_0" (formula "72") (term "1"))
   (rule "replaceKnownSelect_taclet13_0" (formula "55") (term "0"))
   (rule "simplifySelectOfAnon" (formula "72"))
   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "88")))
   (rule "eqSymm" (formula "57"))
   (rule "hideAuxiliaryEq" (formula "57"))
   (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "56") (term "1"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "71") (term "1"))
   (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_0"))
   (rule "simplifySelectOfAnon" (formula "57"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "replaceKnownSelect_taclet16_0" (formula "53") (term "0"))
   (rule "replaceKnownSelect_taclet16_0" (formula "71") (term "1"))
   (rule "replaceKnownSelect_taclet16_0" (formula "74") (term "1,0"))
   (rule "simplifySelectOfAnon" (formula "71"))
   (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "88")))
   (rule "eqSymm" (formula "58"))
   (rule "hideAuxiliaryEq" (formula "58"))
   (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "70") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "53") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "57") (term "1"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "73") (term "1,0"))
   (rule "eqSymm" (formula "73"))
   (rule "elementOfUnion" (formula "83") (term "0,0"))
   (rule "elementOfSingleton" (formula "83") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "96")))
   (rule "elementOfUnion" (formula "72") (term "0,0"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfUnion" (formula "68") (term "0,0"))
   (rule "elementOfSingleton" (formula "68") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "68"))
   (rule "intersectWithSingleton" (formula "77") (term "0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "notLeft" (formula "77"))
   (rule "intersectWithSingleton" (formula "77") (term "0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "notLeft" (formula "77"))
   (rule "intersectWithSingleton" (formula "77") (term "0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "notLeft" (formula "77"))
   (rule "intersectWithSingleton" (formula "76") (term "0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "notLeft" (formula "76"))
   (rule "elementOfUnion" (formula "67") (term "0,0"))
   (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "elementOfUnion" (formula "66") (term "0,0"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "lenOfSeqDef" (formula "63") (term "1"))
   (rule "polySimp_elimSub" (formula "63") (term "1,1"))
   (rule "mul_literals" (formula "63") (term "1,1,1"))
   (rule "add_zero_right" (formula "63") (term "1,1"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1"))
   (rule "add_zero_right" (formula "63") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,1"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "lenOfSeqDef" (formula "63") (term "0"))
   (rule "polySimp_elimSub" (formula "63") (term "1,0"))
   (rule "times_zero_2" (formula "63") (term "1,1,0"))
   (rule "add_zero_right" (formula "63") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0"))
   (rule "add_zero_right" (formula "63") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "true_left" (formula "63"))
   (rule "lenOfSeqDef" (formula "63") (term "1"))
   (rule "polySimp_elimSub" (formula "63") (term "1,1"))
   (rule "times_zero_2" (formula "63") (term "1,1,1"))
   (rule "add_zero_right" (formula "63") (term "1,1"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,1"))
   (rule "add_zero_right" (formula "63") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,1"))
   (rule "lenOfSeqDef" (formula "63") (term "0"))
   (rule "polySimp_elimSub" (formula "63") (term "1,0"))
   (rule "mul_literals" (formula "63") (term "1,1,0"))
   (rule "add_zero_right" (formula "63") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0"))
   (rule "add_zero_right" (formula "63") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "63") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "true_left" (formula "63"))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "94")))
   (rule "elementOfUnion" (formula "78") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "78") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "85")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "69") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "69") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "85")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "68") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "68") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "85")))
   (rule "elementOfUnion" (formula "57") (term "0,0"))
   (rule "elementOfSingleton" (formula "57") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "elementOfUnion" (formula "77") (term "0,0"))
   (rule "elementOfSingleton" (formula "77") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "94")))
   (rule "elementOfUnion" (formula "70") (term "0,0"))
   (rule "elementOfSingleton" (formula "70") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "70"))
   (rule "disjointAndSubset_3" (formula "67") (ifseqformula "41"))
   (rule "intersectAllFieldsFreshLocs" (formula "67") (term "0"))
   (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "3")))
   (rule "disjointAndSubset_3" (formula "68") (ifseqformula "40"))
   (rule "intersectAllFieldsFreshLocs" (formula "68") (term "0"))
   (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "96"))
   (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "6")))
   (rule "disjointAndSubset_3" (formula "69") (ifseqformula "42"))
   (rule "intersectAllFieldsFreshLocs" (formula "69") (term "0"))
   (rule "replace_known_left" (formula "69") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "98")))
   (rule "elementOfUnion" (formula "66") (term "0,0"))
   (rule "elementOfSingleton" (formula "66") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "eqSymm" (formula "65"))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "elementOfUnion" (formula "63") (term "0,0"))
   (rule "elementOfSingleton" (formula "63") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "63"))
   (rule "pullOutSelect" (formula "62") (term "1,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_0"))
   (rule "simplifySelectOfAnon" (formula "62"))
   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "98")))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "57") (term "0,0"))
   (rule "elementOfSingleton" (formula "57") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "elementOfUnion" (formula "81") (term "0,0"))
   (rule "elementOfSingleton" (formula "81") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "98")))
   (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_0"))
   (rule "simplifySelectOfAnon" (formula "75"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "eqSymm" (formula "76"))
   (rule "hideAuxiliaryEq" (formula "76"))
   (rule "replaceKnownAuxiliaryConstant_taclet21_0" (formula "75") (term "1"))
   (rule "elementOfUnion" (formula "74") (term "0,0"))
   (rule "elementOfSingleton" (formula "74") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "commuteUnion" (formula "71") (term "1"))
   (rule "elementOfUnion" (formula "67") (term "0,0"))
   (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "elementOfUnion" (formula "65") (term "0,0"))
   (rule "elementOfSingleton" (formula "65") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "eqSymm" (formula "65"))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "62") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "98")))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "57") (term "0,0"))
   (rule "elementOfSingleton" (formula "57") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "elementOfUnion" (formula "81") (term "0,0"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "eqSymm" (formula "81") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "81") (term "0,0,0"))
   (rule "replace_known_right" (formula "81") (term "1,0,0,0") (ifseqformula "98"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "elementOfUnion" (formula "75") (term "0,0"))
   (rule "elementOfSingleton" (formula "75") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "elementOfUnion" (formula "74") (term "0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,0,0"))
   (rule "elementOfSubsetOfUnion2" (formula "87") (ifseqformula "71") (ifseqformula "94"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "86") (ifseqformula "71") (ifseqformula "93"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "87"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "88") (ifseqformula "71") (ifseqformula "95"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "89"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfSubsetOfUnion2" (formula "87") (ifseqformula "71") (ifseqformula "98"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfUnion" (formula "67") (term "0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "eqSymm" (formula "67") (term "0,0,0"))
   (rule "elementOfUnion" (formula "64") (term "0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "eqSymm" (formula "64") (term "0,0,0"))
   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "62") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "93")))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "eqSymm" (formula "2") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
   (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "102"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "eqSymm" (formula "82") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "82") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "82") (term "1,0,0,0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "0,0,0"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "eqSymm" (formula "73") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "73") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "73") (term "1,0,0,0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "73"))
   (rule "elementOfUnion" (formula "56") (term "0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "eqSymm" (formula "56") (term "0,0,0"))
   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "eqSymm" (formula "72") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "72") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "72") (term "1,0,0,0,0") (ifseqformula "93"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfUnion" (formula "57") (term "0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "eqSymm" (formula "57") (term "0,0,0"))
   (rule "elementOfUnion" (formula "81") (term "0,0"))
   (rule "elementOfSingleton" (formula "81") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "102")))
   (rule "elementOfUnion" (formula "75") (term "0,0"))
   (rule "elementOfSingleton" (formula "75") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "74") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "disjointAndSubset_4" (formula "71") (ifseqformula "40"))
   (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "69"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "true_left" (formula "71"))
   (rule "disjointAndSubset_4" (formula "71") (ifseqformula "42"))
   (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "70"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "true_left" (formula "71"))
   (rule "disjointAndSubset_4" (formula "71") (ifseqformula "41"))
   (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "68"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "true_left" (formula "71"))
   (rule "elementOfIntersect" (formula "87"))
   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "91")))
   (rule "false_right" (formula "87"))
   (rule "elementOfIntersect" (formula "86"))
   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "88")))
   (rule "false_right" (formula "86"))
   (rule "elementOfIntersect" (formula "85"))
   (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "88")))
   (rule "false_right" (formula "85"))
   (rule "elementOfIntersect" (formula "84"))
   (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "85")))
   (rule "false_right" (formula "84"))
   (rule "elementOfUnion" (formula "67") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "67") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "elementOfUnion" (formula "64") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "64") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "eqSymm" (formula "64"))
   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "62") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "98")))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "82") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "73") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "73") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "56") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "56") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "72") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "89")))
   (rule "elementOfUnion" (formula "57") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "57") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "57"))
   (rule "elementOfUnion" (formula "81") (term "0,0"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "eqSymm" (formula "81") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "81") (term "0,0,0"))
   (rule "replace_known_right" (formula "81") (term "1,0,0,0") (ifseqformula "98"))
   (builtin "One Step Simplification" (formula "81"))
   (rule "elementOfUnion" (formula "75") (term "0,0"))
   (rule "elementOfSingleton" (formula "75") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "67") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "eqSymm" (formula "67") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "62"))
   (rule "eqSymm" (formula "62") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "62") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "62") (term "1,0,0,0,0") (ifseqformula "89"))
   (builtin "One Step Simplification" (formula "62"))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "eqSymm" (formula "2") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
   (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "98"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "elementOfUnion" (formula "82") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "eqSymm" (formula "82") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "82") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "82") (term "1,0,0,0,0") (ifseqformula "89"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "elementOfUnion" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "0,1,0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,0,1,0") (ifseqformula "5"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1,0,0,1,0") (ifseqformula "5"))
   (rule "elementOfUnion" (formula "75") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "eqSymm" (formula "75") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "75") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "75") (term "1,0,0,0,0") (ifseqformula "91"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "elementOfUnion" (formula "58") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "58"))
   (rule "eqSymm" (formula "58") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "74") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "74") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "74") (term "1,0,0,0,0") (ifseqformula "91"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "59") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "59"))
   (rule "eqSymm" (formula "59") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "83") (term "0,0"))
   (rule "disjointAllFields" (formula "83") (term "1,0,0") (ifseqformula "42"))
   (builtin "One Step Simplification" (formula "83"))
   (rule "elementOfInfiniteUnion" (formula "83") (term "0,0"))
   (builtin "One Step Simplification" (formula "83"))
   (rule "elementOfSingleton" (formula "83") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "83"))
   (rule "hideAuxiliaryEq" (formula "83"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "89") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "55") (term "0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "53") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "49") (term "0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "80") (term "0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "60") (term "1,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "59") (term "1,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "53") (term "1,0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "80") (term "1,1,0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "59") (term "1,1,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "61") (term "1,1,0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "80") (term "1,1,0,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "82") (term "1,1,0,1,1,0"))
   (rule "eqSymm" (formula "54"))
   (rule "elementOfUnion" (formula "75") (term "0,0"))
   (builtin "One Step Simplification" (formula "75"))
   (rule "eqSymm" (formula "75") (term "0,0,0"))
   (rule "elementOfUnion" (formula "74") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "74") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfSingleton" (formula "74") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "67") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "67") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "elementOfSingleton" (formula "67") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "elementOfUnion" (formula "62") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "62") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "86")))
   (rule "elementOfUnion" (formula "2") (term "0,0"))
   (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "42"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "elementOfInfiniteUnion" (formula "2") (term "0,0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "hideAuxiliaryEq" (formula "2"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "85") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "53") (term "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,2,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "61") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "72") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "71") (term "1,0,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "79") (term "1,0,0,1,0,0"))
   (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "replace_known_left" (formula "79") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "replace_known_left" (formula "71") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "replace_known_left" (formula "72") (term "0,1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfUnion" (formula "1") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,1,1,0,0") (ifseqformula "89"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfInfiniteUnion" (formula "1") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "55") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "55") (term "1,1,1,0,0") (ifseqformula "87"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfInfiniteUnion" (formula "55") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfSingleton" (formula "55") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "elementOfUnion" (formula "56") (term "1,1,0,0"))
   (rule "replace_known_right" (formula "56") (term "1,1,1,0,0") (ifseqformula "88"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfInfiniteUnion" (formula "56") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfSingleton" (formula "56") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "56"))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "74") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfUnion" (formula "61") (term "0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "eqSymm" (formula "61") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "61") (term "0,0,0"))
   (rule "replace_known_right" (formula "61") (term "1,0,0,0") (ifseqformula "92"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfUnion" (formula "79") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "79") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfSingleton" (formula "79") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "79"))
   (rule "elementOfUnion" (formula "71") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "71") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfSingleton" (formula "71") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "71"))
   (rule "elementOfUnion" (formula "72") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "72") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfSingleton" (formula "72") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "72"))
   (rule "elementOfUnion" (formula "74") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "61") (term "0,0"))
   (rule "elementOfInfiniteUnion" (formula "61") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "elementOfSingleton" (formula "61") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "61"))
   (rule "less_than_comparison_simple" (formula "95") (term "1"))
   (builtin "One Step Simplification" (formula "95"))
   (rule "inEqSimp_ltToLeq" (formula "95") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "95") (term "0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,1,0"))
   (rule "elementOfUnion" (formula "74") (term "1,1,0,0"))
   (rule "elementOfInfiniteUnion" (formula "74") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "elementOfSingleton" (formula "74") (term "1,0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "74"))
   (rule "eqSymm" (formula "74"))
   (rule "commuteUnion_2" (formula "80") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "80") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "80") (term "1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "57") (term "1,0,1,0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "57") (term "1,0,1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "57") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "58") (term "1,0,1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "1,0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "58") (term "1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "1,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "57") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "53") (term "0,0,0,1,0"))
   (rule "nnf_imp2or" (formula "60") (term "0"))
   (rule "commuteUnion" (formula "52") (term "0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "51") (term "1,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "1,0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "nnf_imp2or" (formula "62") (term "0"))
   (rule "commuteUnion" (formula "78") (term "1,0,1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,0,0,1,0,1,0,1,1,0"))
   (rule "commuteIntersection" (formula "76") (term "0"))
   (rule "intersectWithSingleton" (formula "76") (term "0"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "notLeft" (formula "76"))
   (rule "elementOfSubsetOfUnion2" (formula "80") (ifseqformula "70") (ifseqformula "86"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "81"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "elementOfIntersect" (formula "80"))
   (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "81")))
   (rule "false_right" (formula "80"))
   (rule "commuteIntersection" (formula "75") (term "0"))
   (rule "nnf_imp2or" (formula "78") (term "0"))
   (rule "nnf_imp2or" (formula "58") (term "0"))
   (rule "nnf_imp2or" (formula "59") (term "0"))
   (rule "nnf_imp2or" (formula "57") (term "0"))
   (rule "nnf_imp2or" (formula "52") (term "0"))
   (rule "nnf_imp2or" (formula "76") (term "0"))
   (rule "nnf_notAnd" (formula "60") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "60") (term "0,0,0"))
   (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "60") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
   (rule "mul_literals" (formula "60") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "60") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "60") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "62") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "62") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "62") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
   (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
   (rule "mul_literals" (formula "62") (term "1,0,0,0"))
   (rule "arrayLengthNotNegative" (formula "54") (term "1"))
   (rule "arrayLengthIsAnInt" (formula "55") (term "1"))
   (builtin "One Step Simplification" (formula "55"))
   (rule "true_left" (formula "55"))
   (rule "nnf_imp2or" (formula "79") (term "1,0"))
   (rule "nnf_notAnd" (formula "79") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "79") (term "0,0,0"))
   (rule "times_zero_1" (formula "79") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "79") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "0,0,0"))
   (rule "mul_literals" (formula "79") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "79") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "79") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "79") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "59") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "59") (term "0,0,0"))
   (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "59") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0"))
   (rule "mul_literals" (formula "59") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "59") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "59") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "59") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "60") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "60") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "60") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "60") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "60") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0"))
   (rule "mul_literals" (formula "60") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "58") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0"))
   (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "58") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0"))
   (rule "mul_literals" (formula "58") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "58") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "58") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "52") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
   (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "77") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "77") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "77") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0"))
   (rule "times_zero_1" (formula "77") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "77") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
   (rule "mul_literals" (formula "77") (term "1,0,0,0"))
   (rule "commute_or" (formula "74") (term "0,0"))
   (rule "commute_or" (formula "67") (term "0,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "66") (inst "iv=iv"))
   (rule "andLeft" (formula "66"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "67") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0"))
   (rule "getOfSeqDef" (formula "67") (term "0,1,0"))
   (rule "castDel" (formula "67") (term "1,0,1,0"))
   (rule "castDel" (formula "67") (term "2,0,1,0"))
   (rule "add_zero_right" (formula "67") (term "0,2,1,1,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "67") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "67") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "67") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "67") (term "1,0,1,0,0") (ifseqformula "66"))
   (rule "polySimp_rightDist" (formula "67") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "67") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "67") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "67") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "67") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "67") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0"))
   (rule "lenOfSeqDef" (formula "66") (term "0"))
   (rule "polySimp_elimSub" (formula "66") (term "1,0"))
   (rule "times_zero_2" (formula "66") (term "1,1,0"))
   (rule "add_zero_right" (formula "66") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0"))
   (rule "add_zero_right" (formula "66") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "66") (term "0,0,0"))
   (rule "getOfSeqDefEQ" (formula "67") (term "1,1,0") (ifseqformula "68"))
   (rule "castDel" (formula "67") (term "2,1,1,0"))
   (rule "castDel" (formula "67") (term "1,1,1,0"))
   (rule "add_zero_right" (formula "67") (term "0,2,1,1,1,1,1,0"))
   (rule "eqSymm" (formula "67") (term "1,0"))
   (rule "polySimp_elimSub" (formula "67") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "67") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "67") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1,0"))
   (builtin "One Step Simplification" (formula "67"))
   (rule "true_left" (formula "67"))
   (rule "lenOfSeqDefEQ" (formula "66") (term "1") (ifseqformula "67"))
   (rule "eqSymm" (formula "66"))
   (rule "polySimp_elimSub" (formula "66") (term "1,0"))
   (rule "times_zero_2" (formula "66") (term "1,1,0"))
   (rule "add_zero_right" (formula "66") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0"))
   (rule "eqSymm" (formula "66"))
   (rule "replace_known_left" (formula "66") (term "0,1") (ifseqformula "47"))
   (builtin "One Step Simplification" (formula "66"))
   (rule "eqSymm" (formula "66") (term "1"))
   (rule "commute_or" (formula "1") (term "0,0"))
   (rule "commute_or" (formula "56") (term "0,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "65") (inst "iv=iv"))
   (rule "andLeft" (formula "65"))
   (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0"))
   (rule "getOfSeqDef" (formula "66") (term "0,1,0"))
   (rule "castDel" (formula "66") (term "1,0,1,0"))
   (rule "castDel" (formula "66") (term "2,0,1,0"))
   (rule "polySimp_elimSub" (formula "66") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "66") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "66") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,0"))
   (rule "applyEqRigid" (formula "66") (term "0,0,1,0,0,1,0,0") (ifseqformula "67"))
   (rule "applyEqRigid" (formula "65") (term "0,0") (ifseqformula "67"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "true_left" (formula "65"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
   (rule "getOfSeqDefEQ" (formula "65") (term "1,1,0") (ifseqformula "66"))
   (rule "castDel" (formula "65") (term "2,1,1,0"))
   (rule "castDel" (formula "65") (term "1,1,1,0"))
   (rule "eqSymm" (formula "65") (term "1,0"))
   (rule "polySimp_elimSub" (formula "65") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "65") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "true_left" (formula "65"))
   (rule "commute_or" (formula "57") (term "0,0"))
   (rule "commute_or" (formula "76") (term "0,1"))
   (rule "commuteUnion_2" (formula "96") (term "1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "53") (term "1,0"))
   (rule "commuteUnion" (formula "61") (term "0,1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "51") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "63") (term "0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "shift_paren_or" (formula "80") (term "0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "64") (inst "iv=iv"))
   (rule "andLeft" (formula "64"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0"))
   (rule "getOfSeqDef" (formula "65") (term "0,1,0"))
   (rule "castDel" (formula "65") (term "1,0,1,0"))
   (rule "castDel" (formula "65") (term "2,0,1,0"))
   (rule "add_zero_right" (formula "65") (term "0,2,1,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "65") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "65") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "65") (term "1,0,1,0,0") (ifseqformula "64"))
   (rule "polySimp_rightDist" (formula "65") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "65") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "65") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "65") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "65") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0"))
   (rule "lenOfSeqDef" (formula "64") (term "0"))
   (rule "polySimp_elimSub" (formula "64") (term "1,0"))
   (rule "times_zero_2" (formula "64") (term "1,1,0"))
   (rule "add_zero_right" (formula "64") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0"))
   (rule "add_zero_right" (formula "64") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "64") (term "0,0,0"))
   (rule "getOfSeqDefEQ" (formula "65") (term "1,1,0") (ifseqformula "66"))
   (rule "castDel" (formula "65") (term "1,1,1,0"))
   (rule "castDel" (formula "65") (term "2,1,1,0"))
   (rule "add_zero_right" (formula "65") (term "0,2,1,1,1,1,0"))
   (rule "eqSymm" (formula "65") (term "1,0"))
   (rule "polySimp_elimSub" (formula "65") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "65") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "65") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,1,0"))
   (builtin "One Step Simplification" (formula "65"))
   (rule "true_left" (formula "65"))
   (rule "lenOfSeqDefEQ" (formula "64") (term "1") (ifseqformula "65"))
   (rule "eqSymm" (formula "64"))
   (rule "polySimp_elimSub" (formula "64") (term "1,0"))
   (rule "times_zero_2" (formula "64") (term "1,1,0"))
   (rule "add_zero_right" (formula "64") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0"))
   (rule "eqSymm" (formula "64"))
   (rule "replace_known_left" (formula "64") (term "0,1") (ifseqformula "47"))
   (builtin "One Step Simplification" (formula "64"))
   (rule "eqSymm" (formula "64") (term "1"))
   (rule "commuteUnion_2" (formula "59") (term "1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "1,0,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "58") (term "1,0,0,0,1,0,1,0,1,1,0"))
   (rule "methodCallEmpty" (formula "96") (term "1"))
   (rule "commuteUnion" (formula "58") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "58") (term "1,0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "58") (term "1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "52") (term "0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "78") (term "1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,1,0,0,0,1,0,0,1,1,0"))
   (rule "commuteUnion" (formula "78") (term "0,0,0,0,0,1,0,1,0,1,1,0"))
   (rule "commute_or" (formula "75") (term "0,0,0"))
   (rule "commute_or" (formula "68") (term "0,0,0"))
   (rule "methodCallUnfoldTarget" (formula "96") (term "1,0,1") (inst "#v0=s"))
   (rule "variableDeclaration" (formula "96") (term "1,0,1") (newnames "s"))
   (rule "commute_or" (formula "66"))
   (rule "inEqSimp_or_weaken1" (formula "66"))
   (rule "add_zero_right" (formula "66") (term "1,0"))
   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "47")))
   (rule "true_left" (formula "66"))
   (rule "commute_or" (formula "75") (term "0,0,1"))
   (rule "commuteUnion_2" (formula "95") (term "1,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "51") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion" (formula "79") (term "0,1,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "79") (term "0,1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "79") (term "0,0,0,1,0,0,1,0"))
   (rule "cnf_rightDist" (formula "58") (term "0"))
   (rule "distr_forallAnd" (formula "58"))
   (rule "andLeft" (formula "58"))
   (rule "commute_or_2" (formula "58") (term "0"))
   (rule "commute_or" (formula "59") (term "0"))
   (rule "commute_or" (formula "58") (term "0,0"))
   (rule "cnf_rightDist" (formula "78") (term "0"))
   (rule "distr_forallAnd" (formula "78"))
   (rule "andLeft" (formula "78"))
   (rule "commute_or" (formula "79") (term "0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,1,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "97") (term "0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "51") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "64") (term "1,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,1,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "81") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "58") (term "0,0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "58") (term "0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "78") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "78") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "79") (term "0,1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "0,1,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "52") (term "1,1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "97") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "51") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "64") (term "1,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "81") (term "1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "81") (term "1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "58") (term "0,0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "58") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "78") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "78") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "79") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,0,0,1,0,0,0,1,0"))
   (rule "emptyModality" (formula "97") (term "1"))
   (builtin "One Step Simplification" (formula "97"))
   (rule "impRight" (formula "97"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "82"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "assignment_read_attribute_this" (formula "98"))
   (builtin "One Step Simplification" (formula "98"))
   (rule "pullOutSelect" (formula "98") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_server_1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "7")))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1"))
   (rule "polySimp_elimOne" (formula "2") (term "1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "1,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "1,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,1,0,0") (ifseqformula "97"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "97"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "43"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "98") (term "0,1,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "1,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "54") (term "1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "63") (term "0,0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion" (formula "82") (term "0,0,1,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "82") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion" (formula "79") (term "1,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "80") (term "0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "98") (term "1,0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "53") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "0,0,0,1,0"))
   (rule "commuteUnion" (formula "65") (term "0,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "65") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "1,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "59") (term "1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "80") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "80") (term "0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "1,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "98") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "1,0"))
   (rule "commuteUnion" (formula "65") (term "0,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "65") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion" (formula "59") (term "0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "98") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion" (formula "62") (term "1,0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "65") (term "0,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion" (formula "82") (term "0,0,0,1,0,0,0,1,0,0"))
   (rule "commute_or_2" (formula "82") (term "0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "98") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commute_or_2" (formula "82") (term "0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "60") (term "1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,1,0,1,0,0,0"))
   (rule "commuteUnion" (formula "59") (term "0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "98") (term "0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "52") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "65") (term "0,0,1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "59") (term "0,0,0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "79") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "80") (term "1,0,0,1,0"))
   (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "98") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "52") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "1,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "65") (term "0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,0,0,1,0,0,1,0"))
   (rule "commute_or_2" (formula "82") (term "0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,1,0,1,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "76") (inst "iv=iv"))
   (builtin "One Step Simplification" (formula "76"))
   (rule "andLeft" (formula "76"))
   (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0"))
   (rule "getOfSeqSingleton" (formula "77") (term "1,1,0"))
   (rule "castDel" (formula "77") (term "2,1,1,0"))
   (rule "castDel" (formula "77") (term "1,1,1,0"))
   (rule "eqSymm" (formula "77") (term "1,0"))
   (rule "apply_eq_monomials" (formula "77") (term "1,0,0,1,0,0") (ifseqformula "76"))
   (rule "polySimp_rightDist" (formula "77") (term "0,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "77") (term "0,0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "77") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "77") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "77") (term "1,1,0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
   (rule "add_zero_left" (formula "77") (term "0,1,0,0"))
   (rule "nnf_imp2or" (formula "77") (term "0"))
   (rule "nnf_notAnd" (formula "77") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "77") (term "1,0,0"))
   (rule "mul_literals" (formula "77") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "77") (term "1,0,0"))
   (rule "mul_literals" (formula "77") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "77") (term "0,0,0"))
   (rule "mul_literals" (formula "77") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "0,0,0"))
   (rule "mul_literals" (formula "77") (term "1,0,0,0"))
   (rule "inEqSimp_or_antiSymm0" (formula "77") (term "0,0"))
   (rule "add_literals" (formula "77") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "77") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "commute_or" (formula "77") (term "0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "typeEqDerived2" (formula "77") (term "0,0,1") (ifseqformula "22"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "castDel" (formula "77") (term "1,1"))
   (rule "castDel" (formula "77") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "77"))
   (rule "eqSymm" (formula "77"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "59") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "81") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "82") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "83") (term "1,0") (ifseqformula "47"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "1,0") (ifseqformula "47"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "47"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "81") (inst "iv=iv"))
   (rule "andLeft" (formula "81"))
   (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "82") (term "0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0"))
   (rule "getOfSeqDef" (formula "82") (term "0,1,0"))
   (rule "castDel" (formula "82") (term "1,0,1,0"))
   (rule "castDel" (formula "82") (term "2,0,1,0"))
   (rule "add_zero_right" (formula "82") (term "1,0,1,0"))
   (rule "polySimp_elimSub" (formula "82") (term "1,1,0,0,1,0"))
   (rule "times_zero_2" (formula "82") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "82") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0"))
   (rule "apply_eq_monomials" (formula "82") (term "1,0,1,0,0") (ifseqformula "81"))
   (rule "polySimp_rightDist" (formula "82") (term "0,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "82") (term "1,0,1,0,0"))
   (rule "add_literals" (formula "82") (term "1,1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "82") (term "1,1,0,1,0,0"))
   (rule "add_zero_right" (formula "82") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "82") (term "0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "82") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0"))
   (rule "lenOfSeqDef" (formula "81") (term "0"))
   (rule "eqSymm" (formula "81"))
   (rule "polySimp_elimSub" (formula "81") (term "1,1"))
   (rule "mul_literals" (formula "81") (term "1,1,1"))
   (rule "add_zero_right" (formula "81") (term "1,1"))
   (rule "inEqSimp_ltToLeq" (formula "81") (term "0,1"))
   (rule "add_zero_right" (formula "81") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "81") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "81") (term "0,0,1"))
   (rule "getOfSeqDefEQ" (formula "82") (term "1,1,0") (ifseqformula "83"))
   (rule "castDel" (formula "82") (term "1,1,1,0"))
   (rule "castDel" (formula "82") (term "2,1,1,0"))
   (rule "add_zero_right" (formula "82") (term "1,1,1,0"))
   (rule "eqSymm" (formula "82") (term "1,0"))
   (rule "polySimp_elimSub" (formula "82") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "82") (term "1,1,1,0,0,1,0"))
   (rule "add_zero_right" (formula "82") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "82") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "82") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,1,0"))
   (builtin "One Step Simplification" (formula "82"))
   (rule "true_left" (formula "82"))
   (rule "lenOfSeqDefEQ" (formula "81") (term "0") (ifseqformula "82"))
   (rule "polySimp_elimSub" (formula "81") (term "1,0"))
   (rule "mul_literals" (formula "81") (term "1,1,0"))
   (rule "add_zero_right" (formula "81") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0"))
   (rule "eqSymm" (formula "81"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "103") (term "0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "54") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "67") (term "0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,1,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,1,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commute_or_2" (formula "87") (term "0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "103") (term "0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "103") (term "0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion" (formula "63") (term "0,0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "54") (term "0,0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "103") (term "0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "53") (term "0,0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "67") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,1,0,0,0"))
   (rule "commuteUnion" (formula "60") (term "0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "87") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "103") (term "0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "67") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "103") (term "0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,1,0,0,0"))
   (rule "commuteUnion" (formula "60") (term "0,0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "83") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "87") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "87") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion" (formula "103") (term "0,0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,1,0,0,0"))
   (rule "lenNonNegative" (formula "78") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "78"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "1,0,0,0,1,0,0"))
   (rule "commuteUnion" (formula "88") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "64") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,1,0,0,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,0,1,0,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,1,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "63") (term "0,1,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "54") (term "1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,1,0,1,1,0"))
   (rule "commuteUnion" (formula "67") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "54") (term "0,1,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "53") (term "0,0,0,0,1,0"))
   (rule "commuteUnion" (formula "67") (term "0,0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,0,1,0,1,0,0"))
   (rule "commuteUnion" (formula "55") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "60") (term "0,1,0,0,0,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "104") (term "0,1,0,1,0,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "55") (term "0,0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,0,1,0"))
   (rule "commuteUnion_2" (formula "67") (term "0,1,0,0,1,0,2,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "1,0"))
   (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "55") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
   (builtin "Use Operation Contract" (formula "104") (newnames "heapBefore_onPostResult,exc_0,heapAfter_onPostResult,anon_heap_onPostResult") (contract "de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server::onPostResult()].JML operation contract.0#de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server::onPostResult()].JML operation contract.1"))
   (branch "Post (onPostResult)"
      (builtin "One Step Simplification" (formula "106"))
      (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
      (rule "andLeft" (formula "90"))
      (rule "andLeft" (formula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,1,1,0") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,1,1,1") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,1,1,1") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,1,1,0") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,0,1,1,1") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,0,1,1,0") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,0,0,1,1,1") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,0,0,0,0,1,1,1") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,1,0,0,0,1,1,0") (ifseqformula "91"))
      (rule "typeEqDerived" (formula "92") (term "0,0,0,0,0,1,1,0") (ifseqformula "91"))
      (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "91")) (ifInst ""  (formula "91")))
      (rule "true_left" (formula "92"))
      (rule "distributeIntersection_2" (formula "90") (term "1,0"))
      (rule "intersectWithSingleton" (formula "90") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "pullOutSelect" (formula "90") (term "0,0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_2"))
      (rule "simplifySelectOfAnon" (formula "90"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "90") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "eqSymm" (formula "90") (term "1,0,0,0"))
      (rule "eqSymm" (formula "90") (term "0,0,0,0"))
      (rule "commute_or_2" (formula "90") (term "0,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commute_or" (formula "90") (term "0,0,0"))
      (rule "commuteIntersection" (formula "91") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "91"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "methodCallEmpty" (formula "108") (term "1"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "91") (term "1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
      (rule "tryEmpty" (formula "108") (term "1"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "emptyModality" (formula "108") (term "1"))
      (builtin "One Step Simplification" (formula "108"))
      (rule "eqSymm" (formula "108"))
      (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "81"))
      (builtin "One Step Simplification" (formula "78"))
      (rule "qeq_literals" (formula "78"))
      (rule "true_left" (formula "78"))
      (rule "applyEq" (formula "42") (term "0") (ifseqformula "81"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "qeq_literals" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "79"))
      (builtin "One Step Simplification" (formula "78"))
      (rule "castDel" (formula "78") (term "0"))
      (builtin "One Step Simplification" (formula "78"))
      (rule "true_left" (formula "78"))
      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "applyEq" (formula "18") (term "0") (ifseqformula "55"))
      (rule "eqSymm" (formula "18"))
      (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "74"))
      (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
      (rule "qeq_literals" (formula "35"))
      (rule "true_left" (formula "35"))
      (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "76"))
      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "36"))
      (rule "castDel" (formula "36") (term "0"))
      (builtin "One Step Simplification" (formula "36"))
      (rule "true_left" (formula "36"))
      (rule "applyEq" (formula "67") (term "0") (ifseqformula "84"))
      (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "87") (term "2") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "89") (term "2") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "91") (term "2") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "70") (term "1,0") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "88") (term "2") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "69") (term "1,0") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "90") (term "2") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "67"))
      (rule "hideAuxiliaryEq" (formula "67"))
      (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "applyEq" (formula "72") (term "2,0,0") (ifseqformula "35"))
      (rule "applyEq" (formula "45") (term "0") (ifseqformula "15"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
      (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "36"))
      (rule "eqSymm" (formula "36") (term "1"))
      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "qeq_literals" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "true_left" (formula "32"))
      (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "qeq_literals" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "67"))
      (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "18"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
      (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "57") (term "1,1,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "54") (term "1,1,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "72") (term "1,1,1,0") (ifseqformula "17"))
      (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "47"))
      (rule "applyEq" (formula "25") (term "1") (ifseqformula "47"))
      (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "47"))
      (rule "elementOfSubsetOfUnion2" (formula "82") (ifseqformula "64") (ifseqformula "87"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "elementOfSubsetOfUnion2" (formula "82") (ifseqformula "64") (ifseqformula "91"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "83"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "elementOfSubsetOfUnion2" (formula "85") (ifseqformula "64") (ifseqformula "90"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "86"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "elementOfSubsetOfUnion2" (formula "87") (ifseqformula "64") (ifseqformula "92"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "88"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "disjointAndSubset_4" (formula "64") (ifseqformula "35"))
      (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "63"))
      (builtin "One Step Simplification" (formula "64"))
      (rule "true_left" (formula "64"))
      (rule "disjointAndSubset_4" (formula "64") (ifseqformula "33"))
      (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "62"))
      (builtin "One Step Simplification" (formula "64"))
      (rule "true_left" (formula "64"))
      (rule "elementOfSubsetOfUnion2" (formula "84") (ifseqformula "64") (ifseqformula "90"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "disjointAndSubset_4" (formula "64") (ifseqformula "34"))
      (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "61"))
      (builtin "One Step Simplification" (formula "64"))
      (rule "true_left" (formula "64"))
      (rule "elementOfIntersect" (formula "84"))
      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "87")))
      (rule "false_right" (formula "84"))
      (rule "elementOfIntersect" (formula "83"))
      (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "85")))
      (rule "false_right" (formula "83"))
      (rule "elementOfIntersect" (formula "82"))
      (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "86")))
      (rule "false_right" (formula "82"))
      (rule "elementOfIntersect" (formula "81"))
      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "86")))
      (rule "false_right" (formula "81"))
      (rule "pullOutSelect" (formula "96") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_numberOfVoters_2"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "79"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "97"))
      (rule "elementOfIntersect" (formula "81"))
      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "82")))
      (rule "false_right" (formula "81"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "84"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "89"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "commute_or" (formula "32"))
      (rule "inEqSimp_or_weaken1" (formula "32"))
      (rule "add_zero_right" (formula "32") (term "1,0"))
      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "14")))
      (rule "true_left" (formula "32"))
      (rule "commuteUnion_2" (formula "52") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "72") (term "1,0,0,1,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "19") (term "0,0,0"))
      (rule "disjointDefinition" (formula "19") (term "1,0,0,0"))
      (rule "commuteUnion_2" (formula "51") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "71") (term "0,0,1,0,1,0,1,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "50") (term "0,0,0"))
      (rule "replaceKnownSelect_taclet26_0" (formula "50") (term "0,1,0,0,0"))
      (rule "disjointDefinition" (formula "50") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "nonNull" (formula "11") (inst "i=i_1"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "95")))
      (rule "sub_literals" (formula "11") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "95"))
      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Setup" (formula "42"))
      (rule "andLeft" (formula "42"))
      (rule "andLeft" (formula "42"))
      (rule "notLeft" (formula "44"))
      (rule "notLeft" (formula "43"))
      (rule "andLeft" (formula "42"))
      (rule "notLeft" (formula "43"))
      (rule "nonNull" (formula "42") (inst "i=i_1"))
      (rule "sub_literals" (formula "42") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "greater_literals" (formula "42") (term "0,1"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "andLeft" (formula "42"))
      (rule "notLeft" (formula "42"))
      (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0"))
      (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0"))
      (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_correctResult_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "94"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_BB_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")) (ifInst ""  (formula "9")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "97")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "1,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,1,0,0") (ifseqformula "97"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "97"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "80") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_server_3"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")) (ifInst ""  (formula "9")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "96"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "96"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "81") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_2"))
      (rule "applyEq" (formula "43") (term "0,0,1,0,0") (ifseqformula "42"))
      (rule "applyEq" (formula "80") (term "0") (ifseqformula "42"))
      (rule "simplifySelectOfAnon" (formula "42"))
      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "95")) (ifInst ""  (formula "8")))
      (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
      (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "42") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "disjointAllFields" (formula "42") (term "1,0,0") (ifseqformula "32"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "95")))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "95")))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "95")))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "95")))
      (rule "elementOfUnion" (formula "42") (term "0,0"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "eqSymm" (formula "42") (term "1,0,0"))
      (rule "eqSymm" (formula "42") (term "0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "42") (term "1,0,0"))
      (rule "replace_known_right" (formula "42") (term "1,1,0,0") (ifseqformula "95"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "sortsDisjointModuloNull" (formula "42") (term "0,0"))
      (rule "replace_known_right" (formula "42") (term "1,0,0") (ifseqformula "95"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
      (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "42"))
      (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
      (rule "hideAuxiliaryEq" (formula "42"))
      (rule "applyEq" (formula "42") (term "1,1,1,0,0") (ifseqformula "15"))
      (rule "commuteUnion_2" (formula "50") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "74") (term "1,0,0,1,0"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "44"))
      (rule "replaceKnownSelect_taclet26_0" (formula "44") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet26_0" (formula "44") (term "0,1,0,0,0,0,1,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet26_0" (formula "44") (term "0,0,0,0,0,0,1,0,0,0,0,0,0"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "45"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "46"))
      (rule "andLeft" (formula "44"))
      (rule "notLeft" (formula "46"))
      (rule "andLeft" (formula "46"))
      (rule "notLeft" (formula "45"))
      (rule "andLeft" (formula "44"))
      (rule "andLeft" (formula "46"))
      (rule "notLeft" (formula "45"))
      (rule "notLeft" (formula "44"))
      (rule "andLeft" (formula "44"))
      (rule "eqSymm" (formula "51"))
      (rule "eqSymm" (formula "50"))
      (rule "inEqSimp_commuteLeq" (formula "53"))
      (rule "inEqSimp_commuteLeq" (formula "52"))
      (rule "disjointDefinition" (formula "49"))
      (builtin "One Step Simplification" (formula "49"))
      (rule "notLeft" (formula "49"))
      (rule "eqSymm" (formula "89"))
      (rule "disjointDefinition" (formula "48"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "notLeft" (formula "48"))
      (rule "eqSymm" (formula "88"))
      (rule "disjointDefinition" (formula "47"))
      (builtin "One Step Simplification" (formula "47"))
      (rule "notLeft" (formula "47"))
      (rule "eqSymm" (formula "87"))
      (rule "disjointDefinition" (formula "46"))
      (rule "disjointDefinition" (formula "45"))
      (rule "disjointDefinition" (formula "44"))
      (rule "sortsDisjointModuloNull" (formula "89"))
      (rule "replace_known_right" (formula "89") (term "1") (ifseqformula "90"))
      (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "91")))
      (rule "false_right" (formula "89"))
      (rule "sortsDisjointModuloNull" (formula "88"))
      (rule "replace_known_right" (formula "88") (term "1") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "90")))
      (rule "false_right" (formula "88"))
      (rule "sortsDisjointModuloNull" (formula "87"))
      (rule "replace_known_right" (formula "87") (term "0") (ifseqformula "88"))
      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "105")))
      (rule "false_right" (formula "87"))
      (rule "pullOutSelect" (formula "52") (term "1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_receiver_0"))
      (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "52"))
      (rule "applyEq" (formula "90") (term "0") (ifseqformula "52"))
      (rule "simplifySelectOfAnon" (formula "52"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "105")) (ifInst ""  (formula "6")))
      (rule "elementOfUnion" (formula "52") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "52") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "elementOfUnion" (formula "52") (term "0,0"))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "105")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "105")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "105")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "105")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "eqSymm" (formula "52") (term "1,0,0,0"))
      (rule "eqSymm" (formula "52") (term "0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "52") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "52") (term "1,1,0,0,0") (ifseqformula "105"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "sortsDisjointModuloNull" (formula "52") (term "0,0,0"))
      (rule "replace_known_right" (formula "52") (term "1,0,0,0") (ifseqformula "105"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "7")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_3"))
      (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")) (ifInst ""  (formula "8")))
      (rule "eqSymm" (formula "50"))
      (rule "pullOutSelect" (formula "90") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_3"))
      (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "48") (term "0,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")) (ifInst ""  (formula "9")))
      (rule "eqSymm" (formula "50"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfCandidates_1"))
      (rule "applyEq" (formula "51") (term "0") (ifseqformula "53"))
      (rule "simplifySelectOfAnon" (formula "53"))
      (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "109")) (ifInst ""  (formula "9")))
      (rule "eqSymm" (formula "51"))
      (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "51"))
      (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "51"))
      (rule "hideAuxiliaryEq" (formula "51"))
      (rule "applyEq" (formula "52") (term "2,0") (ifseqformula "28"))
      (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfVoters_1"))
      (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
      (rule "simplifySelectOfAnon" (formula "51"))
      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "109")) (ifInst ""  (formula "9")))
      (rule "eqSymm" (formula "50"))
      (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "50"))
      (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "50"))
      (rule "hideAuxiliaryEq" (formula "50"))
      (rule "applyEq" (formula "50") (term "2,0") (ifseqformula "27"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfUnion" (formula "52") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "52") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "elementOfUnion" (formula "50") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "50") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "elementOfSingleton" (formula "50") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_0"))
      (rule "simplifySelectOfAnon" (formula "54"))
      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "94")))
      (rule "eqSymm" (formula "55"))
      (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "55"))
      (rule "hideAuxiliaryEq" (formula "55"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "52") (term "0,0"))
      (rule "elementOfUnion" (formula "50") (term "0,0"))
      (rule "elementOfUnion" (formula "54") (term "0,0,0"))
      (rule "elementOfInfiniteUnion" (formula "54") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "54"))
      (rule "elementOfSingleton" (formula "54") (term "1,0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "54"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "2") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "50") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "50") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "54") (term "0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "2") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "50") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "50") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "54") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "54") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "93")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "2") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "50") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "50") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "54") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "54") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "93")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "2") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "eqSymm" (formula "2") (term "1,0,0,0"))
      (rule "eqSymm" (formula "2") (term "0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "108"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0"))
      (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "108"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "67"))
      (rule "applyEqReverse" (formula "49") (term "0,1,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "92") (term "0") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "elementOfUnion" (formula "51") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "51") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "107")))
      (rule "elementOfUnion" (formula "49") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "49") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "107")))
      (rule "elementOfUnion" (formula "53") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "53") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "92")))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "1,0,0,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,1,0,0,0") (ifseqformula "107"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "107"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "84"))
      (rule "applyEqReverse" (formula "49") (term "0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "90") (term "0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "47") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "elementOfUnion" (formula "50") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "eqSymm" (formula "50") (term "0,0,0,0"))
      (rule "eqSymm" (formula "50") (term "1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "50") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "50") (term "1,0,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "sortsDisjointModuloNull" (formula "50") (term "0,0,0"))
      (rule "replace_known_right" (formula "50") (term "1,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "elementOfUnion" (formula "48") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "eqSymm" (formula "48") (term "0,0,0,0"))
      (rule "eqSymm" (formula "48") (term "1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "48") (term "1,0,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,0"))
      (rule "replace_known_right" (formula "48") (term "1,0,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "elementOfUnion" (formula "52") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "52") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "91")))
      (rule "elementOfUnion" (formula "52") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "eqSymm" (formula "52") (term "0,0,0,0,0"))
      (rule "eqSymm" (formula "52") (term "1,0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "52") (term "0,0,0,0,0"))
      (rule "replace_known_right" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "91"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "sortsDisjointModuloNull" (formula "52") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "52") (term "1,0,0,0,0") (ifseqformula "91"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "notLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "19"))
      (rule "notLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "eqSymm" (formula "24"))
      (rule "eqSymm" (formula "23"))
      (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "101"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "100")))
      (rule "applyEqReverse" (formula "41") (term "0,1,1,0,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "74") (term "1,0,1,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "86") (term "0,1,1") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "68") (term "0,1,1") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "37") (term "0,1") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "60") (term "0,2,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "91") (term "0,1,1,1,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "65") (term "0,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "76") (term "0,1,1,0,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "89") (term "0,0,0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "66") (term "0,1") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "112") (term "0") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "73") (term "0,1,1,0,0") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replace_known_right" (formula "85") (term "1,0,0,0,0") (ifseqformula "98"))
      (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "97")))
      (rule "replace_known_right" (formula "87") (term "1,0,0,1") (ifseqformula "98"))
      (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "97")))
      (rule "replace_known_right" (formula "94") (term "1,0,0") (ifseqformula "97"))
      (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "98")))
      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "97"))
      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "98")) (ifInst ""  (formula "120")))
      (rule "closeFalse" (formula "2"))
   )
   (branch "Exceptional Post (onPostResult)"
      (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
      (builtin "One Step Simplification" (formula "106"))
      (rule "andLeft" (formula "90"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "1,0") (ifseqformula "90"))
      (builtin "One Step Simplification" (formula "91"))
      (rule "andLeft" (formula "91"))
      (rule "andLeft" (formula "92"))
      (rule "andLeft" (formula "91"))
      (rule "notLeft" (formula "91"))
      (rule "eqSymm" (formula "92") (term "1,0,1,1,0"))
      (rule "replace_known_right" (formula "93") (term "0,0,1") (ifseqformula "94"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "replace_known_right" (formula "92") (term "0,0,1") (ifseqformula "94"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "inEqSimp_ltToLeq" (formula "93") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "92") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "93") (term "0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "92") (term "0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "92") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "93") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "92") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "93") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "93") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "93") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "92") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "92") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "92") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "92") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "92") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "92") (term "0,1,0,0,1,1,0"))
      (rule "distributeIntersection_2" (formula "90") (term "1,0"))
      (rule "intersectWithSingleton" (formula "90") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "pullOutSelect" (formula "93") (term "1,0,1,0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_1"))
      (rule "simplifySelectOfAnon" (formula "93"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet26_0" (formula "92") (term "1,0,1,0,0,0"))
      (rule "elementOfUnion" (formula "93") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "93") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "elementOfUnion" (formula "93") (term "0,0"))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "108")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "eqSymm" (formula "93") (term "1,0,0,0"))
      (rule "eqSymm" (formula "93") (term "0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "93") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "93") (term "1,1,0,0,0") (ifseqformula "108"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "sortsDisjointModuloNull" (formula "93") (term "0,0,0"))
      (rule "replace_known_right" (formula "93") (term "1,0,0,0") (ifseqformula "108"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "pullOutSelect" (formula "92") (term "1,1,1,0,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_correctResult_1"))
      (rule "simplifySelectOfAnon" (formula "92"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "replaceKnownSelect_taclet27_0" (formula "93") (term "0,0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet27_0" (formula "93") (term "0,0,1,0,1,0"))
      (rule "eqSymm" (formula "93") (term "1,0,1,0"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "92") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfSingleton" (formula "92") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "replace_known_right" (formula "92") (term "1,0,0") (ifseqformula "106"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "elementOfSingleton" (formula "92") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "elementOfSingleton" (formula "92") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "elementOfSingleton" (formula "92") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (rule "elementOfSingleton" (formula "92") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "elementOfUnion" (formula "92") (term "0,0"))
      (builtin "One Step Simplification" (formula "92"))
      (rule "eqSymm" (formula "92") (term "1,0,0"))
      (rule "eqSymm" (formula "92") (term "0,0,0"))
      (rule "pullOutSelect" (formula "93") (term "1,0,1,0,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_1"))
      (rule "simplifySelectOfAnon" (formula "93"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "110")) (ifInst ""  (formula "5")))
      (rule "eqSymm" (formula "94") (term "1,0,1,1,0"))
      (rule "elementOfUnion" (formula "93") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "93") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "elementOfUnion" (formula "93") (term "0,0"))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "110")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "110")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "110")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "93") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "110")))
      (rule "elementOfUnion" (formula "93") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "eqSymm" (formula "93") (term "0,0,0,0"))
      (rule "eqSymm" (formula "93") (term "1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "93") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "93") (term "1,0,0,0,0") (ifseqformula "110"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "sortsDisjointModuloNull" (formula "93") (term "0,0,0"))
      (rule "replace_known_right" (formula "93") (term "1,0,0,0") (ifseqformula "110"))
      (builtin "One Step Simplification" (formula "93"))
      (rule "pullOutSelect" (formula "96") (term "0,1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfVoters_0"))
      (rule "simplifySelectOfAnon" (formula "96"))
      (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "111")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet29_0" (formula "94") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "97") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "97") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "94") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "94") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "97") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "97") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "97") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "97") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "97") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "94") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "94") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "94") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "94") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "94") (term "1,1,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "96") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "96") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "96"))
      (rule "elementOfSingleton" (formula "96") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "96"))
      (rule "pullOutSelect" (formula "94") (term "0,1,0,0,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfCandidates_0"))
      (rule "simplifySelectOfAnon" (formula "94"))
      (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "112")) (ifInst ""  (formula "5")))
      (rule "replaceKnownSelect_taclet30_0" (formula "95") (term "0,1,0,1,0"))
      (rule "eqSymm" (formula "95") (term "1,0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "95") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "95") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "95") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "95") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "95") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "95") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "95") (term "1,1,1,0,0,1,1,0"))
      (rule "pullOutSelect" (formula "90") (term "0,0,1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_1"))
      (rule "simplifySelectOfAnon" (formula "90"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "98") (term "0,0"))
      (rule "elementOfUnion" (formula "95") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "95") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "95"))
      (rule "elementOfSingleton" (formula "95") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "95"))
      (rule "elementOfUnion" (formula "90") (term "0,0"))
      (rule "elementOfInfiniteUnion" (formula "90") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,1,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "98") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "95") (term "0,0"))
      (rule "elementOfUnion" (formula "90") (term "0,0"))
      (rule "elementOfUnion" (formula "98") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "95") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "98") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "95") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "98") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "98") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "95") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "98") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "98"))
      (rule "eqSymm" (formula "98") (term "1,0,0,0"))
      (rule "eqSymm" (formula "98") (term "0,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "98") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "98") (term "1,1,0,0,0") (ifseqformula "113"))
      (builtin "One Step Simplification" (formula "98"))
      (rule "sortsDisjointModuloNull" (formula "98") (term "0,0,0"))
      (rule "replace_known_right" (formula "98") (term "1,0,0,0") (ifseqformula "113"))
      (builtin "One Step Simplification" (formula "98"))
      (rule "elementOfUnion" (formula "95") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "95") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "113")))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "90") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "elementOfUnion" (formula "95") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "95"))
      (rule "eqSymm" (formula "95") (term "0,0,0,0"))
      (rule "eqSymm" (formula "95") (term "1,0,0,0"))
      (rule "sortsDisjointModuloNull" (formula "95") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "95") (term "1,0,0,0,0") (ifseqformula "113"))
      (builtin "One Step Simplification" (formula "95"))
      (rule "sortsDisjointModuloNull" (formula "95") (term "0,0,0"))
      (rule "replace_known_right" (formula "95") (term "1,0,0,0") (ifseqformula "113"))
      (builtin "One Step Simplification" (formula "95"))
      (rule "elementOfUnion" (formula "90") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "90"))
      (rule "eqSymm" (formula "90") (term "1,0,0,0"))
      (rule "eqSymm" (formula "90") (term "0,0,0,0"))
      (rule "nnf_imp2or" (formula "99") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "96") (term "0,0,0"))
      (rule "nnf_imp2or" (formula "96") (term "0,1,1,0"))
      (rule "commute_or_2" (formula "99") (term "1"))
      (rule "commute_or_2" (formula "96") (term "1"))
      (rule "nnf_notAnd" (formula "99") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "99") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "99") (term "1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "99") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "99") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "99") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "99") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "99") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "99") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "99") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "99") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "99") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "99") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "99") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "99") (term "1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "96") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "96") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "96") (term "1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "96") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "96") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "96") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "96") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "96") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "96") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "96") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "96") (term "0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "96") (term "0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "96") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "96") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "96") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "96") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "96") (term "0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "96") (term "0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "96") (term "0,0,0,1,0,0,1,1,0"))
      (rule "add_zero_left" (formula "96") (term "0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0,1,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "methodCallThrow" (formula "116") (term "1"))
      (rule "commuteIntersection" (formula "91") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "91"))
      (rule "commute_or_2" (formula "90") (term "0,0"))
      (rule "commute_or_2" (formula "99") (term "0,0,1"))
      (rule "commute_or_2" (formula "96") (term "0,0,1"))
      (rule "commute_or_2" (formula "99") (term "0,1"))
      (rule "commute_or_2" (formula "99") (term "1"))
      (rule "commute_or_2" (formula "96") (term "0,1"))
      (rule "commute_or_2" (formula "96") (term "1"))
      (rule "commute_or" (formula "90") (term "0,0,0"))
      (rule "commute_or" (formula "99") (term "0,0,0,1"))
      (rule "commute_or_2" (formula "99") (term "0,0,1"))
      (rule "commute_or_2" (formula "99") (term "0,1"))
      (rule "commute_or" (formula "96") (term "0,0,0,1"))
      (rule "commute_or_2" (formula "96") (term "0,0,1"))
      (rule "commute_or_2" (formula "96") (term "0,1"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "91") (term "1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "tryCatchThrow" (formula "116") (term "1"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "85") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion" (formula "85") (term "0,0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "arrayLengthIsAnInt" (formula "96") (term "0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "96"))
      (rule "true_left" (formula "96"))
      (rule "arrayLengthNotNegative" (formula "96") (term "0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "85") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "88") (term "0,0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (builtin "Use Dependency Contract" (formula "55") (ifInst ""  (formula "16")) (contract "de.uni.trier.infsec.eVotingVerif.core.Server[java.lang.Object::<inv>()].JML accessible clause.0"))
      (rule "wellFormedAnon" (formula "101") (term "1,1,0,0,0"))
      (rule "replace_known_left" (formula "101") (term "0,1") (ifseqformula "55"))
      (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "115")) (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "48")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
      (rule "true_left" (formula "101"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,0,1,0"))
      (rule "ifElseUnfold" (formula "117") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "117") (term "1") (newnames "x"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "88") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "equality_comparison_simple" (formula "117") (term "1"))
      (builtin "One Step Simplification" (formula "117"))
      (rule "replace_known_right" (formula "117") (term "0,0,1,0") (ifseqformula "101"))
      (builtin "One Step Simplification" (formula "117"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
      (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
      (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
      (rule "ifElseSplit" (formula "117"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "118"))
         (rule "true_left" (formula "1"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion" (formula "61") (term "0,0,0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "61") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion" (formula "84") (term "0,0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
         (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
         (rule "ifElseSplit" (formula "117"))
         (branch "if exc_0 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")))
            (rule "instanceof_static_type" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "117") (term "1") (newnames "e"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
            (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
            (rule "reference_type_cast" (formula "117"))
            (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "117"))
               (rule "assignment" (formula "117") (term "1"))
               (builtin "One Step Simplification" (formula "117"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion" (formula "62") (term "0,0,0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "0,1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "62") (term "0,1,0,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "commuteUnion_2" (formula "84") (term "1,0,1,0,1,0"))
               (rule "emptyModality" (formula "117") (term "1"))
               (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "101")))
               (rule "closeTrue" (formula "117"))
            )
            (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
               (rule "false_right" (formula "118"))
               (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "101")))
               (rule "instanceof_static_type" (formula "117") (term "0"))
               (builtin "One Step Simplification" (formula "117"))
               (rule "closeTrue" (formula "117"))
            )
         )
         (branch "if exc_0 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "102")))
            (rule "notLeft" (formula "1"))
            (rule "instanceof_static_type" (formula "101") (term "0"))
            (builtin "One Step Simplification" (formula "101"))
            (rule "closeTrue" (formula "101"))
         )
      )
   )
   (branch "Pre (onPostResult)"
      (opengoal " ")
   )
   (branch "Null reference (s = null)"
      (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "101")))
      (rule "closeTrue" (formula "104"))
   )
)
)

}
