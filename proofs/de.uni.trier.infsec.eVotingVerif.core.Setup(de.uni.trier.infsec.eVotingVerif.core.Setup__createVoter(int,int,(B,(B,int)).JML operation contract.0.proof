\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 28 16:15:41 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Apr 28 16:15:41 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createVoter(int,int,[B,[B,int)].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createVoter(int,int,[B,[B,int)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "42f99e9c721a9ef9e96050bade8b36d328f0eb55"))

(autoModeTime "63543")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "17"))
(rule "eqSymm" (formula "27") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "27") (term "1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "23"))
(builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "disjointDefinition" (formula "20"))
(rule "disjointDefinition" (formula "22"))
(rule "disjointDefinition" (formula "21"))
(rule "disjointDefinition" (formula "19"))
(rule "disjointDefinition" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "disjointDefinition" (formula "27") (term "0,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "assignment" (formula "27") (term "1"))
(builtin "One Step Simplification" (formula "27"))
(rule "apply_eq_monomials" (formula "15") (term "1,0,0,1,0,0") (ifseqformula "11"))
(rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "15") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "15") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "15") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "15") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "12"))
(rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0b" (formula "16") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0"))
(rule "mul_literals" (formula "16") (term "0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "27") (term "0,1,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
(rule "elementOfUnion" (formula "27") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "27") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "1,1,1,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "15") (term "0"))
(rule "nnf_imp2or" (formula "16") (term "0"))
(rule "nnf_notAnd" (formula "15") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
(rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "16") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
(rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
(rule "mul_literals" (formula "16") (term "1,0,0,0"))
(rule "cnf_rightDist" (formula "15") (term "0"))
(rule "distr_forallAnd" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "commute_or" (formula "16") (term "0"))
(rule "cnf_rightDist" (formula "17") (term "0"))
(rule "distr_forallAnd" (formula "17"))
(rule "andLeft" (formula "17"))
(rule "commute_or" (formula "18") (term "0"))
(rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_createVoter,savedHeapBefore_createVoter"))
(builtin "One Step Simplification" (formula "29"))
(rule "variableDeclarationAssign" (formula "29") (term "1"))
(rule "variableDeclaration" (formula "29") (term "1") (newnames "sender"))
(rule "arrayLengthIsAnInt" (formula "14") (term "0"))
(builtin "One Step Simplification" (formula "14"))
(rule "true_left" (formula "14"))
(rule "arrayLengthIsAnInt" (formula "12") (term "0"))
(builtin "One Step Simplification" (formula "12"))
(rule "true_left" (formula "12"))
(rule "lenNonNegative" (formula "20") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "arrayLengthIsAnInt" (formula "11") (term "0"))
(builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "lenNonNegative" (formula "21") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "arrayLengthNotNegative" (formula "12") (term "0"))
(rule "arrayLengthNotNegative" (formula "11") (term "0"))
(rule "arrayLengthNotNegative" (formula "16") (term "0"))
(rule "lenNonNegative" (formula "22") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "22"))
(builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_registerSender,result,exc_0,heapAfter_registerSender,anon_heap_registerSender") (contract "de.uni.trier.infsec.functionalities.smt.SMT[de.uni.trier.infsec.functionalities.smt.SMT::registerSender(int)].JML operation contract.0"))
(branch "Post (registerSender)"
   (builtin "One Step Simplification" (formula "32"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "andLeft" (formula "32"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,1,0") (ifseqformula "32"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "33"))
   (rule "typeEqDerived" (formula "36") (term "0,1,1") (ifseqformula "33"))
   (rule "typeEqDerived" (formula "36") (term "0,1,0,1") (ifseqformula "33"))
   (rule "typeEqDerived" (formula "36") (term "0,1,0,0,1") (ifseqformula "33"))
   (rule "typeEqDerived" (formula "36") (term "0,0,0,0,0,1") (ifseqformula "33"))
   (rule "typeEqDerived" (formula "36") (term "0,1,0,0,0,1") (ifseqformula "33"))
   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
   (rule "true_left" (formula "36"))
   (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "33"))
   (builtin "One Step Simplification" (formula "35"))
   (rule "andLeft" (formula "35"))
   (rule "andLeft" (formula "36"))
   (rule "andLeft" (formula "35"))
   (rule "andLeft" (formula "38"))
   (rule "andLeft" (formula "36"))
   (rule "andLeft" (formula "40"))
   (rule "notLeft" (formula "37"))
   (rule "notLeft" (formula "36"))
   (rule "andLeft" (formula "39"))
   (rule "andLeft" (formula "40"))
   (rule "andLeft" (formula "41"))
   (rule "notLeft" (formula "42"))
   (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "43"))
   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
   (rule "assignment" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "choice"))
   (rule "disjointAndSubset_3" (formula "36") (ifseqformula "27"))
   (rule "intersectAllFieldsFreshLocs" (formula "36") (term "0"))
   (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "48"))
   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "2")))
   (rule "disjointAndSubset_3" (formula "37") (ifseqformula "29"))
   (rule "intersectAllFieldsFreshLocs" (formula "37") (term "0"))
   (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "47"))
   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "4")))
   (rule "disjointAndSubset_3" (formula "38") (ifseqformula "28"))
   (rule "intersectAllFieldsFreshLocs" (formula "38") (term "0"))
   (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "49"))
   (builtin "One Step Simplification" (formula "38"))
   (rule "disjointAndSubset_3" (formula "39") (ifseqformula "30"))
   (rule "intersectAllFieldsFreshLocs" (formula "39") (term "0"))
   (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "48")))
   (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
   (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "replaceKnownSelect_taclet0_0" (formula "36") (term "1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "37") (term "1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "39") (term "1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "38") (term "1,0,1"))
   (rule "elementOfUnion" (formula "40") (term "0,0"))
   (rule "disjointAndSubset_3" (formula "41") (ifseqformula "29"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_3" (formula "41") (ifseqformula "27"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_3" (formula "41") (ifseqformula "28"))
   (rule "intersectAllFieldsFreshLocs" (formula "41") (term "0"))
   (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "52"))
   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "38")))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_3" (formula "41") (ifseqformula "30"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "39"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "elementOfUnion" (formula "40") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "40") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "42"))
   (rule "eqSymm" (formula "43"))
   (rule "hideAuxiliaryEq" (formula "43"))
   (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "42") (term "1"))
   (builtin "One Step Simplification" (formula "42"))
   (rule "elementOfUnion" (formula "42") (term "0,0"))
   (rule "elementOfUnion" (formula "42") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "42") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "42"))
   (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "42"))
   (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "43"))
   (rule "eqSymm" (formula "44"))
   (rule "hideAuxiliaryEq" (formula "44"))
   (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "43") (term "1"))
   (rule "elementOfUnion" (formula "43") (term "0,0"))
   (rule "elementOfUnion" (formula "43") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "43") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "43"))
   (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "44"))
   (rule "eqSymm" (formula "45"))
   (rule "hideAuxiliaryEq" (formula "45"))
   (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "44") (term "1"))
   (builtin "One Step Simplification" (formula "44"))
   (rule "elementOfUnion" (formula "44") (term "0,0"))
   (rule "elementOfUnion" (formula "44") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "44") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "44"))
   (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "44"))
   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "eqSymm" (formula "46"))
   (rule "hideAuxiliaryEq" (formula "46"))
   (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "45") (term "1"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "elementOfUnion" (formula "45") (term "0,0"))
   (rule "elementOfUnion" (formula "45") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "45") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_0"))
   (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "32"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "eqSymm" (formula "47"))
   (rule "hideAuxiliaryEq" (formula "47"))
   (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "46") (term "1"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "elementOfUnion" (formula "46") (term "0,0"))
   (rule "elementOfUnion" (formula "46") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "46") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "commuteUnion" (formula "32") (term "1,1,0"))
   (rule "commuteUnion" (formula "41") (term "1"))
   (rule "disjointAndSubset_4" (formula "41") (ifseqformula "29"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_4" (formula "41") (ifseqformula "27"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_4" (formula "41") (ifseqformula "28"))
   (rule "intersectAllFieldsFreshLocs" (formula "41") (term "0"))
   (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "52"))
   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "38")))
   (rule "true_left" (formula "41"))
   (rule "disjointAndSubset_4" (formula "41") (ifseqformula "30"))
   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "39"))
   (builtin "One Step Simplification" (formula "41"))
   (rule "true_left" (formula "41"))
   (rule "condition" (formula "53") (term "1"))
   (rule "commuteUnion" (formula "32") (term "1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "52"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "39"))
   (rule "ifElseUnfold" (formula "54") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_1"))
   (rule "activeUseStaticFieldReadAccess" (formula "54") (term "1"))
   (rule "assignment_read_static_attribute" (formula "54") (term "1"))
   (builtin "One Step Simplification" (formula "54"))
   (rule "pullOutSelect" (formula "54") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_secret_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfUnion" (formula "1") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
   (rule "andLeft" (formula "45"))
   (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
   (rule "lenOfSeqConcat" (formula "45") (term "1"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "polySimp_addComm0" (formula "45") (term "1"))
   (rule "apply_eq_monomials" (formula "46") (term "1,0,0,1,0,0") (ifseqformula "45"))
   (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "46") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "46") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "46") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "46") (term "1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
   (rule "getOfSeqConcat" (formula "46") (term "1,1,0"))
   (rule "eqSymm" (formula "46") (term "1,0"))
   (rule "polySimp_elimSub" (formula "46") (term "1,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "46") (term "1,2,0,1,0"))
   (rule "getOfSeqSingleton" (formula "46") (term "2,0,1,0"))
   (rule "castDel" (formula "46") (term "1,2,0,1,0"))
   (rule "castDel" (formula "46") (term "2,2,0,1,0"))
   (rule "polySimp_sepPosMonomial" (formula "46") (term "0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0"))
   (rule "nnf_imp2or" (formula "46") (term "0"))
   (rule "nnf_notAnd" (formula "46") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
   (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "46") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
   (rule "mul_literals" (formula "46") (term "1,0,0,0"))
   (rule "ifthenelse_to_or_left" (formula "46") (term "1,0"))
   (rule "eqSymm" (formula "46") (term "1,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "46") (term "0,0,1,0"))
   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,1,0"))
   (rule "add_literals" (formula "46") (term "0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "46") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "46") (term "1,0,0,1,0"))
   (rule "cnf_rightDist" (formula "46") (term "0"))
   (rule "distr_forallAnd" (formula "46"))
   (rule "andLeft" (formula "46"))
   (rule "commute_or_2" (formula "47") (term "0"))
   (rule "shift_paren_or" (formula "46") (term "0"))
   (rule "commute_or_2" (formula "46") (term "0,0"))
   (rule "inEqSimp_or_subsumption3" (formula "46") (term "0,0"))
   (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
   (rule "leq_literals" (formula "46") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "shift_paren_or" (formula "47") (term "0,0"))
   (rule "commute_or" (formula "47") (term "0,0,0"))
   (rule "inEqSimp_or_antiSymm1" (formula "47") (term "0,0"))
   (rule "polySimp_homoEq" (formula "47") (term "0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "47") (term "0,1,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "47") (term "1,0,1,1,0,0"))
   (rule "add_literals" (formula "47") (term "0,1,0,1,1,0,0"))
   (rule "add_zero_left" (formula "47") (term "1,0,1,1,0,0"))
   (rule "polySimp_addAssoc" (formula "47") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "47") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "47") (term "0,0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "47") (term "0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "47") (term "1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "47") (term "0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "commute_or_2" (formula "47") (term "0"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "castDel" (formula "47") (term "0,0,0"))
   (rule "castDel" (formula "47") (term "1,1,1,0"))
   (rule "castDel" (formula "47") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "instanceof_static_type" (formula "47") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "eqSymm" (formula "47") (term "1"))
   (rule "ifElseSplit" (formula "58"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "59"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "assignment_array2" (formula "59"))
      (branch "Normal Execution (_choices0 != null)"
         (builtin "One Step Simplification" (formula "59"))
         (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
         (rule "blockEmpty" (formula "60") (term "1"))
         (rule "eval_order_array_access1" (formula "60") (term "1") (inst "#v0=v_arr"))
         (rule "variableDeclarationAssign" (formula "60") (term "1"))
         (rule "variableDeclaration" (formula "60") (term "1") (newnames "v_arr_2"))
         (rule "assignment_read_attribute_this" (formula "60"))
         (builtin "One Step Simplification" (formula "60"))
         (rule "pullOutSelect" (formula "60") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
         (rule "eval_order_array_access3" (formula "61") (inst "#v1=v") (inst "#v2=x") (inst "#v0=v_arr_3"))
         (branch "ArrayIndexOutOfBounds (_i<0 | _i>=v_arr_2.length)"
            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "11")))
            (rule "inEqSimp_ltRight" (formula "61"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "52"))
            (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "4"))
            (rule "ifEqualsTRUE" (formula "5"))
            (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "50"))
            (rule "lenOfSeqConcat" (formula "47") (term "0"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0"))
            (rule "add_zero_left" (formula "47") (term "0,0"))
            (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
            (rule "add_literals" (formula "47") (term "1,0"))
            (rule "times_zero_1" (formula "47") (term "0"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "true_left" (formula "47"))
            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
            (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
            (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "getOfSeqConcat" (formula "45") (term "0,1"))
            (rule "polySimp_elimSub" (formula "45") (term "1,2,0,1"))
            (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0,1"))
            (rule "add_literals" (formula "45") (term "1,1,2,0,1"))
            (rule "times_zero_1" (formula "45") (term "1,2,0,1"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "castDel" (formula "45") (term "2,0,1"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1"))
            (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0,1"))
            (rule "add_literals" (formula "45") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "45") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "45") (term "0,0,0,1"))
            (rule "leq_literals" (formula "45") (term "0,0,1"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "true_left" (formula "45"))
            (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "44"))
            (rule "eqSymm" (formula "44") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
            (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
            (rule "castDel" (formula "44") (term "2,1,1,1,0"))
            (rule "castDel" (formula "44") (term "1,1,1,1,0"))
            (rule "eqSymm" (formula "44") (term "1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
            (rule "elementOfSingleton" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
            (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_literals" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Normal Execution"
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "v_arr_3"))
            (rule "assignment" (formula "61") (term "1"))
            (builtin "One Step Simplification" (formula "61"))
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "61") (term "1"))
            (builtin "One Step Simplification" (formula "61"))
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "v_1"))
            (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "3"))
            (rule "ifEqualsTRUE" (formula "4"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "32"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "60") (term "0,1,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "59") (term "0,1,0,0"))
            (rule "hideAuxiliaryEqConcrete" (formula "1"))
            (rule "cnf_rightDist" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "commute_or" (formula "1"))
            (rule "cnf_rightDist" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "commute_or" (formula "2"))
            (rule "commute_or" (formula "3"))
            (rule "cnf_rightDist" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_or" (formula "1"))
            (rule "lenNonNegative" (formula "47") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "47"))
            (rule "lenNonNegative" (formula "48") (term "1,1"))
            (rule "inEqSimp_commuteLeq" (formula "48"))
            (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "48"))
            (rule "qeq_literals" (formula "51") (term "0,0"))
            (builtin "One Step Simplification" (formula "51"))
            (builtin "Use Operation Contract" (formula "62") (newnames "heapBefore_Voter_0,self_1,exc_2,heapAfter_Voter_0,anon_heap_Voter_0") (contract "de.uni.trier.infsec.eVotingVerif.core.Voter[de.uni.trier.infsec.eVotingVerif.core.Voter::Voter(byte,de.uni.trier.infsec.functionalities.smt.Sender)].JML normal_behavior operation contract.0"))
            (branch "Post (Voter)"
               (builtin "One Step Simplification" (formula "57"))
               (builtin "One Step Simplification" (formula "64"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,0,1,0,1") (ifseqformula "36"))
               (rule "andLeft" (formula "57"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1,0,1,0") (ifseqformula "57"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "36"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "61"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "63"))
               (rule "notLeft" (formula "58"))
               (rule "andLeft" (formula "58"))
               (rule "notLeft" (formula "63"))
               (rule "notLeft" (formula "58"))
               (rule "orRight" (formula "64"))
               (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "64"))
               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "65")))
               (rule "assignment" (formula "74") (term "1"))
               (builtin "One Step Simplification" (formula "74"))
               (rule "assignment_to_reference_array_component" (formula "74"))
               (branch "Normal Execution (v_arr_3 != null)"
                  (builtin "One Step Simplification" (formula "74"))
                  (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "68")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "61"))
                  (rule "hideAuxiliaryEq" (formula "61"))
                  (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "60") (term "1"))
                  (rule "replace_known_right" (formula "60") (term "1,0,0,0") (ifseqformula "65"))
                  (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")))
                  (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "68")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0") (ifseqformula "36"))
                  (rule "eqSymm" (formula "62"))
                  (rule "hideAuxiliaryEq" (formula "62"))
                  (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "61") (term "1"))
                  (rule "replace_known_right" (formula "61") (term "0,0,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "65")))
                  (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "66"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "66") (term "0"))
                  (rule "methodCallEmpty" (formula "74") (term "1"))
                  (rule "tryEmpty" (formula "74") (term "1"))
                  (rule "emptyModality" (formula "74") (term "1"))
                  (rule "andRight" (formula "74"))
                  (branch "Case 1"
                     (rule "andRight" (formula "74"))
                     (branch "Case 1"
                        (rule "impRight" (formula "74"))
                        (rule "andRight" (formula "75"))
                        (branch "Case 1"
                           (rule "andRight" (formula "75"))
                           (branch "Case 1"
                              (rule "notRight" (formula "75"))
                              (builtin "One Step Simplification" (formula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "2"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                              (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "51"))
                              (rule "lenOfSeqConcat" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "polySimp_homoEq" (formula "48"))
                              (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                              (rule "mul_literals" (formula "48") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                              (rule "add_literals" (formula "48") (term "0,0,0"))
                              (rule "add_zero_left" (formula "48") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                              (rule "add_literals" (formula "48") (term "1,0"))
                              (rule "times_zero_1" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "50"))
                              (rule "lenOfSeqConcat" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "polySimp_addComm0" (formula "46") (term "0"))
                              (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                              (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "50"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                              (rule "mul_literals" (formula "43") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                              (rule "leq_literals" (formula "43") (term "0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "getOfSeqConcat" (formula "45") (term "0"))
                              (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                              (rule "add_literals" (formula "45") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "45") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "castDel" (formula "45") (term "2,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "45") (term "0,0,0"))
                              (rule "leq_literals" (formula "45") (term "0,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "eqSymm" (formula "44") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                              (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                              (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                              (rule "eqSymm" (formula "44") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_21"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_22"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_14"))
                              (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "35"))
                              (rule "eqSymm" (formula "3") (term "0,0"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "60") (ifseqformula "4"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "75"))
                              (builtin "One Step Simplification" (formula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "2"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "53"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                              (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "52"))
                              (rule "lenOfSeqConcat" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "polySimp_homoEq" (formula "49"))
                              (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "49") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                              (rule "mul_literals" (formula "49") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "49") (term "0"))
                              (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                              (rule "add_literals" (formula "49") (term "0,0,0"))
                              (rule "add_zero_left" (formula "49") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                              (rule "add_literals" (formula "49") (term "1,0"))
                              (rule "times_zero_1" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "applyEq" (formula "49") (term "0,0,1,0") (ifseqformula "51"))
                              (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "51"))
                              (rule "lenOfSeqConcat" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "polySimp_addComm0" (formula "47") (term "0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                              (rule "mul_literals" (formula "43") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                              (rule "leq_literals" (formula "43") (term "0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "getOfSeqConcat" (formula "45") (term "0"))
                              (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                              (rule "add_literals" (formula "45") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "45") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "castDel" (formula "45") (term "2,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "45") (term "0,0,0"))
                              (rule "leq_literals" (formula "45") (term "0,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "eqSymm" (formula "44") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                              (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                              (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                              (rule "eqSymm" (formula "44") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_15"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "33"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_23"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "61") (ifseqformula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "75"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "75"))
                              (rule "true_left" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "74") (term "1,1"))
                              (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "52"))
                              (rule "lenOfSeqConcat" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "polySimp_addComm0" (formula "47") (term "0"))
                              (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "52"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                              (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                              (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                              (rule "lenOfSeqConcat" (formula "45") (term "0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "polySimp_homoEq" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                              (rule "add_literals" (formula "45") (term "0,0,0"))
                              (rule "add_zero_left" (formula "45") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                              (rule "add_literals" (formula "45") (term "1,0"))
                              (rule "times_zero_1" (formula "45") (term "0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                              (rule "mul_literals" (formula "42") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                              (rule "leq_literals" (formula "42") (term "0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "eqSymm" (formula "43") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                              (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                              (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                              (rule "eqSymm" (formula "43") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                              (rule "getOfSeqConcat" (formula "44") (term "0"))
                              (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                              (rule "add_literals" (formula "44") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "44") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "castDel" (formula "44") (term "2,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0"))
                              (rule "leq_literals" (formula "44") (term "0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "pullOutSelect" (formula "66") (term "1") (inst "selectSK=arr_36"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_37"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                              (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_23"))
                              (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "34"))
                              (rule "eqSymm" (formula "3") (term "0,0"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "65"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "18")))
                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                              (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "54"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "54") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "54") (term "1,1,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "54") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "54") (term "0,0,0,0"))
                              (rule "andLeft" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "notLeft" (formula "54"))
                              (rule "disjointDefinition" (formula "55"))
                              (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_15"))
                              (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "55") (term "0"))
                              (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                              (rule "hideAuxiliaryEq" (formula "55"))
                              (rule "shift_paren_or" (formula "43") (term "0"))
                              (rule "inEqSimp_or_tautInEq3" (formula "43") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1,0,0"))
                              (rule "add_literals" (formula "43") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "43") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "34") (inst "s=s") (inst "i=i_1"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1"))
                              (rule "replaceKnownSelect_taclet3_0" (formula "34") (term "0,1,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet3_0" (formula "34") (term "0,0,0,1,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0,0,0,1,0") (ifseqformula "31"))
                              (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "34") (term "0,1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "34") (term "0,0,0,1,0,0,0"))
                              (rule "andLeft" (formula "34"))
                              (rule "andLeft" (formula "34"))
                              (rule "exLeft" (formula "34") (inst "sk=i_1_17"))
                              (rule "andLeft" (formula "34"))
                              (rule "andLeft" (formula "34"))
                              (rule "inEqSimp_ltToLeq" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "34"))
                              (rule "disjointDefinition" (formula "38"))
                              (rule "castedGetAny" (formula "36") (term "0"))
                              (rule "lenOfSeqConcat" (formula "35") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0"))
                              (rule "add_zero_left" (formula "35") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                              (rule "polySimp_elimOne" (formula "35") (term "0"))
                              (rule "getOfSeqConcat" (formula "36") (term "0"))
                              (rule "polySimp_elimSub" (formula "36") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "36") (term "2,0"))
                              (rule "castDel" (formula "36") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "36") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "37") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_21"))
                              (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                              (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
                              (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "38") (term "1,0,0,0,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "nnf_imp2or" (formula "37") (term "0"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "37") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "37") (term "1,1,0,0,0"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "70"))
                              (rule "disjointDefinition" (formula "70") (term "1"))
                              (rule "dismissNonSelectedField" (formula "70") (term "0,0,0,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "70") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "70") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "70") (term "0,0,0") (ifseqformula "65"))
                              (builtin "One Step Simplification" (formula "70"))
                              (rule "dismissNonSelectedField" (formula "70") (term "1,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "70") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "70") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "70") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet30_0" (formula "70") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "70") (term "0,0,1"))
                              (rule "replace_known_left" (formula "70") (term "1") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "70"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "57") (inst "s=s") (inst "i=i_1"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "replaceKnownSelect_taclet30_0" (formula "57") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "57") (term "0,1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,1,0,0,0,1,0") (ifseqformula "52"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,1,0,0,0,1,0") (ifseqformula "31"))
                              (rule "andLeft" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "exLeft" (formula "57") (inst "sk=i_1_18"))
                              (rule "andLeft" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "inEqSimp_ltToLeq" (formula "58"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "58") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "57"))
                              (rule "disjointDefinition" (formula "61"))
                              (rule "castedGetAny" (formula "59") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                              (rule "polySimp_elimOne" (formula "58") (term "0"))
                              (rule "pullOutSelect" (formula "60") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_22"))
                              (rule "applyEq" (formula "59") (term "1") (ifseqformula "60"))
                              (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "69")))
                              (rule "replaceKnownSelect_taclet32_0" (formula "60") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "60") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,0") (ifseqformula "31"))
                              (rule "replace_known_right" (formula "60") (term "0,0,0,0") (ifseqformula "68"))
                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "61") (term "1,0,0,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "60"))
                              (rule "hideAuxiliaryEq" (formula "60"))
                              (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_10"))
                              (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "59"))
                              (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "59"))
                              (rule "replaceKnownSelect_taclet3_0" (formula "59") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "59") (term "0"))
                              (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "59"))
                              (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "59"))
                              (rule "hideAuxiliaryEq" (formula "59"))
                              (rule "lenOfSeqConcat" (formula "58") (term "0"))
                              (builtin "One Step Simplification" (formula "58"))
                              (rule "polySimp_addComm0" (formula "58") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "58"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0"))
                              (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,0"))
                              (rule "add_zero_left" (formula "58") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "58"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                              (rule "polySimp_elimOne" (formula "58") (term "0"))
                              (rule "getOfSeqConcat" (formula "59") (term "0"))
                              (rule "polySimp_elimSub" (formula "59") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "59") (term "2,0"))
                              (rule "castDel" (formula "59") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "59") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0,0,0"))
                              (rule "nnf_imp2or" (formula "60") (term "0"))
                              (rule "nnf_notAnd" (formula "60") (term "0,0"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "nnf_notAnd" (formula "60") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "60") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "60") (term "1,1,0,0,0"))
                              (rule "nnf_notOr" (formula "60") (term "0,1,1,0,0,0"))
                              (rule "commuteIntersection" (formula "61") (term "0"))
                              (rule "commute_or_2" (formula "37") (term "0,0"))
                              (rule "ifthenelse_split" (formula "43") (term "0"))
                              (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "44"))
                                 (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "44"))
                                 (rule "hideAuxiliaryEq" (formula "44"))
                                 (rule "disjointAndSubset_4" (formula "44") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "disjointAndSubset_4" (formula "44") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "eqSymm" (formula "63"))
                                 (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "eqSymm" (formula "63"))
                                 (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "eqSymm" (formula "63"))
                                 (rule "disjointAndSubset_4" (formula "44") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "disjointAndSubset_4" (formula "44") (ifseqformula "28"))
                                 (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "eqSymm" (formula "63"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "72") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "72"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "72") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "72") (term "0,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "72") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "72") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "1,1,0,0,0,1,0") (ifseqformula "51"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "72") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "72") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "72") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "72") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "72") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "72") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "72") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "72") (term "0,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "72") (term "1"))
                                    (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "72"))
                                    (rule "lenOfSeqConcat" (formula "72") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "72"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "72") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "72") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "72") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "72") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "72") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "72") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "72") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "72") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "72") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "72"))
                                    (rule "nnf_notAnd" (formula "72") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "72") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "72") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "72") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "72"))
                                    (rule "nnf_ex2all" (formula "72"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "60") (term "0,0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "commuteIntersection" (formula "38") (term "0"))
                                    (rule "intersectWithSingleton" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 TRUE"
                                       (rule "applyEq" (formula "58") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_commuteGeq" (formula "58"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "59") (term "0,0,2,0") (ifseqformula "36"))
                                       (rule "eqSymm" (formula "59") (term "0,2,0"))
                                       (rule "applyEq" (formula "59") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "57") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "56"))
                                       (rule "mul_literals" (formula "55") (term "0,0"))
                                       (rule "add_zero_left" (formula "55") (term "0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or_2" (formula "58") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "59") (term "0"))
                                       (rule "distr_forallAnd" (formula "59"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "castDel" (formula "59") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "commute_or" (formula "59") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                       (rule "times_zero_1" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "cnf_rightDist" (formula "63") (term "0"))
                                       (rule "distr_forallAnd" (formula "63"))
                                       (rule "andLeft" (formula "63"))
                                       (rule "shift_paren_or" (formula "41") (term "0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "shift_paren_or" (formula "64") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0"))
                                       (rule "commute_or" (formula "64") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "63") (term "0"))
                                       (rule "distr_forallAnd" (formula "63"))
                                       (rule "andLeft" (formula "63"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "shift_paren_or" (formula "64") (term "0"))
                                       (rule "commute_or" (formula "64") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "62"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                       (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0"))
                                       (rule "leq_literals" (formula "62") (term "0"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "false_right" (formula "62"))
                                       (rule "commute_or_2" (formula "59") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or" (formula "59") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "59") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0"))
                                       (rule "distr_forallAnd" (formula "60"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "castDel" (formula "60") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "60") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "commute_or" (formula "60") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0"))
                                       (rule "distr_forallAnd" (formula "60"))
                                       (rule "andLeft" (formula "60"))
                                       (rule "shift_paren_or" (formula "61") (term "0"))
                                       (rule "commute_or" (formula "61") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "59") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 TRUE"
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq1" (formula "58"))
                                          (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "1,0"))
                                          (rule "times_zero_1" (formula "58") (term "0"))
                                          (rule "leq_literals" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0,0"))
                                          (rule "leq_literals" (formula "58") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "58"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "mul_literals" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "cnf_rightDist" (formula "63") (term "0"))
                                          (rule "distr_forallAnd" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "shift_paren_or" (formula "64") (term "0"))
                                          (rule "commute_or" (formula "64") (term "0,0"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "leq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "62"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "58") (ifseqformula "64"))
                                          (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "58"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,0"))
                                          (rule "leq_literals" (formula "64") (term "0"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "false_right" (formula "64"))
                                          (rule "cnf_rightDist" (formula "60") (term "0"))
                                          (rule "distr_forallAnd" (formula "60"))
                                          (rule "andLeft" (formula "60"))
                                          (rule "commute_or_2" (formula "60") (term "0"))
                                          (rule "shift_paren_or" (formula "61") (term "0"))
                                          (rule "commute_or" (formula "61") (term "0,0"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "51"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "60") (term "1,0,1") (ifseqformula "61"))
                                          (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "61"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "77"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_18"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_17"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "65"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "64") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "64") (term "0"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "closeFalse" (formula "64"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "62"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "73") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "1,1,0,0,0,1,0") (ifseqformula "51"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "73") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "73") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "73") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "73") (term "0,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "73") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "73") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "73") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "73") (term "0,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "73") (term "1"))
                                    (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "lenOfSeqConcat" (formula "73") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "73") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "73") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "73") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "nnf_ex2all" (formula "73"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "commute_or_2" (formula "60") (term "0,0"))
                                    (rule "commuteIntersection" (formula "38") (term "0"))
                                    (rule "intersectWithSingleton" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 TRUE"
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "57") (term "0,0,2,0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "57") (term "0,2,0"))
                                       (rule "applyEq" (formula "56") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_commuteGeq" (formula "56"))
                                       (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "57") (term "1") (ifseqformula "36"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                       (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "56"))
                                       (rule "times_zero_1" (formula "55") (term "0,0"))
                                       (rule "add_zero_left" (formula "55") (term "0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or_2" (formula "58") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                       (rule "times_zero_1" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "cnf_rightDist" (formula "63") (term "0"))
                                       (rule "distr_forallAnd" (formula "63"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "castDel" (formula "63") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "63") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "63") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "commute_or" (formula "63") (term "0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "41") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "shift_paren_or" (formula "41") (term "0"))
                                       (rule "commute_or" (formula "41") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "63") (term "0"))
                                       (rule "distr_forallAnd" (formula "63"))
                                       (rule "andLeft" (formula "63"))
                                       (rule "shift_paren_or" (formula "64") (term "0"))
                                       (rule "commute_or" (formula "64") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "63") (term "0"))
                                       (rule "distr_forallAnd" (formula "63"))
                                       (rule "andLeft" (formula "63"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "shift_paren_or" (formula "64") (term "0"))
                                       (rule "commute_or" (formula "64") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "62"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                       (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "62") (term "0,0"))
                                       (rule "leq_literals" (formula "62") (term "0"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "false_right" (formula "62"))
                                       (rule "commute_or_2" (formula "59") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or" (formula "59") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "59") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "60") (term "0"))
                                       (rule "distr_forallAnd" (formula "60"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "castDel" (formula "60") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "commute_or" (formula "60") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "59") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 TRUE"
                                          (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "59"))
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "59"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "59"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                          (rule "inEqSimp_homoInEq1" (formula "57"))
                                          (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                          (rule "add_literals" (formula "57") (term "1,0"))
                                          (rule "times_zero_1" (formula "57") (term "0"))
                                          (rule "leq_literals" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                          (rule "leq_literals" (formula "58") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "58"))
                                          (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "57"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "commute_and_2" (formula "63") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "63") (term "0"))
                                          (rule "distr_forallAnd" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "shift_paren_or" (formula "64") (term "0"))
                                          (rule "commute_or" (formula "64") (term "0,0"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "63") (term "0"))
                                          (rule "distr_forallAnd" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "shift_paren_or" (formula "64") (term "0"))
                                          (rule "commute_or" (formula "64") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "62") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "62") (term "0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "closeFalse" (formula "62"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "58") (ifseqformula "63"))
                                          (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "inEqSimp_contradEq7" (formula "63") (ifseqformula "58"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                          (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "63") (term "0,0"))
                                          (rule "leq_literals" (formula "63") (term "0"))
                                          (builtin "One Step Simplification" (formula "63"))
                                          (rule "false_right" (formula "63"))
                                          (rule "cnf_rightDist" (formula "60") (term "0"))
                                          (rule "distr_forallAnd" (formula "60"))
                                          (rule "andLeft" (formula "60"))
                                          (rule "shift_paren_or" (formula "61") (term "0"))
                                          (rule "commute_or" (formula "61") (term "0,0"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "64") (term "0"))
                                          (rule "distr_forallAnd" (formula "64"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "commute_or_2" (formula "64") (term "0"))
                                          (rule "shift_paren_or" (formula "65") (term "0"))
                                          (rule "commute_or" (formula "65") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "51"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "60") (term "1,0,1") (ifseqformula "61"))
                                          (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "61"))
                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_18"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "65"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_17"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "64"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "65") (ifseqformula "1"))
                                          (rule "andLeft" (formula "65"))
                                          (rule "inEqSimp_homoInEq1" (formula "65"))
                                          (rule "polySimp_pullOutFactor1b" (formula "65") (term "0"))
                                          (rule "add_literals" (formula "65") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "65") (term "1,0"))
                                          (rule "add_zero_right" (formula "65") (term "0"))
                                          (rule "leq_literals" (formula "65"))
                                          (rule "closeFalse" (formula "65"))
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "43"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "42"))
                                 (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "39"))
                                 (rule "hideAuxiliaryEq" (formula "39"))
                                 (rule "cut_direct" (formula "2") (term "1"))
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "67") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "67") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "67") (term "0,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "67") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "67") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "67") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "67") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "67") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "67") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "67") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "1,1,0,0,0,1,0") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "67") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "67") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "67") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "67") (term "0,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "67") (term "1"))
                                    (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "lenOfSeqConcat" (formula "67") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "67") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "67") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "67") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "67") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "67") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "67") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "67") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "67") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "67") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "nnf_notAnd" (formula "67") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "67") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "67") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "67") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "nnf_ex2all" (formula "67"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "commuteIntersection" (formula "38") (term "0"))
                                    (rule "intersectWithSingleton" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "commute_or_2" (formula "53") (term "0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 TRUE"
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "53") (term "0,0,2,0") (ifseqformula "36"))
                                       (rule "eqSymm" (formula "53") (term "0,2,0"))
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_commuteGeq" (formula "51"))
                                       (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "51") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                                       (rule "times_zero_1" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0"))
                                       (rule "commute_and_2" (formula "52") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0"))
                                       (rule "distr_forallAnd" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "castDel" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "53") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "commute_or" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0"))
                                       (rule "distr_forallAnd" (formula "53"))
                                       (rule "andLeft" (formula "53"))
                                       (rule "shift_paren_or" (formula "54") (term "0"))
                                       (rule "commute_or" (formula "54") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0"))
                                       (rule "distr_forallAnd" (formula "53"))
                                       (rule "andLeft" (formula "53"))
                                       (rule "commute_or_2" (formula "53") (term "0"))
                                       (rule "shift_paren_or" (formula "54") (term "0"))
                                       (rule "commute_or" (formula "54") (term "0,0"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "ifthenelse_split" (formula "56") (term "2,0"))
                                       (branch "i_1_18 = i_1_17 TRUE"
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "applyEqRigid" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                          (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "57") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                          (rule "inEqSimp_homoInEq0" (formula "54"))
                                          (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                          (rule "add_literals" (formula "54") (term "1,0"))
                                          (rule "times_zero_1" (formula "54") (term "0"))
                                          (rule "qeq_literals" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "closeFalse" (formula "40"))
                                       )
                                       (branch "i_1_18 = i_1_17 FALSE"
                                          (rule "inEqSimp_strengthen0" (formula "55") (ifseqformula "62"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_contradEq3" (formula "62") (ifseqformula "55"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0"))
                                          (rule "qeq_literals" (formula "62") (term "0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                          (rule "times_zero_1" (formula "54") (term "0,0"))
                                          (rule "add_zero_left" (formula "54") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "54"))
                                          (rule "mul_literals" (formula "54") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "54"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "55"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "56"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                       (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0"))
                                       (rule "leq_literals" (formula "56") (term "0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "commute_or" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "shift_paren_or" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "commute_or_2" (formula "54") (term "0"))
                                       (rule "shift_paren_or" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or_2" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "shift_paren_or" (formula "2") (term "0,0"))
                                       (rule "commute_or" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "commute_or_2" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "eqSymm" (formula "2") (term "0,1,0"))
                                       (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "41"))
                                       (rule "qeq_literals" (formula "2") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "ifthenelse_split" (formula "53") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 TRUE"
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                          (rule "inEqSimp_homoInEq1" (formula "51"))
                                          (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                                          (rule "add_literals" (formula "51") (term "1,0"))
                                          (rule "times_zero_1" (formula "51") (term "0"))
                                          (rule "leq_literals" (formula "51"))
                                          (rule "true_left" (formula "51"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "51"))
                                          (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                          (rule "leq_literals" (formula "52") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "eqSymm" (formula "52"))
                                          (rule "close" (formula "58") (ifseqformula "52"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "59"))
                                          (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "52"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_18"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_17"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "58"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "2"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_literals" (formula "41") (term "0"))
                                          (rule "leq_literals" (formula "41"))
                                          (rule "closeFalse" (formula "41"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "3"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "37"))
                                    (rule "elementOfSingleton" (formula "56"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "false_right" (formula "56"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "68") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "68") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "68") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "45"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "disjointDefinition" (formula "68") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "68") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "68") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "lenOfSeqConcat" (formula "68") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "68") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "68") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "68") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "68") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "nnf_ex2all" (formula "68"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0"))
                                    (rule "commuteIntersection" (formula "38") (term "0"))
                                    (rule "intersectWithSingleton" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "commute_or_2" (formula "53") (term "0"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 TRUE"
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "53") (term "0,0,2,0") (ifseqformula "36"))
                                       (rule "eqSymm" (formula "53") (term "0,2,0"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_commuteGeq" (formula "51"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "51") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                                       (rule "times_zero_1" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "commute_or" (formula "52") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "52") (term "0,0"))
                                       (rule "commute_and_2" (formula "52") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "53") (term "0"))
                                       (rule "distr_forallAnd" (formula "53"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "castDel" (formula "53") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "53") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "53") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "commute_or" (formula "53") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                       (rule "times_zero_1" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "23") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "cnf_rightDist" (formula "57") (term "0"))
                                       (rule "distr_forallAnd" (formula "57"))
                                       (rule "andLeft" (formula "57"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "shift_paren_or" (formula "58") (term "0"))
                                       (rule "commute_or" (formula "58") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "57") (term "0"))
                                       (rule "distr_forallAnd" (formula "57"))
                                       (rule "andLeft" (formula "57"))
                                       (rule "commute_or_2" (formula "57") (term "0"))
                                       (rule "shift_paren_or" (formula "58") (term "0"))
                                       (rule "commute_or" (formula "58") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "closeFalse" (formula "40"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_17 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "56"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                       (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0"))
                                       (rule "leq_literals" (formula "56") (term "0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "commute_or_2" (formula "37") (term "0,0"))
                                       (rule "shift_paren_and" (formula "37") (term "1,0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "53") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "shift_paren_or" (formula "38") (term "0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "commute_or" (formula "54") (term "0"))
                                       (rule "cnf_rightDist" (formula "37") (term "0"))
                                       (rule "distr_forallAnd" (formula "37"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "castDel" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "37") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "37") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "shift_paren_or" (formula "37") (term "0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "shift_paren_or" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "54") (term "0"))
                                       (rule "distr_forallAnd" (formula "54"))
                                       (rule "andLeft" (formula "54"))
                                       (rule "commute_or_2" (formula "54") (term "0"))
                                       (rule "shift_paren_or" (formula "55") (term "0"))
                                       (rule "commute_or" (formula "55") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "53") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 TRUE"
                                          (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                          (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,0,0"))
                                          (rule "leq_literals" (formula "54") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                          (rule "inEqSimp_homoInEq1" (formula "52"))
                                          (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                          (rule "add_literals" (formula "52") (term "1,0"))
                                          (rule "times_zero_1" (formula "52") (term "0"))
                                          (rule "leq_literals" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "51"))
                                          (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "51"))
                                          (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "36") (term "1") (ifseqformula "52"))
                                          (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "53") (term "1,0,1,0") (ifseqformula "52"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "56") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "56") (term "0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "closeFalse" (formula "56"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_18 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "59"))
                                          (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "52"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                          (rule "allLeft" (formula "20") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "19") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                          (rule "times_zero_1" (formula "19") (term "0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "23") (inst "t=i"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "49"))
                                          (rule "applyEq" (formula "54") (term "1,0,1") (ifseqformula "55"))
                                          (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                                          (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_18"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_17"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "2"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_literals" (formula "41") (term "0"))
                                          (rule "leq_literals" (formula "41"))
                                          (rule "closeFalse" (formula "41"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "75"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "75"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "75"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "52"))
                                    (rule "lenOfSeqConcat" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "polySimp_homoEq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "49") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                    (rule "add_literals" (formula "49") (term "1,0"))
                                    (rule "times_zero_1" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "50"))
                                    (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                    (rule "mul_literals" (formula "43") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                    (rule "leq_literals" (formula "43") (term "0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "eqSymm" (formula "44") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                                    (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                                    (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                                    (rule "eqSymm" (formula "44") (term "1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                                    (rule "getOfSeqConcat" (formula "45") (term "0"))
                                    (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,2,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "castDel" (formula "45") (term "2,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0"))
                                    (rule "leq_literals" (formula "45") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_5"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=arr_24"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_25"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "36"))
                                    (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_16"))
                                    (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                                    (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "37"))
                                    (rule "eqSymm" (formula "3") (term "0,0"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "21")))
                                    (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "63"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")) (ifInst ""  (formula "59")))
                                    (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "55"))
                                    (rule "close" (formula "62") (ifseqformula "2"))
                                 )
                                 (branch "Case 2"
                                    (rule "notRight" (formula "75"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "51") (term "0,0,1,0") (ifseqformula "53"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "52"))
                                    (rule "lenOfSeqConcat" (formula "47") (term "0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                    (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "polySimp_homoEq" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                    (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                    (rule "add_literals" (formula "46") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "46") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                    (rule "add_literals" (formula "46") (term "1,0"))
                                    (rule "times_zero_1" (formula "46") (term "0"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                    (rule "mul_literals" (formula "43") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                    (rule "leq_literals" (formula "43") (term "0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "eqSymm" (formula "44") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                                    (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                                    (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                                    (rule "eqSymm" (formula "44") (term "1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                                    (rule "getOfSeqConcat" (formula "45") (term "0"))
                                    (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,2,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "castDel" (formula "45") (term "2,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0"))
                                    (rule "leq_literals" (formula "45") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_17"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                    (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_26"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet19_0" (formula "2") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "2") (term "0"))
                                    (rule "close" (formula "63") (ifseqformula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "75"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "75"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "75"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "74"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "53"))
                                       (rule "lenOfSeqConcat" (formula "48") (term "0"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "polySimp_addComm0" (formula "48") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "52"))
                                       (rule "lenOfSeqConcat" (formula "49") (term "0"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "polySimp_homoEq" (formula "49"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "49") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                       (rule "add_literals" (formula "49") (term "1,0"))
                                       (rule "times_zero_1" (formula "49") (term "0"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                       (rule "mul_literals" (formula "43") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                       (rule "leq_literals" (formula "43") (term "0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "getOfSeqConcat" (formula "45") (term "0"))
                                       (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "castDel" (formula "45") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                       (rule "leq_literals" (formula "45") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "eqSymm" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                                       (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                                       (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                                       (rule "eqSymm" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_29"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_30"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_19"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "36"))
                                       (rule "eqSymm" (formula "3") (term "0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "67"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "20")))
                                       (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "62")) (ifInst ""  (formula "60")))
                                       (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "54"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "35") (inst "s=s") (inst "i=i_1"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "35") (term "0,1"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "35") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "35") (term "0,0,0,1,0,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,0,0,1,0") (ifseqformula "32"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "35") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "35") (term "0,0,0,1,0,0,0"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "exLeft" (formula "35") (inst "sk=i_1_15"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "andLeft" (formula "35"))
                                       (rule "inEqSimp_ltToLeq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "35"))
                                       (rule "disjointDefinition" (formula "39"))
                                       (rule "castedGetAny" (formula "37") (term "0"))
                                       (rule "lenOfSeqConcat" (formula "36") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                       (rule "getOfSeqConcat" (formula "37") (term "0"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                       (rule "getOfSeqSingleton" (formula "37") (term "2,0"))
                                       (rule "castDel" (formula "37") (term "1,2,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "37") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "38") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_19"))
                                       (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "67")) (ifInst ""  (formula "66")))
                                       (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "38") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "38") (term "1,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "59"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "59") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "59") (term "1,1,0"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "59") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "59") (term "0,0,0,0"))
                                       (rule "andLeft" (formula "59"))
                                       (rule "andLeft" (formula "59"))
                                       (rule "notLeft" (formula "59"))
                                       (rule "disjointDefinition" (formula "60"))
                                       (rule "pullOutSelect" (formula "60") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_11"))
                                       (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "60") (term "0"))
                                       (rule "applyEqReverse" (formula "61") (term "0,0") (ifseqformula "60"))
                                       (rule "hideAuxiliaryEq" (formula "60"))
                                       (rule "shift_paren_or" (formula "48") (term "0"))
                                       (rule "inEqSimp_or_tautInEq3" (formula "48") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "48") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "48") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "48") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "commute_or_2" (formula "38") (term "0,0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "20") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "12"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "75"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_leqRight" (formula "74"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "51"))
                                       (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "polySimp_addComm0" (formula "46") (term "0"))
                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "51"))
                                       (rule "lenOfSeqConcat" (formula "48") (term "0"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "polySimp_homoEq" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                       (rule "add_literals" (formula "48") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                       (rule "add_literals" (formula "48") (term "1,0"))
                                       (rule "times_zero_1" (formula "48") (term "0"))
                                       (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                       (rule "mul_literals" (formula "43") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                       (rule "leq_literals" (formula "43") (term "0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "getOfSeqConcat" (formula "45") (term "0"))
                                       (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "castDel" (formula "45") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                       (rule "leq_literals" (formula "45") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "eqSymm" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                                       (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                                       (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                                       (rule "eqSymm" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_5"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_commuteGeq" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=arr_27"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_28"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "37"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_18"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "38"))
                                       (rule "eqSymm" (formula "3") (term "0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "61"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "62")))
                                       (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "21")))
                                       (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "55"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "55"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "36") (inst "s=s") (inst "i=i_1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "36") (term "0,1"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "36") (term "0,0,0,1,0,0,0"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "36") (term "0,1,1,0,0,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1,0,0,0,1,0") (ifseqformula "33"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "36") (term "0,0,0,1,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "36") (term "0,1,1,0,0,0,0"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "exLeft" (formula "36") (inst "sk=i_1_14"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "36"))
                                       (rule "disjointDefinition" (formula "40"))
                                       (rule "castedGetAny" (formula "38") (term "0"))
                                       (rule "lenOfSeqConcat" (formula "37") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0"))
                                       (rule "getOfSeqConcat" (formula "38") (term "0"))
                                       (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                       (rule "getOfSeqSingleton" (formula "38") (term "2,0"))
                                       (rule "castDel" (formula "38") (term "1,2,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "38") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "39") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_18"))
                                       (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                                       (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "1,0,0,0,0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "39") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "39") (term "1,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "60"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "60") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "60") (term "1,1,0"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "60") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "60") (term "0,0,0,0"))
                                       (rule "andLeft" (formula "60"))
                                       (rule "andLeft" (formula "60"))
                                       (rule "notLeft" (formula "60"))
                                       (rule "disjointDefinition" (formula "61"))
                                       (rule "pullOutSelect" (formula "61") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_10"))
                                       (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "61") (term "0"))
                                       (rule "applyEqReverse" (formula "62") (term "0,0") (ifseqformula "61"))
                                       (rule "hideAuxiliaryEq" (formula "61"))
                                       (rule "shift_paren_or" (formula "49") (term "0"))
                                       (rule "inEqSimp_or_tautInEq3" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "49") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "49") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "49") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "22"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0"))
                                       (rule "add_literals" (formula "12") (term "0"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "75"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "75"))
                                       (rule "true_left" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "74") (term "1,1,1"))
                                       (rule "dismissNonSelectedField" (formula "74") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "74") (term "1"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "50"))
                                       (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "polySimp_addComm0" (formula "45") (term "0"))
                                       (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "50"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                       (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "polySimp_homoEq" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                       (rule "add_literals" (formula "45") (term "1,0"))
                                       (rule "times_zero_1" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                       (rule "mul_literals" (formula "42") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                       (rule "leq_literals" (formula "42") (term "0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "eqSymm" (formula "43") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                       (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                       (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                       (rule "eqSymm" (formula "43") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                       (rule "getOfSeqConcat" (formula "44") (term "0"))
                                       (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "castDel" (formula "44") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "pullOutSelect" (formula "66") (term "2,0") (inst "selectSK=arr_32"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "63"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "9")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "applyEqReverse" (formula "67") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "66") (term "1,0") (inst "selectSK=arr_33"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                       (rule "replaceKnownSelect_taclet12_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_secret_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet11_0" (formula "1") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "pullOutSelect" (formula "66") (term "1,0") (inst "selectSK=arr_34"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_35"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "34"))
                                       (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_22"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "3") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "3") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "4") (term "0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "close" (formula "67") (ifseqformula "53"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "75"))
                                       (branch "Case 1"
                                          (rule "notRight" (formula "75"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "2"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "48"))
                                          (rule "lenOfSeqConcat" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "polySimp_addComm0" (formula "43") (term "0"))
                                          (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                          (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "polySimp_homoEq" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                          (rule "add_literals" (formula "45") (term "1,0"))
                                          (rule "times_zero_1" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                                          (rule "leq_literals" (formula "43") (term "0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "getOfSeqConcat" (formula "45") (term "0"))
                                          (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "45") (term "1,2,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,2,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,2,0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "castDel" (formula "45") (term "2,0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                          (rule "leq_literals" (formula "45") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "getOfSeqConcat" (formula "44") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "eqSymm" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "44") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "1,1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "44") (term "1,1,1,0"))
                                          (rule "castDel" (formula "44") (term "1,1,1,1,0"))
                                          (rule "castDel" (formula "44") (term "2,1,1,1,0"))
                                          (rule "eqSymm" (formula "44") (term "1,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0"))
                                          (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_20"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                          (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_4"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "ifEqualsTRUE" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=arr_31"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")) (ifInst ""  (formula "61")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "75"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (builtin "One Step Simplification" (formula "75"))
                                             (rule "true_left" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                             (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "52"))
                                             (rule "lenOfSeqConcat" (formula "49") (term "0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "polySimp_homoEq" (formula "49"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                             (rule "add_literals" (formula "49") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "49") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                             (rule "add_literals" (formula "49") (term "1,0"))
                                             (rule "times_zero_1" (formula "49") (term "0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "50"))
                                             (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0"))
                                             (rule "applyEq" (formula "48") (term "0,0,1,0") (ifseqformula "50"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                             (rule "mul_literals" (formula "42") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                             (rule "leq_literals" (formula "42") (term "0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "eqSymm" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                             (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                             (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                             (rule "eqSymm" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                             (rule "getOfSeqConcat" (formula "44") (term "0"))
                                             (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "castDel" (formula "44") (term "2,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                             (rule "leq_literals" (formula "44") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_14"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "67") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "shift_paren_or" (formula "43") (term "0"))
                                             (rule "inEqSimp_or_tautInEq3" (formula "43") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "53"))
                                             (rule "replaceKnownSelect_taclet23_0" (formula "53") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet24_0" (formula "53") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet19_0" (formula "53") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "53") (term "1,1,0"))
                                             (rule "replaceKnownSelect_taclet19_0" (formula "53") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "53") (term "0,0,0,0"))
                                             (rule "andLeft" (formula "53"))
                                             (rule "andLeft" (formula "53"))
                                             (rule "notLeft" (formula "53"))
                                             (rule "disjointDefinition" (formula "54"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "34") (inst "s=s") (inst "i=i_1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet3_0" (formula "34") (term "0,1,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet3_0" (formula "34") (term "0,0,0,1,0,0,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,1,0,0,0,1,0") (ifseqformula "31"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "34") (term "0,1,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "34") (term "0,0,0,1,0,0,0"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "exLeft" (formula "34") (inst "sk=i_1_16"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34"))
                                             (rule "disjointDefinition" (formula "38"))
                                             (rule "castedGetAny" (formula "36") (term "0"))
                                             (rule "lenOfSeqConcat" (formula "35") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "0"))
                                             (rule "getOfSeqConcat" (formula "36") (term "0"))
                                             (rule "polySimp_elimSub" (formula "36") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                             (rule "getOfSeqSingleton" (formula "36") (term "2,0"))
                                             (rule "castDel" (formula "36") (term "1,2,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "36") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "0,0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "37") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_20"))
                                             (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                             (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
                                             (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "1,0,0,0,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                             (rule "nnf_notOr" (formula "37") (term "1,0,0,0"))
                                             (rule "nnf_notOr" (formula "37") (term "1,1,0,0,0"))
                                             (rule "commuteUnion" (formula "70") (term "1"))
                                             (rule "close" (formula "70") (ifseqformula "44"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "75"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "75"))
                                                (rule "true_left" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "74") (term "1,0"))
                                                (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "52"))
                                                (rule "lenOfSeqConcat" (formula "47") (term "0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                                (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "polySimp_homoEq" (formula "46"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                (rule "add_literals" (formula "46") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                (rule "add_literals" (formula "46") (term "1,0"))
                                                (rule "times_zero_1" (formula "46") (term "0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                (rule "mul_literals" (formula "42") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                (rule "leq_literals" (formula "42") (term "0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "castDel" (formula "44") (term "2,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0"))
                                                (rule "leq_literals" (formula "44") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "pullOutSelect" (formula "66") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_13"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "1"))
                                                (rule "close" (formula "67") (ifseqformula "36"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "75"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "75"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "74") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "74") (term "0,0,0"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                   (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "polySimp_homoEq" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "45") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                   (rule "mul_literals" (formula "42") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                   (rule "leq_literals" (formula "42") (term "0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "castDel" (formula "44") (term "2,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "true_left" (formula "44"))
                                                   (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                   (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                   (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                   (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                   (rule "pullOutSelect" (formula "66") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_12"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "67") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_21"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                                   (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "close" (formula "67") (ifseqformula "38"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "75"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "eqSymm" (formula "74"))
                                                      (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                      (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "polySimp_homoEq" (formula "45"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "45") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                      (rule "add_literals" (formula "45") (term "1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                      (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "mul_literals" (formula "42") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                      (rule "leq_literals" (formula "42") (term "0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "67") (inst "iv=iv"))
                                                      (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1"))
                                                      (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "castDel" (formula "44") (term "2,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "44") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                      (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                      (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                      (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                      (rule "pullOutSelect" (formula "66") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_4"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "allRight" (formula "67") (inst "sk=iv_451"))
                                                      (rule "impRight" (formula "67"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "applyEqReverse" (formula "69") (term "0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "69"))
                                                      (rule "closeTrue" (formula "69"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "75"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "eqSymm" (formula "74"))
                                                         (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                                         (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "50"))
                                                         (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                         (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "50"))
                                                         (rule "lenOfSeqConcat" (formula "47") (term "0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "polySimp_homoEq" (formula "47"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "47") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                                         (rule "add_literals" (formula "47") (term "1,0"))
                                                         (rule "times_zero_1" (formula "47") (term "0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                         (rule "mul_literals" (formula "42") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                         (rule "leq_literals" (formula "42") (term "0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "67") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "67") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "polySimp_addComm0" (formula "67") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1"))
                                                         (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                         (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "castDel" (formula "44") (term "2,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "44") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                         (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                         (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                         (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                         (rule "getOfSeqConcat" (formula "66") (term "1,1,0,1"))
                                                         (rule "eqSymm" (formula "66") (term "1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "66") (term "1,2,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "66") (term "1,2,0,1,0,1"))
                                                         (rule "getOfSeqSingleton" (formula "66") (term "2,0,1,0,1"))
                                                         (rule "castDel" (formula "66") (term "2,2,0,1,0,1"))
                                                         (rule "castDel" (formula "66") (term "1,2,0,1,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "66") (term "0,2,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,0,2,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,0,2,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,1"))
                                                         (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_9"))
                                                         (rule "applyEq" (formula "67") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet3_0" (formula "1") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "67") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "lenOfSeqConcat" (formula "66") (term "1,1,1,0,0,1"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "polySimp_addComm0" (formula "66") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "1,1,0,0,1"))
                                                         (rule "add_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "66") (term "1,1,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "66") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "polySimp_homoEq" (formula "66") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "66") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                         (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "66") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "66") (term "0,0"))
                                                         (rule "add_literals" (formula "66") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "66") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "allRight" (formula "66") (inst "sk=iv_450"))
                                                         (rule "impRight" (formula "66"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "68") (term "0,2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "68") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0"))
                                                         (rule "getOfSeqConcat" (formula "68") (term "1"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "polySimp_elimSub" (formula "68") (term "1,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                         (rule "getOfSeqSingleton" (formula "68") (term "2,0"))
                                                         (rule "castDel" (formula "68") (term "1,2,0"))
                                                         (rule "castDel" (formula "68") (term "2,2,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "68") (term "0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0,0,2,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "68") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "68"))
                                                         (rule "closeTrue" (formula "68"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "75"))
                                                         (branch "Case 1"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "eqSymm" (formula "74"))
                                                            (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                            (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "polySimp_homoEq" (formula "45"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "45") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                            (rule "add_literals" (formula "45") (term "1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                            (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                            (rule "mul_literals" (formula "42") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                            (rule "leq_literals" (formula "42") (term "0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "67") (inst "iv=iv"))
                                                            (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1"))
                                                            (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "25"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1"))
                                                            (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "castDel" (formula "44") (term "2,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "44") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                            (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                            (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                            (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                            (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                            (rule "pullOutSelect" (formula "66") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_4"))
                                                            (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet5_0" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "67") (term "0,0,1,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "26")))
                                                            (rule "closeTrue" (formula "67"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "75"))
                                                            (branch "Case 1"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "74"))
                                                               (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                                               (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                               (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "polySimp_homoEq" (formula "45"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "45") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                               (rule "add_literals" (formula "45") (term "1,0"))
                                                               (rule "times_zero_1" (formula "45") (term "0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                               (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                               (rule "mul_literals" (formula "42") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                               (rule "leq_literals" (formula "42") (term "0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "67") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1"))
                                                               (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "23"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1"))
                                                               (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "castDel" (formula "44") (term "2,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                               (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                               (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                               (rule "pullOutSelect" (formula "66") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_4"))
                                                               (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet7_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,1,0,1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "24")))
                                                               (rule "closeTrue" (formula "67"))
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "74"))
                                                               (rule "dismissNonSelectedField" (formula "74") (term "0"))
                                                               (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                               (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "polySimp_homoEq" (formula "45"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                               (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "45") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                               (rule "add_literals" (formula "45") (term "1,0"))
                                                               (rule "times_zero_1" (formula "45") (term "0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                               (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                               (rule "mul_literals" (formula "42") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                                                               (rule "leq_literals" (formula "42") (term "0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "67") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "67") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "67") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,1"))
                                                               (rule "getOfSeqConcat" (formula "44") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,2,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,2,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "castDel" (formula "44") (term "2,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                                                               (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                                                               (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                                                               (rule "eqSymm" (formula "43") (term "1,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                                                               (rule "pullOutSelect" (formula "66") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_4"))
                                                               (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "67") (term "0,0,1,0,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet9_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0,1,0,1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "closeTrue" (formula "67"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "74"))
                        (rule "orRight" (formula "75"))
                        (rule "orRight" (formula "75"))
                        (rule "orRight" (formula "75"))
                        (rule "orRight" (formula "75"))
                        (rule "notLeft" (formula "1"))
                        (builtin "One Step Simplification" (formula "79"))
                        (builtin "One Step Simplification" (formula "78"))
                        (builtin "One Step Simplification" (formula "77"))
                        (builtin "One Step Simplification" (formula "76"))
                        (builtin "One Step Simplification" (formula "75"))
                        (builtin "One Step Simplification" (formula "64"))
                        (rule "closeTrue" (formula "64"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "74"))
                     (rule "allRight" (formula "74") (inst "sk=f_4"))
                     (rule "allRight" (formula "74") (inst "sk=o_4"))
                     (rule "orRight" (formula "74"))
                     (rule "orRight" (formula "74"))
                     (rule "orRight" (formula "74"))
                     (rule "orRight" (formula "75"))
                     (rule "orRight" (formula "76"))
                     (rule "eqSymm" (formula "79"))
                     (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "52"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "49"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                     (rule "lenOfSeqConcat" (formula "46") (term "0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "polySimp_homoEq" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                     (rule "add_literals" (formula "46") (term "1,0"))
                     (rule "times_zero_1" (formula "46") (term "0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "25"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                     (rule "mul_literals" (formula "42") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "43"))
                     (rule "leq_literals" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "getOfSeqConcat" (formula "44") (term "0"))
                     (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                     (rule "polySimp_pullOutFactor1" (formula "44") (term "1,2,0"))
                     (rule "add_literals" (formula "44") (term "1,1,2,0"))
                     (rule "times_zero_1" (formula "44") (term "1,2,0"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "castDel" (formula "44") (term "2,0"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0"))
                     (rule "leq_literals" (formula "44") (term "0,0"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "eqSymm" (formula "43") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "43") (term "1,1,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "43") (term "1,1,1,1,0"))
                     (rule "getOfSeqSingleton" (formula "43") (term "1,1,1,0"))
                     (rule "castDel" (formula "43") (term "2,1,1,1,0"))
                     (rule "castDel" (formula "43") (term "1,1,1,1,0"))
                     (rule "eqSymm" (formula "43") (term "1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,1,0"))
                     (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_4_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "72"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "67"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "69"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "71"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "70"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "67"))
                     (rule "commute_and" (formula "70"))
                     (rule "commute_and" (formula "69"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "35") (inst "s=s") (inst "i=i_1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "35") (term "0,1"))
                     (rule "replaceKnownSelect_taclet3_0" (formula "35") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet3_0" (formula "35") (term "0,0,0,1,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,0,0,1,0") (ifseqformula "32"))
                     (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "35") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "35") (term "0,0,0,1,0,0,0"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "exLeft" (formula "35") (inst "sk=i_1_19"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "inEqSimp_ltToLeq" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "35"))
                     (rule "disjointDefinition" (formula "39"))
                     (rule "castedGetAny" (formula "37") (term "0"))
                     (rule "lenOfSeqConcat" (formula "36") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0"))
                     (rule "add_zero_left" (formula "36") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "getOfSeqConcat" (formula "37") (term "0"))
                     (rule "polySimp_elimSub" (formula "37") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "37") (term "2,0"))
                     (rule "castDel" (formula "37") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "37") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "38") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_23"))
                     (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                     (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "67")) (ifInst ""  (formula "66")))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                     (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0") (ifseqformula "38"))
                     (rule "hideAuxiliaryEq" (formula "38"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "38") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "38") (term "1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "59"))
                     (rule "replaceKnownSelect_taclet19_0" (formula "59") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "59") (term "1,1,0"))
                     (rule "replaceKnownSelect_taclet19_0" (formula "59") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "59") (term "0,0,0,0"))
                     (rule "andLeft" (formula "59"))
                     (rule "andLeft" (formula "59"))
                     (rule "notLeft" (formula "59"))
                     (rule "disjointDefinition" (formula "60"))
                     (rule "pullOutSelect" (formula "60") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_16"))
                     (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "54"))
                     (builtin "One Step Simplification" (formula "60"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "60") (term "0"))
                     (rule "applyEqReverse" (formula "61") (term "0,0") (ifseqformula "60"))
                     (rule "hideAuxiliaryEq" (formula "60"))
                     (rule "shift_paren_or" (formula "48") (term "0"))
                     (rule "inEqSimp_or_tautInEq3" (formula "48") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0,0"))
                     (rule "add_literals" (formula "48") (term "1,0,1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "0,1,0,0"))
                     (rule "leq_literals" (formula "48") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "commute_or_2" (formula "38") (term "0,0"))
                     (rule "commute_or_2" (formula "38") (term "0"))
                     (rule "commuteIntersection" (formula "39") (term "0"))
                     (rule "intersectWithSingleton" (formula "39") (term "0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "notLeft" (formula "39"))
                     (rule "ifthenelse_split" (formula "43") (term "0"))
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "61") (term "2") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "41") (term "1,0") (ifseqformula "44"))
                        (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "44"))
                        (rule "hideAuxiliaryEq" (formula "44"))
                        (rule "disjointAndSubset_4" (formula "44") (ifseqformula "27"))
                        (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "disjointAndSubset_4" (formula "44") (ifseqformula "28"))
                        (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointAndSubset_4" (formula "44") (ifseqformula "30"))
                        (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "disjointAndSubset_4" (formula "44") (ifseqformula "29"))
                        (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "disjointNotInOtherLocset2" (formula "43") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "commute_or" (formula "38") (term "0,0,0"))
                        (rule "cut_direct" (formula "3") (term "1"))
                        (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "cut_direct" (formula "74") (term "0,0"))
                           (branch "CUT: o_4 = null TRUE"
                              (builtin "One Step Simplification" (formula "75"))
                              (rule "false_right" (formula "75"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "75")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_4 = null FALSE"
                              (builtin "One Step Simplification" (formula "75"))
                              (rule "notRight" (formula "75"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "75"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "76")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "4"))
                           (rule "disjointNotInOtherLocset2" (formula "3") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "eqSymm" (formula "59"))
                           (rule "disjointNotInOtherLocset2" (formula "3") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "eqSymm" (formula "59"))
                           (rule "disjointNotInOtherLocset2" (formula "3") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "eqSymm" (formula "59"))
                           (rule "disjointNotInOtherLocset2" (formula "3") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "eqSymm" (formula "59"))
                           (rule "cut_direct" (formula "75") (term "0,0"))
                           (branch "CUT: o_4 = null TRUE"
                              (builtin "One Step Simplification" (formula "76"))
                              (rule "false_right" (formula "76"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "76")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_4 = null FALSE"
                              (builtin "One Step Simplification" (formula "76"))
                              (rule "notRight" (formula "76"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "76")) (ifInst ""  (formula "77")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "43"))
                        (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "true_left" (formula "43"))
                        (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "42"))
                        (rule "applyEqReverse" (formula "58") (term "2") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "40"))
                        (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "39"))
                        (rule "hideAuxiliaryEq" (formula "39"))
                        (rule "commute_or" (formula "38") (term "0,0,0"))
                        (rule "commute_or_2" (formula "38") (term "0,0"))
                        (rule "cut_direct" (formula "70") (term "0,0"))
                        (branch "CUT: o_4 = null TRUE"
                           (builtin "One Step Simplification" (formula "71"))
                           (rule "false_right" (formula "71"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_4 = null FALSE"
                           (builtin "One Step Simplification" (formula "71"))
                           (rule "notRight" (formula "71"))
                           (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Null Reference (v_arr_3 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (v_arr_3 != null, but x_3 Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                  (rule "false_right" (formula "75"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "51"))
                  (rule "lenOfSeqConcat" (formula "48") (term "0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "polySimp_homoEq" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0"))
                  (rule "add_zero_left" (formula "48") (term "0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                  (rule "add_literals" (formula "48") (term "1,0"))
                  (rule "times_zero_1" (formula "48") (term "0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "49"))
                  (rule "lenOfSeqConcat" (formula "45") (term "0"))
                  (builtin "One Step Simplification" (formula "45"))
                  (rule "polySimp_addComm0" (formula "45") (term "0"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                  (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                  (rule "mul_literals" (formula "43") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "44"))
                  (rule "leq_literals" (formula "43") (term "0"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                  (rule "andLeft" (formula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0"))
                  (rule "add_literals" (formula "12") (term "0"))
                  (rule "leq_literals" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
               (branch "Array Store Exception (incompatible dynamic element type of v_arr_3 and v_1)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "11")))
                  (rule "false_right" (formula "75"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "array_store_known_dynamic_array_type" (formula "65") (ifseqformula "19"))
                  (rule "orRight" (formula "65"))
                  (rule "instanceof_static_type" (formula "65") (term "0"))
                  (builtin "One Step Simplification" (formula "65"))
                  (rule "closeTrue" (formula "65"))
               )
            )
            (branch "Exceptional Post (Voter)"
               (builtin "One Step Simplification" (formula "57"))
               (builtin "One Step Simplification" (formula "64"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,0,1,0,1") (ifseqformula "36"))
               (rule "andLeft" (formula "57"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,0,0") (ifseqformula "57"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0,0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "1,1,0,1,0") (ifseqformula "57"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,1,0,1,0") (ifseqformula "36"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "60"))
               (rule "andLeft" (formula "59"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "62"))
               (rule "andLeft" (formula "60"))
               (rule "notLeft" (formula "58"))
               (rule "close" (formula "65") (ifseqformula "64"))
            )
            (branch "Pre (Voter)"
               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "39")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
               (rule "wellFormedAnonEQ" (formula "62") (term "0") (ifseqformula "36"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "62") (term "1") (ifseqformula "36"))
               (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "35")) (ifInst ""  (formula "56")) (ifInst ""  (formula "38")))
               (rule "closeTrue" (formula "62"))
            )
         )
      )
      (branch "Null Reference (_choices0 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_choices0 != null, but _i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
         (builtin "One Step Simplification" (formula "60"))
         (rule "false_right" (formula "60"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "15"))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
         (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
         (rule "ifEqualsTRUE" (formula "3"))
         (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
         (rule "lenOfSeqConcat" (formula "45") (term "0"))
         (builtin "One Step Simplification" (formula "45"))
         (rule "polySimp_homoEq" (formula "45"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
         (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "45") (term "1,0"))
         (rule "mul_literals" (formula "45") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "45") (term "0"))
         (rule "polySimp_addComm1" (formula "45") (term "0,0"))
         (rule "add_literals" (formula "45") (term "0,0,0"))
         (rule "add_zero_left" (formula "45") (term "0,0"))
         (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
         (rule "add_literals" (formula "45") (term "1,0"))
         (rule "times_zero_1" (formula "45") (term "0"))
         (builtin "One Step Simplification" (formula "45"))
         (rule "true_left" (formula "45"))
         (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "47"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
         (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "10"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
         (rule "andLeft" (formula "11"))
         (rule "inEqSimp_homoInEq1" (formula "11"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0"))
         (rule "add_literals" (formula "11") (term "0"))
         (rule "leq_literals" (formula "11"))
         (rule "closeFalse" (formula "11"))
      )
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "59"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "assignment_array2" (formula "59"))
      (branch "Normal Execution (_choices1 != null)"
         (builtin "One Step Simplification" (formula "59"))
         (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
         (rule "blockEmpty" (formula "60") (term "1"))
         (rule "eval_order_array_access1" (formula "60") (term "1") (inst "#v0=v_arr"))
         (rule "variableDeclarationAssign" (formula "60") (term "1"))
         (rule "variableDeclaration" (formula "60") (term "1") (newnames "v_arr"))
         (rule "assignment_read_attribute_this" (formula "60"))
         (builtin "One Step Simplification" (formula "60"))
         (rule "pullOutSelect" (formula "60") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
         (rule "eval_order_array_access3" (formula "61") (inst "#v1=v") (inst "#v2=x") (inst "#v0=v_arr_1"))
         (branch "ArrayIndexOutOfBounds (_i<0 | _i>=v_arr.length)"
            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "10")))
            (rule "inEqSimp_ltRight" (formula "61"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "50"))
            (rule "lenOfSeqConcat" (formula "47") (term "0"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "polySimp_homoEq" (formula "47"))
            (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "47") (term "1,0"))
            (rule "mul_literals" (formula "47") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "47") (term "0"))
            (rule "polySimp_addComm1" (formula "47") (term "0,0"))
            (rule "add_literals" (formula "47") (term "0,0,0"))
            (rule "add_zero_left" (formula "47") (term "0,0"))
            (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
            (rule "add_literals" (formula "47") (term "1,0"))
            (rule "times_zero_1" (formula "47") (term "0"))
            (builtin "One Step Simplification" (formula "47"))
            (rule "true_left" (formula "47"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
            (rule "apply_eq_boolean" (formula "4") (term "1") (ifseqformula "52"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "notLeft" (formula "4"))
            (rule "ifEqualsTRUE" (formula "51"))
            (rule "orRight" (formula "51"))
            (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "47"))
            (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
            (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "disjointAllFields" (formula "3") (term "1,0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "getOfSeqConcat" (formula "43") (term "0,1"))
            (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1"))
            (rule "polySimp_pullOutFactor1" (formula "43") (term "1,2,0,1"))
            (rule "add_literals" (formula "43") (term "1,1,2,0,1"))
            (rule "times_zero_1" (formula "43") (term "1,2,0,1"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "castDel" (formula "43") (term "2,0,1"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1"))
            (rule "polySimp_pullOutFactor2b" (formula "43") (term "0,0,0,1"))
            (rule "add_literals" (formula "43") (term "1,1,0,0,0,1"))
            (rule "times_zero_1" (formula "43") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "43") (term "0,0,0,1"))
            (rule "leq_literals" (formula "43") (term "0,0,1"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "true_left" (formula "43"))
            (rule "getOfSeqConcat" (formula "42") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "42"))
            (rule "eqSymm" (formula "42") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "42") (term "1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "42") (term "1,1,1,1,0"))
            (rule "getOfSeqSingleton" (formula "42") (term "1,1,1,0"))
            (rule "castDel" (formula "42") (term "2,1,1,1,0"))
            (rule "castDel" (formula "42") (term "1,1,1,1,0"))
            (rule "eqSymm" (formula "42") (term "1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "42") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0"))
            (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1,0"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
            (rule "elementOfSingleton" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
            (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
            (rule "andLeft" (formula "9"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,1,0"))
            (rule "times_zero_1" (formula "9") (term "1,0"))
            (rule "add_zero_right" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
         (branch "Normal Execution"
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "v_arr_1"))
            (rule "assignment" (formula "61") (term "1"))
            (builtin "One Step Simplification" (formula "61"))
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "x_2"))
            (rule "assignment" (formula "61") (term "1"))
            (builtin "One Step Simplification" (formula "61"))
            (rule "variableDeclarationAssign" (formula "61") (term "1"))
            (rule "variableDeclaration" (formula "61") (term "1") (newnames "v"))
            (rule "apply_eq_boolean" (formula "3") (term "1") (ifseqformula "54"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "ifEqualsTRUE" (formula "53"))
            (rule "orRight" (formula "53"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "33"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "2") (term "0,0"))
            (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
            (rule "elementOfSingleton" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "61") (term "0,1,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "60") (term "0,1,0,0"))
            (rule "hideAuxiliaryEqConcrete2" (formula "53"))
            (rule "lenNonNegative" (formula "44") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "44"))
            (rule "lenNonNegative" (formula "45") (term "1,1"))
            (rule "inEqSimp_commuteLeq" (formula "45"))
            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "45"))
            (rule "qeq_literals" (formula "48") (term "0,0"))
            (builtin "One Step Simplification" (formula "48"))
            (builtin "Use Operation Contract" (formula "61") (newnames "heapBefore_Voter,self_0,exc_1,heapAfter_Voter,anon_heap_Voter") (contract "de.uni.trier.infsec.eVotingVerif.core.Voter[de.uni.trier.infsec.eVotingVerif.core.Voter::Voter(byte,de.uni.trier.infsec.functionalities.smt.Sender)].JML normal_behavior operation contract.0"))
            (branch "Post (Voter)"
               (builtin "One Step Simplification" (formula "54"))
               (builtin "One Step Simplification" (formula "63"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,1,0,1") (ifseqformula "33"))
               (rule "andLeft" (formula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "33"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "57"))
               (rule "andLeft" (formula "56"))
               (rule "andLeft" (formula "58"))
               (rule "andLeft" (formula "56"))
               (rule "andLeft" (formula "60"))
               (rule "andLeft" (formula "57"))
               (rule "notLeft" (formula "56"))
               (rule "andLeft" (formula "61"))
               (rule "notLeft" (formula "56"))
               (rule "notLeft" (formula "60"))
               (rule "orRight" (formula "62"))
               (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "62"))
               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "63")))
               (rule "assignment" (formula "73") (term "1"))
               (builtin "One Step Simplification" (formula "73"))
               (rule "assignment_to_reference_array_component" (formula "73"))
               (branch "Normal Execution (v_arr_1 != null)"
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "65")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0") (ifseqformula "33"))
                  (rule "eqSymm" (formula "59"))
                  (rule "hideAuxiliaryEq" (formula "59"))
                  (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "58") (term "1"))
                  (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "62"))
                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "63")))
                  (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "65")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "33"))
                  (rule "eqSymm" (formula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "59") (term "1"))
                  (rule "replace_known_right" (formula "59") (term "1,0,0,0") (ifseqformula "63"))
                  (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "62")))
                  (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet22_0" (formula "61") (term "0"))
                  (rule "methodCallEmpty" (formula "73") (term "1"))
                  (rule "tryEmpty" (formula "73") (term "1"))
                  (rule "emptyModality" (formula "73") (term "1"))
                  (rule "andRight" (formula "73"))
                  (branch "Case 1"
                     (rule "andRight" (formula "73"))
                     (branch "Case 1"
                        (rule "impRight" (formula "73"))
                        (rule "andRight" (formula "74"))
                        (branch "Case 1"
                           (rule "andRight" (formula "74"))
                           (branch "Case 1"
                              (rule "notRight" (formula "74"))
                              (builtin "One Step Simplification" (formula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "2"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "47"))
                              (rule "lenOfSeqConcat" (formula "44") (term "0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "polySimp_homoEq" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "44") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0"))
                              (rule "add_zero_left" (formula "44") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                              (rule "add_literals" (formula "44") (term "1,0"))
                              (rule "times_zero_1" (formula "44") (term "0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                              (rule "lenOfSeqConcat" (formula "42") (term "0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "polySimp_addComm0" (formula "42") (term "0"))
                              (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                              (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                              (rule "mul_literals" (formula "40") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                              (rule "leq_literals" (formula "40") (term "0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "getOfSeqConcat" (formula "42") (term "0"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                              (rule "add_literals" (formula "42") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "42") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "castDel" (formula "42") (term "2,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "eqSymm" (formula "41") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                              (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                              (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                              (rule "eqSymm" (formula "41") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_9"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_4"))
                              (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                              (rule "eqSymm" (formula "2") (term "0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "57") (ifseqformula "3"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "74"))
                              (builtin "One Step Simplification" (formula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "2"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                              (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                              (rule "lenOfSeqConcat" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "polySimp_homoEq" (formula "46"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "46") (term "0"))
                              (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0"))
                              (rule "add_zero_left" (formula "46") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                              (rule "add_literals" (formula "46") (term "1,0"))
                              (rule "times_zero_1" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "48"))
                              (rule "lenOfSeqConcat" (formula "44") (term "0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "polySimp_addComm0" (formula "44") (term "0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                              (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                              (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                              (rule "mul_literals" (formula "40") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                              (rule "leq_literals" (formula "40") (term "0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "getOfSeqConcat" (formula "42") (term "0"))
                              (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                              (rule "add_literals" (formula "42") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "42") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "castDel" (formula "42") (term "2,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "true_left" (formula "42"))
                              (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "eqSymm" (formula "41") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                              (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                              (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                              (rule "eqSymm" (formula "41") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_10"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                              (rule "ifEqualsNull" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_5"))
                              (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                              (rule "eqSymm" (formula "56"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "74"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "74"))
                              (rule "true_left" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "73") (term "1,1"))
                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                              (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                              (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "46"))
                              (rule "lenOfSeqConcat" (formula "43") (term "0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "polySimp_homoEq" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0"))
                              (rule "add_zero_left" (formula "43") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                              (rule "add_literals" (formula "43") (term "1,0"))
                              (rule "times_zero_1" (formula "43") (term "0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                              (rule "mul_literals" (formula "39") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "eqSymm" (formula "40") (term "1,1,0"))
                              (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                              (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                              (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                              (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                              (rule "eqSymm" (formula "40") (term "1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                              (rule "getOfSeqConcat" (formula "41") (term "0"))
                              (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                              (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                              (rule "add_literals" (formula "41") (term "1,1,2,0"))
                              (rule "times_zero_1" (formula "41") (term "1,2,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "castDel" (formula "41") (term "2,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                              (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "41") (term "0,0,0"))
                              (rule "leq_literals" (formula "41") (term "0,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "true_left" (formula "41"))
                              (rule "pullOutSelect" (formula "65") (term "1,1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_13"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "66") (term "1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "65") (term "1") (inst "selectSK=arr_20"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "shift_paren_or" (formula "40") (term "0"))
                              (rule "inEqSimp_or_tautInEq3" (formula "40") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "40") (term "0,1,0,0"))
                              (rule "add_literals" (formula "40") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "40") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "40") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "31") (inst "s=s") (inst "i=i_1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "31") (term "0,1"))
                              (rule "replaceKnownSelect_taclet3_0" (formula "31") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet3_0" (formula "31") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0,0,0,1,0") (ifseqformula "28"))
                              (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "31") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "31") (term "0,1,1,0,0,0,0"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "exLeft" (formula "31") (inst "sk=i_1_7"))
                              (rule "andLeft" (formula "31"))
                              (rule "andLeft" (formula "31"))
                              (rule "inEqSimp_ltToLeq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "31"))
                              (rule "disjointDefinition" (formula "35"))
                              (rule "castedGetAny" (formula "33") (term "0"))
                              (rule "lenOfSeqConcat" (formula "32") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "add_zero_left" (formula "32") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "getOfSeqConcat" (formula "33") (term "0"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "33") (term "2,0"))
                              (rule "castDel" (formula "33") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "33") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "34") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_11"))
                              (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                              (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "64")) (ifInst ""  (formula "63")))
                              (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "nnf_imp2or" (formula "34") (term "0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "34") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "34") (term "1,1,0,0,0"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "55"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "55") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "55") (term "1,1,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "55") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "55") (term "0,0,0,0"))
                              (rule "andLeft" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "notLeft" (formula "55"))
                              (rule "disjointDefinition" (formula "56"))
                              (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "56") (term "0"))
                              (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "56"))
                              (rule "hideAuxiliaryEq" (formula "56"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "69"))
                              (rule "dismissNonSelectedField" (formula "69") (term "0,0,0,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "69") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "69") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "69") (term "0,0,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "69"))
                              (rule "dismissNonSelectedField" (formula "69") (term "1,0"))
                              (rule "replaceKnownSelect_taclet19_0" (formula "69") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "69") (term "1,0"))
                              (rule "disjointDefinition" (formula "69") (term "1"))
                              (rule "dismissNonSelectedField" (formula "69") (term "0,0,1"))
                              (rule "replaceKnownSelect_taclet29_0" (formula "69") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "69") (term "0,0,1"))
                              (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "69"))
                              (rule "commute_or_2" (formula "34") (term "0,0"))
                              (rule "commute_or_2" (formula "34") (term "0"))
                              (rule "commuteIntersection" (formula "35") (term "0"))
                              (rule "intersectWithSingleton" (formula "35") (term "0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "commute_or" (formula "34") (term "0,0,0"))
                              (rule "commute_or_2" (formula "34") (term "0,0"))
                              (rule "ifthenelse_split" (formula "39") (term "0"))
                              (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "57") (term "2") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "disjointAndSubset_4" (formula "40") (ifseqformula "23"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "disjointAndSubset_4" (formula "40") (ifseqformula "24"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "disjointAndSubset_4" (formula "40") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "disjointAndSubset_4" (formula "40") (ifseqformula "25"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "disjointNotInOtherLocset2" (formula "39") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "cut_direct" (formula "62") (term "1"))
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "notRight" (formula "63"))
                                    (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "56") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "56") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "56") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "56") (term "0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1,0,0,0,1,0") (ifseqformula "50"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "andLeft" (formula "56"))
                                    (rule "andLeft" (formula "56"))
                                    (rule "exLeft" (formula "56") (inst "sk=i_1_11"))
                                    (rule "andLeft" (formula "56"))
                                    (rule "andLeft" (formula "56"))
                                    (rule "inEqSimp_ltToLeq" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "56"))
                                    (rule "disjointDefinition" (formula "60"))
                                    (rule "castedGetAny" (formula "58") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                    (rule "pullOutSelect" (formula "59") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_15"))
                                    (rule "applyEq" (formula "58") (term "1") (ifseqformula "59"))
                                    (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "70")))
                                    (rule "replaceKnownSelect_taclet27_0" (formula "59") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet28_0" (formula "59") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "30"))
                                    (rule "replace_known_right" (formula "59") (term "0,0,0,0") (ifseqformula "69"))
                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "32")))
                                    (rule "applyEqReverse" (formula "60") (term "1,0,0,0,0") (ifseqformula "59"))
                                    (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "59"))
                                    (rule "hideAuxiliaryEq" (formula "59"))
                                    (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_7"))
                                    (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "58"))
                                    (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "replaceKnownSelect_taclet3_0" (formula "58") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "58") (term "0"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "58"))
                                    (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "58"))
                                    (rule "hideAuxiliaryEq" (formula "58"))
                                    (rule "lenOfSeqConcat" (formula "57") (term "0"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "polySimp_addComm0" (formula "57") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "57"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                    (rule "add_literals" (formula "57") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "57") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                    (rule "getOfSeqConcat" (formula "58") (term "0"))
                                    (rule "polySimp_elimSub" (formula "58") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "58") (term "2,0"))
                                    (rule "castDel" (formula "58") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "58") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "59") (term "0"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "59") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "59") (term "1,1,0,0,0"))
                                    (rule "nnf_notOr" (formula "59") (term "0,1,1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "36") (term "0"))
                                    (rule "distr_forallAnd" (formula "36"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "74") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "74") (term "0,0,0,0,0"))
                                    (rule "disjointDefinition" (formula "74") (term "1"))
                                    (rule "castedGetAny" (formula "74") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "74") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "74") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "74") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "74") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "1,1,0,0,0,1,0") (ifseqformula "50"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "74") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "74") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "74") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "74") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "74") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "lenOfSeqConcat" (formula "74") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "74") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "74") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "74") (term "0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "74") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "74") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "74") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "74") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "74") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "74") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "74") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "74") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "74") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "74") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "74") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "74") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "74") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "nnf_notAnd" (formula "74") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "74") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "74") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "74") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "74") (term "1") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "nnf_ex2all" (formula "74"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "commuteIntersection" (formula "62") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0"))
                                    (rule "commute_or_2" (formula "60") (term "0,0"))
                                    (rule "commuteIntersection" (formula "61") (term "0"))
                                    (rule "intersectWithSingleton" (formula "61") (term "0"))
                                    (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "63")))
                                    (rule "true_left" (formula "61"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 TRUE"
                                       (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "60") (term "0,0,2,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "58") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "36"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "24") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                       (rule "mul_literals" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "commute_or_2" (formula "63") (term "0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or" (formula "64") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "64") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "64") (term "0"))
                                       (rule "distr_forallAnd" (formula "64"))
                                       (builtin "One Step Simplification" (formula "64"))
                                       (rule "castDel" (formula "64") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "64") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "64") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "64"))
                                       (rule "commute_or" (formula "64") (term "0"))
                                       (rule "cnf_rightDist" (formula "64") (term "0"))
                                       (rule "distr_forallAnd" (formula "64"))
                                       (rule "andLeft" (formula "64"))
                                       (rule "shift_paren_or" (formula "65") (term "0"))
                                       (rule "commute_or" (formula "65") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "64") (term "0"))
                                       (rule "distr_forallAnd" (formula "64"))
                                       (rule "andLeft" (formula "64"))
                                       (rule "commute_or_2" (formula "64") (term "0"))
                                       (rule "shift_paren_or" (formula "65") (term "0"))
                                       (rule "commute_or" (formula "65") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "62"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                       (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                       (rule "add_literals" (formula "62") (term "0,0"))
                                       (rule "leq_literals" (formula "62") (term "0"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "false_right" (formula "62"))
                                       (rule "commute_or_2" (formula "60") (term "0"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "24") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "24") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                       (rule "times_zero_1" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or" (formula "65") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_and_2" (formula "65") (term "1,1,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or_2" (formula "65") (term "0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "64") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 TRUE"
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "64"))
                                          (rule "applyEq" (formula "65") (term "0,0,0") (ifseqformula "64"))
                                          (rule "inEqSimp_homoInEq1" (formula "65") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,0"))
                                          (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0,0"))
                                          (rule "leq_literals" (formula "65") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "65"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "64"))
                                          (rule "inEqSimp_homoInEq1" (formula "39"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "64"))
                                          (rule "inEqSimp_homoInEq1" (formula "63"))
                                          (rule "polySimp_pullOutFactor1" (formula "63") (term "0"))
                                          (rule "add_literals" (formula "63") (term "1,0"))
                                          (rule "times_zero_1" (formula "63") (term "0"))
                                          (rule "leq_literals" (formula "63"))
                                          (rule "true_left" (formula "63"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "63"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "63"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,1,1,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "63"))
                                          (rule "applyEq" (formula "40") (term "1") (ifseqformula "63"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,1,1,1,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,1,1,0") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "64") (term "1,0,1,0,0") (ifseqformula "63"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "63"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0,1,0") (ifseqformula "63"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                                          (rule "times_zero_1" (formula "38") (term "0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                          (rule "mul_literals" (formula "38") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "38"))
                                          (rule "leq_literals" (formula "62") (term "0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "64") (term "0"))
                                          (rule "distr_forallAnd" (formula "64"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "castDel" (formula "64") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "64") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "64") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "commute_or" (formula "64") (term "0"))
                                          (rule "cnf_rightDist" (formula "64") (term "0"))
                                          (rule "distr_forallAnd" (formula "64"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "shift_paren_or" (formula "65") (term "0"))
                                          (rule "commute_or" (formula "65") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "64") (term "0"))
                                          (rule "distr_forallAnd" (formula "64"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "commute_or_2" (formula "64") (term "0"))
                                          (rule "shift_paren_or" (formula "65") (term "0"))
                                          (rule "commute_or" (formula "65") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "63") (ifseqformula "67"))
                                          (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "inEqSimp_contradEq7" (formula "67") (ifseqformula "63"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                          (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "67") (term "0,0"))
                                          (rule "leq_literals" (formula "67") (term "0"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "false_right" (formula "67"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "66") (term "0"))
                                          (rule "distr_forallAnd" (formula "66"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "castDel" (formula "66") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "66") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "66") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "commute_or" (formula "66") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "51"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "cnf_rightDist" (formula "65") (term "0"))
                                          (rule "distr_forallAnd" (formula "65"))
                                          (rule "andLeft" (formula "65"))
                                          (rule "shift_paren_or" (formula "66") (term "0"))
                                          (rule "commute_or" (formula "66") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "65") (term "0"))
                                          (rule "distr_forallAnd" (formula "65"))
                                          (rule "andLeft" (formula "65"))
                                          (rule "commute_or_2" (formula "65") (term "0"))
                                          (rule "shift_paren_or" (formula "66") (term "0"))
                                          (rule "commute_or" (formula "66") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "61") (term "1,0,1") (ifseqformula "62"))
                                          (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "62"))
                                          (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_11"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_7"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "65"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "2"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0"))
                                          (rule "leq_literals" (formula "41"))
                                          (rule "closeFalse" (formula "41"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "63"))
                                    (rule "false_right" (formula "63"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "54") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "54") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "54") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "54") (term "0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "1,1,0,0,0,1,0") (ifseqformula "48"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "exLeft" (formula "54") (inst "sk=i_1_10"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "andLeft" (formula "54"))
                                    (rule "inEqSimp_ltToLeq" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "54"))
                                    (rule "disjointDefinition" (formula "58"))
                                    (rule "castedGetAny" (formula "56") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "pullOutSelect" (formula "57") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_14"))
                                    (rule "applyEq" (formula "56") (term "1") (ifseqformula "57"))
                                    (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "69")))
                                    (rule "replaceKnownSelect_taclet27_0" (formula "57") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet28_0" (formula "57") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_right" (formula "57") (term "0,0,0,0") (ifseqformula "68"))
                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "30")))
                                    (rule "applyEqReverse" (formula "58") (term "1,0,0,0,0") (ifseqformula "57"))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "57"))
                                    (rule "hideAuxiliaryEq" (formula "57"))
                                    (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_6"))
                                    (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "56"))
                                    (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "replaceKnownSelect_taclet3_0" (formula "56") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "56") (term "0"))
                                    (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "56"))
                                    (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "56"))
                                    (rule "hideAuxiliaryEq" (formula "56"))
                                    (rule "lenOfSeqConcat" (formula "55") (term "0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "polySimp_addComm0" (formula "55") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "55") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "0"))
                                    (rule "getOfSeqConcat" (formula "56") (term "0"))
                                    (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "56") (term "2,0"))
                                    (rule "castDel" (formula "56") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "56") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "57") (term "0"))
                                    (rule "nnf_notAnd" (formula "57") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "nnf_notAnd" (formula "57") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "57") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "57") (term "1,1,0,0,0"))
                                    (rule "nnf_notOr" (formula "57") (term "0,1,1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "34") (term "0"))
                                    (rule "distr_forallAnd" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "castDel" (formula "34") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "34") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "73") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "73") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "73") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "73") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "73") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "73") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "73") (term "0,1"))
                                    (rule "castedGetAny" (formula "73") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "1,1,0,0,0,1,0") (ifseqformula "48"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "73") (term "0,1,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "73") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "disjointDefinition" (formula "73") (term "1"))
                                    (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "lenOfSeqConcat" (formula "73") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "73") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "73") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "73") (term "0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "73") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "73") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "73") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "73") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "73") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "73") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "73") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "73") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "73") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "nnf_notAnd" (formula "73") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "73") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "73") (term "1") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "73"))
                                    (rule "nnf_ex2all" (formula "73"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commuteIntersection" (formula "60") (term "0"))
                                    (rule "commute_or" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "58") (term "0,0"))
                                    (rule "commuteIntersection" (formula "59") (term "0"))
                                    (rule "intersectWithSingleton" (formula "59") (term "0"))
                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "61")))
                                    (rule "true_left" (formula "59"))
                                    (rule "ifthenelse_split" (formula "34") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 TRUE"
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "33"))
                                       (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                       (rule "add_literals" (formula "33") (term "1,0"))
                                       (rule "times_zero_1" (formula "33") (term "0"))
                                       (rule "leq_literals" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "applyEq" (formula "57") (term "0,0,2,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "leq_literals" (formula "34") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "56") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "34"))
                                       (rule "allLeft" (formula "17") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "allLeft" (formula "18") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "commute_or_2" (formula "61") (term "0"))
                                       (rule "cnf_rightDist" (formula "39") (term "0"))
                                       (rule "distr_forallAnd" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "shift_paren_or" (formula "40") (term "0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "commute_or" (formula "62") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "62") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "62") (term "0"))
                                       (rule "distr_forallAnd" (formula "62"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "castDel" (formula "62") (term "0,1,0,0,0"))
                                       (rule "castDel" (formula "62") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "62"))
                                       (rule "commute_or" (formula "62") (term "0"))
                                       (rule "cnf_rightDist" (formula "62") (term "0"))
                                       (rule "distr_forallAnd" (formula "62"))
                                       (rule "andLeft" (formula "62"))
                                       (rule "shift_paren_or" (formula "63") (term "0"))
                                       (rule "commute_or" (formula "63") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "62") (term "0"))
                                       (rule "distr_forallAnd" (formula "62"))
                                       (rule "andLeft" (formula "62"))
                                       (rule "commute_or_2" (formula "62") (term "0"))
                                       (rule "shift_paren_or" (formula "63") (term "0"))
                                       (rule "commute_or" (formula "63") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "38"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "60"))
                                       (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "33"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "false_right" (formula "60"))
                                       (rule "commute_or_2" (formula "58") (term "0"))
                                       (rule "allLeft" (formula "17") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "allLeft" (formula "18") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "cnf_rightDist" (formula "39") (term "0"))
                                       (rule "distr_forallAnd" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "commute_or" (formula "63") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and_2" (formula "63") (term "1,1,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "shift_paren_or" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "63") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "62") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_10 TRUE"
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "62"))
                                          (rule "inEqSimp_homoInEq1" (formula "37"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "62"))
                                          (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "61"))
                                          (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "62") (term "0,0,0"))
                                          (rule "leq_literals" (formula "62") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "61"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "61"))
                                          (rule "inEqSimp_homoInEq1" (formula "60"))
                                          (rule "polySimp_pullOutFactor1" (formula "60") (term "0"))
                                          (rule "add_literals" (formula "60") (term "1,0"))
                                          (rule "times_zero_1" (formula "60") (term "0"))
                                          (rule "leq_literals" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,1,1,0") (ifseqformula "60"))
                                          (rule "applyEq" (formula "62") (term "1,0,1,0,0") (ifseqformula "61"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,1,1,1,0") (ifseqformula "60"))
                                          (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "61"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "61"))
                                          (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "61"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,1,1,0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0,1,0") (ifseqformula "61"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1"))
                                          (rule "mul_literals" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                          (rule "times_zero_1" (formula "36") (term "0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                          (rule "mul_literals" (formula "36") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "36"))
                                          (rule "leq_literals" (formula "60") (term "0"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "true_left" (formula "60"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "62") (term "0"))
                                          (rule "distr_forallAnd" (formula "62"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "castDel" (formula "62") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "62") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "62") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "commute_or" (formula "62") (term "0"))
                                          (rule "cnf_rightDist" (formula "62") (term "0"))
                                          (rule "distr_forallAnd" (formula "62"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "shift_paren_or" (formula "63") (term "0"))
                                          (rule "commute_or" (formula "63") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "62") (term "0"))
                                          (rule "distr_forallAnd" (formula "62"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "commute_or_2" (formula "62") (term "0"))
                                          (rule "shift_paren_or" (formula "63") (term "0"))
                                          (rule "commute_or" (formula "63") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "62"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "closeFalse" (formula "38"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_10 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "61") (ifseqformula "65"))
                                          (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "inEqSimp_contradEq7" (formula "65") (ifseqformula "61"))
                                          (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                          (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                          (rule "add_literals" (formula "65") (term "0,0"))
                                          (rule "leq_literals" (formula "65") (term "0"))
                                          (builtin "One Step Simplification" (formula "65"))
                                          (rule "false_right" (formula "65"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "64") (term "0"))
                                          (rule "distr_forallAnd" (formula "64"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "castDel" (formula "64") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "64") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "64") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "commute_or" (formula "64") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "49"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "cnf_rightDist" (formula "63") (term "0"))
                                          (rule "distr_forallAnd" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "shift_paren_or" (formula "64") (term "0"))
                                          (rule "commute_or" (formula "64") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "63") (term "0"))
                                          (rule "distr_forallAnd" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "commute_or_2" (formula "63") (term "0"))
                                          (rule "shift_paren_or" (formula "64") (term "0"))
                                          (rule "commute_or" (formula "64") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "53"))
                                          (rule "applyEq" (formula "59") (term "1,0,1") (ifseqformula "60"))
                                          (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "60"))
                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "77"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_10"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_7"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "38"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "63"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "2"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "39"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0"))
                                          (rule "leq_literals" (formula "39"))
                                          (rule "closeFalse" (formula "39"))
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "39"))
                                 (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "38"))
                                 (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "37"))
                                 (rule "applyEqReverse" (formula "53") (term "2") (ifseqformula "36"))
                                 (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "36"))
                                 (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "cut_direct" (formula "57") (term "1"))
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "eqSymm" (formula "52"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "50") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "50") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "50") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "50") (term "0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "1,1,0,0,0,1,0") (ifseqformula "44"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "exLeft" (formula "50") (inst "sk=i_1_9"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "andLeft" (formula "50"))
                                    (rule "inEqSimp_ltToLeq" (formula "51"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "50"))
                                    (rule "disjointDefinition" (formula "54"))
                                    (rule "castedGetAny" (formula "52") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "54"))
                                    (rule "elementOfSingleton" (formula "56"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "false_right" (formula "56"))
                                    (rule "pullOutSelect" (formula "53") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_13"))
                                    (rule "applyEq" (formula "52") (term "1") (ifseqformula "53"))
                                    (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "65")))
                                    (rule "replaceKnownSelect_taclet27_0" (formula "53") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet28_0" (formula "53") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0") (ifseqformula "30"))
                                    (rule "replace_known_left" (formula "53") (term "1,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")))
                                    (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                                    (rule "applyEqReverse" (formula "54") (term "1,0,0,0,0") (ifseqformula "53"))
                                    (rule "hideAuxiliaryEq" (formula "53"))
                                    (rule "pullOutSelect" (formula "52") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_5"))
                                    (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "52"))
                                    (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "replaceKnownSelect_taclet3_0" (formula "52") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "52") (term "0"))
                                    (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "52"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "52"))
                                    (rule "hideAuxiliaryEq" (formula "52"))
                                    (rule "lenOfSeqConcat" (formula "51") (term "0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "polySimp_addComm0" (formula "51") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "51"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                    (rule "getOfSeqConcat" (formula "52") (term "0"))
                                    (rule "polySimp_elimSub" (formula "52") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "52") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "52") (term "2,0"))
                                    (rule "castDel" (formula "52") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "52") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "52") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "53") (term "0"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "nnf_notAnd" (formula "53") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "53") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "53") (term "1,1,0,0,0"))
                                    (rule "nnf_notOr" (formula "53") (term "0,1,1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "36") (term "0"))
                                    (rule "distr_forallAnd" (formula "36"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "castDel" (formula "36") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "69") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "69") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "69") (term "1,0,0,0,0,1,0"))
                                    (rule "castedGetAny" (formula "69") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "69") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "69") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "69") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,1,0,0,0,1,0") (ifseqformula "44"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "69") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "69") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "69") (term "1"))
                                    (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "lenOfSeqConcat" (formula "69") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "69") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "69") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "69") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "69") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "69") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "69") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "69") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "69") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "69") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "nnf_notAnd" (formula "69") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "69") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "69") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "69") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "nnf_ex2all" (formula "69"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "commuteIntersection" (formula "56") (term "0"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "commute_or" (formula "37") (term "0"))
                                    (rule "commuteIntersection" (formula "55") (term "0"))
                                    (rule "intersectWithSingleton" (formula "55") (term "0"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "58")))
                                    (rule "true_left" (formula "55"))
                                    (rule "commute_or_2" (formula "54") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "36") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 TRUE"
                                       (rule "applyEq" (formula "40") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                       (rule "add_literals" (formula "35") (term "1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0"))
                                       (rule "leq_literals" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "52") (term "0,0,2,0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "52") (term "0,2,0"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_commuteGeq" (formula "51"))
                                       (rule "applyEq" (formula "37") (term "1,0,1,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "53") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "52") (term "1") (ifseqformula "36"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "35"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                       (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
                                       (rule "mul_literals" (formula "50") (term "0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "24") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "24") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "commute_or_2" (formula "57") (term "0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "commute_or" (formula "58") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "58") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0"))
                                       (rule "distr_forallAnd" (formula "58"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "commute_or" (formula "58") (term "0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0"))
                                       (rule "distr_forallAnd" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "shift_paren_or" (formula "59") (term "0"))
                                       (rule "commute_or" (formula "59") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "58") (term "0"))
                                       (rule "distr_forallAnd" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "commute_or_2" (formula "58") (term "0"))
                                       (rule "shift_paren_or" (formula "59") (term "0"))
                                       (rule "commute_or" (formula "59") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "40"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "56"))
                                       (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                       (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "56") (term "0,0"))
                                       (rule "leq_literals" (formula "56") (term "0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "commute_or_2" (formula "54") (term "0"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "24") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or" (formula "59") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "41") (term "0"))
                                       (rule "commute_and_2" (formula "59") (term "1,1,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "shift_paren_or" (formula "42") (term "0"))
                                       (rule "commute_or_2" (formula "59") (term "0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "58") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_9 TRUE"
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "58"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                          (rule "inEqSimp_homoInEq1" (formula "57"))
                                          (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                          (rule "add_literals" (formula "57") (term "1,0"))
                                          (rule "times_zero_1" (formula "57") (term "0"))
                                          (rule "leq_literals" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,1,1,0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                          (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                          (rule "leq_literals" (formula "57") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "applyEq" (formula "58") (term "1,0,1,0,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,1,1,1,0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "40") (term "1") (ifseqformula "57"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "57"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,1,1,0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0"))
                                          (rule "distr_forallAnd" (formula "58"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "castDel" (formula "58") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "58") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "commute_or" (formula "58") (term "0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0"))
                                          (rule "distr_forallAnd" (formula "58"))
                                          (rule "andLeft" (formula "58"))
                                          (rule "shift_paren_or" (formula "59") (term "0"))
                                          (rule "commute_or" (formula "59") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "58") (term "0"))
                                          (rule "distr_forallAnd" (formula "58"))
                                          (rule "andLeft" (formula "58"))
                                          (rule "commute_or_2" (formula "58") (term "0"))
                                          (rule "shift_paren_or" (formula "59") (term "0"))
                                          (rule "commute_or" (formula "59") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "57"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_9 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "57") (ifseqformula "61"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "57"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "57"))
                                          (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                          (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "61") (term "0,0"))
                                          (rule "leq_literals" (formula "61") (term "0"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "false_right" (formula "61"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "60") (term "0"))
                                          (rule "distr_forallAnd" (formula "60"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "castDel" (formula "60") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "60") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "60") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "commute_or" (formula "60") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "45"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "cnf_rightDist" (formula "59") (term "0"))
                                          (rule "distr_forallAnd" (formula "59"))
                                          (rule "andLeft" (formula "59"))
                                          (rule "shift_paren_or" (formula "60") (term "0"))
                                          (rule "commute_or" (formula "60") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "59") (term "0"))
                                          (rule "distr_forallAnd" (formula "59"))
                                          (rule "andLeft" (formula "59"))
                                          (rule "commute_or_2" (formula "59") (term "0"))
                                          (rule "shift_paren_or" (formula "60") (term "0"))
                                          (rule "commute_or" (formula "60") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "49"))
                                          (rule "applyEq" (formula "55") (term "1,0,1") (ifseqformula "56"))
                                          (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "56"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_9"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_7"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "60"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "2"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "41"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_literals" (formula "41") (term "0"))
                                          (rule "leq_literals" (formula "41"))
                                          (rule "closeFalse" (formula "41"))
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "false_right" (formula "58"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "48") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "48") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "48") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "48") (term "0,1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "1,1,0,0,0,1,0") (ifseqformula "42"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "exLeft" (formula "48") (inst "sk=i_1_8"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "inEqSimp_ltToLeq" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "48"))
                                    (rule "disjointDefinition" (formula "52"))
                                    (rule "castedGetAny" (formula "50") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "pullOutSelect" (formula "51") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_12"))
                                    (rule "applyEq" (formula "50") (term "1") (ifseqformula "51"))
                                    (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "64")))
                                    (rule "replaceKnownSelect_taclet27_0" (formula "51") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet28_0" (formula "51") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "51") (term "1,0,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "63")))
                                    (rule "applyEqReverse" (formula "52") (term "1,0,0,0,0") (ifseqformula "51"))
                                    (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "51"))
                                    (rule "hideAuxiliaryEq" (formula "51"))
                                    (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_4"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "50"))
                                    (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "replaceKnownSelect_taclet3_0" (formula "50") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "50") (term "0"))
                                    (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "50"))
                                    (rule "applyEqReverse" (formula "49") (term "0,0") (ifseqformula "50"))
                                    (rule "hideAuxiliaryEq" (formula "50"))
                                    (rule "lenOfSeqConcat" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "polySimp_addComm0" (formula "49") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                    (rule "mul_literals" (formula "49") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "getOfSeqConcat" (formula "50") (term "0"))
                                    (rule "polySimp_elimSub" (formula "50") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "50") (term "2,0"))
                                    (rule "castDel" (formula "50") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "50") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "51") (term "0"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "nnf_notAnd" (formula "51") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "51") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "51") (term "1,1,0,0,0"))
                                    (rule "nnf_notOr" (formula "51") (term "0,1,1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "34") (term "0"))
                                    (rule "distr_forallAnd" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "castDel" (formula "34") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "34") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "68") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "68") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "68") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "68") (term "1,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "68") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "1,1,0,0,0,1,0") (ifseqformula "42"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1,0,0,0,1,0") (ifseqformula "28"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "68") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "68") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet29_0" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "68") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "68") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "lenOfSeqConcat" (formula "68") (term "0,1,0,0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "68") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "68") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "68") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "68") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "68") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "68") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "68") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "68") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "nnf_notAnd" (formula "68") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "68") (term "0,1,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "nnf_ex2all" (formula "68"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commuteIntersection" (formula "54") (term "0"))
                                    (rule "commute_or" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0"))
                                    (rule "commuteIntersection" (formula "53") (term "0"))
                                    (rule "intersectWithSingleton" (formula "53") (term "0"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "56")))
                                    (rule "true_left" (formula "53"))
                                    (rule "ifthenelse_split" (formula "34") (term "2,0"))
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 TRUE"
                                       (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                       (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "33"))
                                       (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                       (rule "add_literals" (formula "33") (term "1,0"))
                                       (rule "times_zero_1" (formula "33") (term "0"))
                                       (rule "leq_literals" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "33"))
                                       (rule "inEqSimp_commuteGeq" (formula "50"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "50") (term "0,0,2,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "50") (term "0,2,0"))
                                       (rule "applyEq" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "50") (term "1") (ifseqformula "34"))
                                       (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "34"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                       (rule "mul_literals" (formula "48") (term "0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0"))
                                       (rule "commute_or_2" (formula "51") (term "0"))
                                       (rule "allLeft" (formula "17") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "allLeft" (formula "18") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "cnf_rightDist" (formula "39") (term "0"))
                                       (rule "distr_forallAnd" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "commute_or" (formula "56") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and_2" (formula "56") (term "1,1,0"))
                                       (rule "shift_paren_or" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "56") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0"))
                                       (rule "distr_forallAnd" (formula "56"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                                       (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "commute_or" (formula "56") (term "0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0"))
                                       (rule "distr_forallAnd" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "shift_paren_or" (formula "57") (term "0"))
                                       (rule "commute_or" (formula "57") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "56") (term "0"))
                                       (rule "distr_forallAnd" (formula "56"))
                                       (rule "andLeft" (formula "56"))
                                       (rule "commute_or_2" (formula "56") (term "0"))
                                       (rule "shift_paren_or" (formula "57") (term "0"))
                                       (rule "commute_or" (formula "57") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "1") (term "0"))
                                       (rule "distr_forallAnd" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "0"))
                                       (rule "shift_paren_or" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or" (formula "2") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "2") (term "0"))
                                       (rule "distr_forallAnd" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or_2" (formula "3") (term "0"))
                                       (rule "shift_paren_or" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "0,1"))
                                       (rule "castDel" (formula "2") (term "0,1,0"))
                                       (rule "castDel" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "qeq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                       (rule "add_literals" (formula "2") (term "0,1"))
                                       (rule "leq_literals" (formula "2") (term "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "38"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_7 FALSE"
                                       (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "54"))
                                       (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "33"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                       (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "54") (term "0,0"))
                                       (rule "leq_literals" (formula "54") (term "0"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "false_right" (formula "54"))
                                       (rule "commute_or_2" (formula "52") (term "0"))
                                       (rule "allLeft" (formula "17") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "allLeft" (formula "18") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "cnf_rightDist" (formula "39") (term "0"))
                                       (rule "distr_forallAnd" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "commute_or" (formula "57") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_and_2" (formula "57") (term "1,1,0"))
                                       (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                       (rule "shift_paren_or" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "57") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "56") (term "2,0"))
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_8 TRUE"
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "56"))
                                          (rule "applyEq" (formula "55") (term "0") (ifseqformula "56"))
                                          (rule "inEqSimp_homoInEq1" (formula "55"))
                                          (rule "polySimp_pullOutFactor1" (formula "55") (term "0"))
                                          (rule "add_literals" (formula "55") (term "1,0"))
                                          (rule "times_zero_1" (formula "55") (term "0"))
                                          (rule "leq_literals" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,0"))
                                          (rule "leq_literals" (formula "56") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "applyEq" (formula "1") (term "1,1,0,1,1,0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "54"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,1,1,1,0") (ifseqformula "54"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0,1,0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "55"))
                                          (rule "applyEq" (formula "38") (term "1") (ifseqformula "55"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,1,1,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "55"))
                                          (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                          (rule "cnf_rightDist" (formula "56") (term "0"))
                                          (rule "distr_forallAnd" (formula "56"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "commute_or" (formula "56") (term "0"))
                                          (rule "cnf_rightDist" (formula "56") (term "0"))
                                          (rule "distr_forallAnd" (formula "56"))
                                          (rule "andLeft" (formula "56"))
                                          (rule "shift_paren_or" (formula "57") (term "0"))
                                          (rule "commute_or" (formula "57") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "56") (term "0"))
                                          (rule "distr_forallAnd" (formula "56"))
                                          (rule "andLeft" (formula "56"))
                                          (rule "commute_or_2" (formula "56") (term "0"))
                                          (rule "shift_paren_or" (formula "57") (term "0"))
                                          (rule "commute_or" (formula "57") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "2") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "2") (term "0"))
                                          (rule "distr_forallAnd" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "commute_or_2" (formula "3") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,1"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "qeq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,1"))
                                          (rule "leq_literals" (formula "2") (term "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "55"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_8 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "55") (ifseqformula "59"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "55"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "58") (term "0"))
                                          (rule "distr_forallAnd" (formula "58"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "castDel" (formula "58") (term "1,0,0,1,0,0"))
                                          (rule "castDel" (formula "58") (term "0,1,0,0,0"))
                                          (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "commute_or" (formula "58") (term "0"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "commute_or" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "commute_or_2" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0,0,0"))
                                          (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2") (term "0,1,0"))
                                          (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "43"))
                                          (rule "qeq_literals" (formula "2") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "cnf_rightDist" (formula "57") (term "0"))
                                          (rule "distr_forallAnd" (formula "57"))
                                          (rule "andLeft" (formula "57"))
                                          (rule "shift_paren_or" (formula "58") (term "0"))
                                          (rule "commute_or" (formula "58") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "57") (term "0"))
                                          (rule "distr_forallAnd" (formula "57"))
                                          (rule "andLeft" (formula "57"))
                                          (rule "commute_or_2" (formula "57") (term "0"))
                                          (rule "shift_paren_or" (formula "58") (term "0"))
                                          (rule "commute_or" (formula "58") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "47"))
                                          (rule "applyEq" (formula "53") (term "1,0,1") (ifseqformula "54"))
                                          (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "54"))
                                          (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "allLeft" (formula "1") (inst "t=i_1_8"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "2") (inst "t=i_1_7"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "2") (term "0,0,1"))
                                          (rule "leq_literals" (formula "2") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "58"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "leq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "closeFalse" (formula "38"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "74"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "74"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "74"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                    (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "50"))
                                    (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "polySimp_addComm0" (formula "45") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "46"))
                                    (rule "lenOfSeqConcat" (formula "43") (term "0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "polySimp_homoEq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                    (rule "add_literals" (formula "43") (term "1,0"))
                                    (rule "times_zero_1" (formula "43") (term "0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                    (rule "leq_literals" (formula "40") (term "0"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "getOfSeqConcat" (formula "42") (term "0"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,2,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "castDel" (formula "42") (term "2,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                                    (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                                    (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                                    (rule "eqSymm" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "49"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "31"))
                                    (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_6"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                    (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "2") (term "0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "52"))
                                    (rule "close" (formula "60") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "notRight" (formula "74"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "2"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                    (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "polySimp_homoEq" (formula "45"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "45") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                    (rule "add_literals" (formula "45") (term "1,0"))
                                    (rule "times_zero_1" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "true_left" (formula "45"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "45"))
                                    (rule "lenOfSeqConcat" (formula "41") (term "0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                    (rule "leq_literals" (formula "40") (term "0"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "getOfSeqConcat" (formula "42") (term "0"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,2,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "castDel" (formula "42") (term "2,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "eqSymm" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                                    (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                                    (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                                    (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                                    (rule "eqSymm" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                    (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                    (rule "ifEqualsNull" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,0,0,1") (inst "selectSK=arr_12"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,1,0,0,1") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "56")))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "53"))
                                    (rule "close" (formula "62") (ifseqformula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "74"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "74"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "74"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "73"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                       (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "polySimp_homoEq" (formula "45"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                       (rule "add_literals" (formula "45") (term "1,0"))
                                       (rule "times_zero_1" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                       (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "polySimp_addComm0" (formula "42") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "45"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "getOfSeqConcat" (formula "42") (term "0"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "castDel" (formula "42") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                       (rule "leq_literals" (formula "42") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                                       (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                                       (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                                       (rule "eqSymm" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=arr_14"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_15"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_9"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "70")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "3") (term "0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "18")))
                                       (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,1,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "52"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "32") (inst "s=s") (inst "i=i_1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "32") (term "0,1"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "32") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "32") (term "0,0,0,1,0,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "32") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "32") (term "0,0,0,1,0,0,0"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "exLeft" (formula "32") (inst "sk=i_1_5"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "inEqSimp_ltToLeq" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32"))
                                       (rule "disjointDefinition" (formula "36"))
                                       (rule "castedGetAny" (formula "34") (term "0"))
                                       (rule "lenOfSeqConcat" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "getOfSeqConcat" (formula "34") (term "0"))
                                       (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                       (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                                       (rule "castDel" (formula "34") (term "1,2,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "35") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_9"))
                                       (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                       (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "1,0,0,0,0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "nnf_imp2or" (formula "35") (term "0"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "35") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "35") (term "1,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "57"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "57") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "57") (term "1,1,0"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "57") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "57") (term "0,0,0,0"))
                                       (rule "andLeft" (formula "57"))
                                       (rule "andLeft" (formula "57"))
                                       (rule "notLeft" (formula "57"))
                                       (rule "disjointDefinition" (formula "58"))
                                       (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "58") (term "0"))
                                       (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "58"))
                                       (rule "hideAuxiliaryEq" (formula "58"))
                                       (rule "shift_paren_or" (formula "45") (term "0"))
                                       (rule "inEqSimp_or_tautInEq3" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "45") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "45") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "allLeft" (formula "19") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "19") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "9"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "add_literals" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "74"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_leqRight" (formula "73"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                       (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "50"))
                                       (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "polySimp_addComm0" (formula "45") (term "0"))
                                       (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "50"))
                                       (rule "lenOfSeqConcat" (formula "47") (term "0"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "polySimp_homoEq" (formula "47"))
                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                       (rule "mul_literals" (formula "47") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                       (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                       (rule "add_literals" (formula "47") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "47") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                       (rule "add_literals" (formula "47") (term "1,0"))
                                       (rule "times_zero_1" (formula "47") (term "0"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "eqSymm" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                                       (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                                       (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                                       (rule "eqSymm" (formula "41") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                                       (rule "getOfSeqConcat" (formula "42") (term "0"))
                                       (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "castDel" (formula "42") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "leq_literals" (formula "42") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_commuteGeq" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "12") (term "0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_8"))
                                       (rule "applyEq" (formula "2") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=arr_13"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "52"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "52"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "33") (inst "s=s") (inst "i=i_1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "33") (term "0,1"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "33") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet3_0" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "33") (term "0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "33") (term "0,0,0,1,0,0,0"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "exLeft" (formula "33") (inst "sk=i_1_4"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "33"))
                                       (rule "disjointDefinition" (formula "37"))
                                       (rule "castedGetAny" (formula "35") (term "0"))
                                       (rule "lenOfSeqConcat" (formula "34") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0"))
                                       (rule "getOfSeqConcat" (formula "35") (term "0"))
                                       (rule "polySimp_elimSub" (formula "35") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                       (rule "getOfSeqSingleton" (formula "35") (term "2,0"))
                                       (rule "castDel" (formula "35") (term "1,2,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "35") (term "0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "36") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_8"))
                                       (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                       (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "67")) (ifInst ""  (formula "66")))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                       (rule "applyEqReverse" (formula "37") (term "1,0,0,0,0") (ifseqformula "36"))
                                       (rule "hideAuxiliaryEq" (formula "36"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                       (rule "nnf_notOr" (formula "36") (term "1,0,0,0"))
                                       (rule "nnf_notOr" (formula "36") (term "1,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "58"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "58") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "58") (term "1,1,0"))
                                       (rule "replaceKnownSelect_taclet19_0" (formula "58") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "58") (term "0,0,0,0"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "andLeft" (formula "58"))
                                       (rule "notLeft" (formula "58"))
                                       (rule "disjointDefinition" (formula "59"))
                                       (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "59") (term "0"))
                                       (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "59"))
                                       (rule "hideAuxiliaryEq" (formula "59"))
                                       (rule "shift_paren_or" (formula "46") (term "0"))
                                       (rule "inEqSimp_or_tautInEq3" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "46") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "46") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "46") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "commute_or_2" (formula "36") (term "0,0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "allLeft" (formula "21") (inst "t=i"))
                                       (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                       (rule "leq_literals" (formula "21") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "21"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "74"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "74"))
                                       (rule "true_left" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "73") (term "1,1,1"))
                                       (rule "dismissNonSelectedField" (formula "73") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "73") (term "1"))
                                       (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "49"))
                                       (rule "lenOfSeqConcat" (formula "44") (term "0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "polySimp_addComm0" (formula "44") (term "0"))
                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "47"))
                                       (rule "lenOfSeqConcat" (formula "44") (term "0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "polySimp_homoEq" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "44") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                       (rule "add_literals" (formula "44") (term "1,0"))
                                       (rule "times_zero_1" (formula "44") (term "0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                       (rule "mul_literals" (formula "39") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                       (rule "leq_literals" (formula "39") (term "0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "getOfSeqConcat" (formula "41") (term "0"))
                                       (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "castDel" (formula "41") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                       (rule "leq_literals" (formula "41") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "eqSymm" (formula "40") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                       (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                       (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                       (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                       (rule "eqSymm" (formula "40") (term "1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                       (rule "pullOutSelect" (formula "65") (term "1,0") (inst "selectSK=arr_17"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "65") (term "2,0") (inst "selectSK=arr_18"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                       (rule "replaceKnownSelect_taclet12_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "66") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_secret_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet11_0" (formula "1") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "65"))
                                       (rule "pullOutSelect" (formula "65") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_12"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "66") (term "1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "65") (term "1,0") (inst "selectSK=arr_19"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "1"))
                                       (rule "replaceKnownSelect_taclet17_0" (formula "66") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "66") (term "0"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "closeTrue" (formula "66"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "74"))
                                       (branch "Case 1"
                                          (rule "notRight" (formula "74"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "2"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "50"))
                                          (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "polySimp_addComm0" (formula "45") (term "0"))
                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "50"))
                                          (rule "lenOfSeqConcat" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "polySimp_homoEq" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                          (rule "add_literals" (formula "47") (term "1,0"))
                                          (rule "times_zero_1" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                          (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                          (rule "mul_literals" (formula "40") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                          (rule "leq_literals" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "getOfSeqConcat" (formula "42") (term "0"))
                                          (rule "polySimp_elimSub" (formula "42") (term "1,2,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "42") (term "1,2,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,2,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,2,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "castDel" (formula "42") (term "2,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "42") (term "0,0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                          (rule "leq_literals" (formula "42") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "getOfSeqConcat" (formula "41") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "eqSymm" (formula "41") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "41") (term "1,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "41") (term "1,1,1,1,0"))
                                          (rule "getOfSeqSingleton" (formula "41") (term "1,1,1,0"))
                                          (rule "castDel" (formula "41") (term "1,1,1,1,0"))
                                          (rule "castDel" (formula "41") (term "2,1,1,1,0"))
                                          (rule "eqSymm" (formula "41") (term "1,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "41") (term "0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,0"))
                                          (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_10"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                          (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "ifEqualsTRUE" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0,0,0,1,0,0") (inst "selectSK=arr_16"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "74"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (builtin "One Step Simplification" (formula "74"))
                                             (rule "true_left" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                             (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "polySimp_homoEq" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "46") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                             (rule "add_literals" (formula "46") (term "1,0"))
                                             (rule "times_zero_1" (formula "46") (term "0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "48"))
                                             (rule "lenOfSeqConcat" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "polySimp_addComm0" (formula "44") (term "0"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "42") (term "0,0,1,0") (ifseqformula "44"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                             (rule "mul_literals" (formula "39") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                             (rule "leq_literals" (formula "39") (term "0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "getOfSeqConcat" (formula "41") (term "0"))
                                             (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "castDel" (formula "41") (term "2,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0"))
                                             (rule "leq_literals" (formula "41") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "eqSymm" (formula "40") (term "1,1,0"))
                                             (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                             (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                             (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                             (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                             (rule "eqSymm" (formula "40") (term "1,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                             (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "52"))
                                             (rule "replaceKnownSelect_taclet23_0" (formula "52") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet24_0" (formula "52") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet19_0" (formula "52") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "52") (term "1,1,0"))
                                             (rule "replaceKnownSelect_taclet19_0" (formula "52") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "52") (term "0,0,0,0"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "notLeft" (formula "52"))
                                             (rule "disjointDefinition" (formula "53"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "31") (inst "s=s") (inst "i=i_1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "31") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet3_0" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "replaceKnownSelect_taclet3_0" (formula "31") (term "0,1,1,0,0,0,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "31") (term "0,0,0,1,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "31") (term "0,1,1,0,0,0,0"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "exLeft" (formula "31") (inst "sk=i_1_6"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_ltToLeq" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31"))
                                             (rule "disjointDefinition" (formula "35"))
                                             (rule "castedGetAny" (formula "33") (term "0"))
                                             (rule "lenOfSeqConcat" (formula "32") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0"))
                                             (rule "getOfSeqConcat" (formula "33") (term "0"))
                                             (rule "polySimp_elimSub" (formula "33") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                             (rule "getOfSeqSingleton" (formula "33") (term "2,0"))
                                             (rule "castDel" (formula "33") (term "1,2,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "33") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "34") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_10"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                             (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
                                             (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                             (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "34"))
                                             (rule "hideAuxiliaryEq" (formula "34"))
                                             (rule "nnf_imp2or" (formula "34") (term "0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                             (rule "nnf_notOr" (formula "34") (term "1,0,0,0"))
                                             (rule "nnf_notOr" (formula "34") (term "1,1,0,0,0"))
                                             (rule "commuteUnion" (formula "70") (term "1"))
                                             (rule "close" (formula "70") (ifseqformula "41"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "74"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "74"))
                                                (rule "true_left" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "73") (term "1,0"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "44"))
                                                (rule "lenOfSeqConcat" (formula "41") (term "0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "polySimp_homoEq" (formula "41"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                (rule "add_literals" (formula "41") (term "1,0"))
                                                (rule "times_zero_1" (formula "41") (term "0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "true_left" (formula "39"))
                                                (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "castDel" (formula "41") (term "2,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                (rule "leq_literals" (formula "41") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "pullOutSelect" (formula "65") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_6"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "1"))
                                                (rule "close" (formula "66") (ifseqformula "33"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "74"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "73") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "73") (term "0,0,0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                                                   (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "48"))
                                                   (rule "lenOfSeqConcat" (formula "45") (term "0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "polySimp_homoEq" (formula "45"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                   (rule "add_literals" (formula "45") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "45") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                   (rule "add_literals" (formula "45") (term "1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "0"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                                   (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                   (rule "leq_literals" (formula "39") (term "0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "castDel" (formula "41") (term "2,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "true_left" (formula "41"))
                                                   (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                   (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                   (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                   (rule "pullOutSelect" (formula "65") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_5"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_11"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                   (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "close" (formula "66") (ifseqformula "35"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "74"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "74"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "eqSymm" (formula "73"))
                                                      (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                                      (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                                      (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "polySimp_homoEq" (formula "46"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                      (rule "add_literals" (formula "46") (term "1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "true_left" (formula "46"))
                                                      (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                                      (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                      (rule "mul_literals" (formula "39") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "66") (inst "iv=iv"))
                                                      (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
                                                      (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                      (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                      (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                      (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                      (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "castDel" (formula "41") (term "2,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "pullOutSelect" (formula "65") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_3"))
                                                      (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "closeTrue" (formula "66"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "74"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "eqSymm" (formula "73"))
                                                         (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                                         (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "49"))
                                                         (rule "lenOfSeqConcat" (formula "44") (term "0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "45"))
                                                         (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "polySimp_homoEq" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "42") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                         (rule "add_literals" (formula "42") (term "1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                         (rule "mul_literals" (formula "39") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                         (rule "leq_literals" (formula "39") (term "0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "66") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "66") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "polySimp_addComm0" (formula "66") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
                                                         (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                         (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                         (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "castDel" (formula "41") (term "2,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "getOfSeqConcat" (formula "65") (term "1,1,0,1"))
                                                         (rule "eqSymm" (formula "65") (term "1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "65") (term "1,2,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "65") (term "1,2,0,1,0,1"))
                                                         (rule "getOfSeqSingleton" (formula "65") (term "2,0,1,0,1"))
                                                         (rule "castDel" (formula "65") (term "2,2,0,1,0,1"))
                                                         (rule "castDel" (formula "65") (term "1,2,0,1,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "65") (term "0,2,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "65") (term "1,0,2,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "65") (term "1,0,2,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "65") (term "0,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,1,0,1"))
                                                         (rule "pullOutSelect" (formula "65") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_3"))
                                                         (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "66") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet3_0" (formula "1") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "lenOfSeqConcat" (formula "65") (term "1,1,1,0,0,1"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "polySimp_addComm0" (formula "65") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "65") (term "1,1,0,0,1"))
                                                         (rule "add_literals" (formula "65") (term "0,1,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "65") (term "1,1,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "65") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "polySimp_homoEq" (formula "65") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "65") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                         (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "65") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0"))
                                                         (rule "add_literals" (formula "65") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "65") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "allRight" (formula "65") (inst "sk=iv_449"))
                                                         (rule "impRight" (formula "65"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "67") (term "0,2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "67") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                                         (rule "getOfSeqConcat" (formula "67") (term "1"))
                                                         (rule "eqSymm" (formula "67"))
                                                         (rule "polySimp_elimSub" (formula "67") (term "1,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                         (rule "getOfSeqSingleton" (formula "67") (term "2,0"))
                                                         (rule "castDel" (formula "67") (term "1,2,0"))
                                                         (rule "castDel" (formula "67") (term "2,2,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "67") (term "0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "0,0,2,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "0,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "67") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "67") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "closeTrue" (formula "67"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "74"))
                                                         (branch "Case 1"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "eqSymm" (formula "73"))
                                                            (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                                            (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                                            (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "polySimp_homoEq" (formula "46"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "46") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                            (rule "add_literals" (formula "46") (term "1,0"))
                                                            (rule "times_zero_1" (formula "46") (term "0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                                            (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                            (rule "mul_literals" (formula "39") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                            (rule "leq_literals" (formula "39") (term "0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "66") (inst "iv=iv"))
                                                            (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
                                                            (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "22"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
                                                            (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                            (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                            (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                            (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                            (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                            (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "castDel" (formula "41") (term "2,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "41") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "true_left" (formula "41"))
                                                            (rule "pullOutSelect" (formula "65") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_3"))
                                                            (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet5_0" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "66") (term "0,0,1,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "1"))
                                                            (rule "close" (formula "66") (ifseqformula "23"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "74"))
                                                            (branch "Case 1"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "73"))
                                                               (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                                               (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                                               (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "polySimp_homoEq" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "46") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                               (rule "add_literals" (formula "46") (term "1,0"))
                                                               (rule "times_zero_1" (formula "46") (term "0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                                               (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                               (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "mul_literals" (formula "39") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "39") (term "0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "66") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
                                                               (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "20"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
                                                               (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                               (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                               (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                               (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "2,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "true_left" (formula "41"))
                                                               (rule "pullOutSelect" (formula "65") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_3"))
                                                               (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet7_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "66") (term "0,0,1,0,1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "1"))
                                                               (rule "close" (formula "66") (ifseqformula "21"))
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "73"))
                                                               (rule "dismissNonSelectedField" (formula "73") (term "0"))
                                                               (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                                                               (rule "lenOfSeqConcat" (formula "46") (term "0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "polySimp_homoEq" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                               (rule "mul_literals" (formula "46") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "46") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                               (rule "add_literals" (formula "46") (term "1,0"))
                                                               (rule "times_zero_1" (formula "46") (term "0"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "applyEq" (formula "46") (term "0,0,1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "46"))
                                                               (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                                               (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "mul_literals" (formula "39") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "39") (term "0"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "66") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1"))
                                                               (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                                                               (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                                                               (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                                                               (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                               (rule "getOfSeqConcat" (formula "41") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,2,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,2,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "2,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "true_left" (formula "41"))
                                                               (rule "pullOutSelect" (formula "65") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_3"))
                                                               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet9_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "66") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "allRight" (formula "66") (inst "sk=iv_448"))
                                                               (rule "impRight" (formula "66"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "68") (term "0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "closeTrue" (formula "68"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "73"))
                        (rule "orRight" (formula "74"))
                        (rule "orRight" (formula "74"))
                        (rule "orRight" (formula "74"))
                        (rule "orRight" (formula "74"))
                        (rule "notLeft" (formula "1"))
                        (builtin "One Step Simplification" (formula "78"))
                        (builtin "One Step Simplification" (formula "77"))
                        (builtin "One Step Simplification" (formula "76"))
                        (builtin "One Step Simplification" (formula "75"))
                        (builtin "One Step Simplification" (formula "74"))
                        (builtin "One Step Simplification" (formula "61"))
                        (rule "closeTrue" (formula "61"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "73"))
                     (rule "allRight" (formula "73") (inst "sk=f_3"))
                     (rule "allRight" (formula "73") (inst "sk=o_3"))
                     (rule "orRight" (formula "73"))
                     (rule "orRight" (formula "73"))
                     (rule "orRight" (formula "73"))
                     (rule "orRight" (formula "74"))
                     (rule "orRight" (formula "75"))
                     (rule "eqSymm" (formula "78"))
                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "49"))
                     (rule "lenOfSeqConcat" (formula "44") (term "0"))
                     (builtin "One Step Simplification" (formula "44"))
                     (rule "polySimp_addComm0" (formula "44") (term "0"))
                     (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "49"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                     (rule "lenOfSeqConcat" (formula "46") (term "0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "polySimp_homoEq" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                     (rule "add_literals" (formula "46") (term "1,0"))
                     (rule "times_zero_1" (formula "46") (term "0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                     (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                     (rule "mul_literals" (formula "39") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                     (rule "leq_literals" (formula "39") (term "0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "eqSymm" (formula "40") (term "1,1,0"))
                     (rule "polySimp_elimSub" (formula "40") (term "1,1,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "40") (term "1,1,1,1,0"))
                     (rule "getOfSeqSingleton" (formula "40") (term "1,1,1,0"))
                     (rule "castDel" (formula "40") (term "2,1,1,1,0"))
                     (rule "castDel" (formula "40") (term "1,1,1,1,0"))
                     (rule "eqSymm" (formula "40") (term "1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "40") (term "0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                     (rule "getOfSeqConcat" (formula "41") (term "0"))
                     (rule "polySimp_elimSub" (formula "41") (term "1,2,0"))
                     (rule "polySimp_pullOutFactor1" (formula "41") (term "1,2,0"))
                     (rule "add_literals" (formula "41") (term "1,1,2,0"))
                     (rule "times_zero_1" (formula "41") (term "1,2,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "castDel" (formula "41") (term "2,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,0"))
                     (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0"))
                     (rule "leq_literals" (formula "41") (term "0,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "true_left" (formula "41"))
                     (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=f_3_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "71"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "66"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "68"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "70"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "69"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "66"))
                     (rule "commute_and" (formula "68"))
                     (rule "commute_and" (formula "69"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "53"))
                     (rule "replaceKnownSelect_taclet19_0" (formula "53") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "53") (term "1,1,0"))
                     (rule "replaceKnownSelect_taclet19_0" (formula "53") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "53") (term "0,0,0,0"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "notLeft" (formula "53"))
                     (rule "disjointDefinition" (formula "54"))
                     (rule "pullOutSelect" (formula "54") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "54") (term "0"))
                     (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "54"))
                     (rule "hideAuxiliaryEq" (formula "54"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "32") (inst "s=s") (inst "i=i_1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "32") (term "0,1"))
                     (rule "replaceKnownSelect_taclet3_0" (formula "32") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet3_0" (formula "32") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
                     (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "32") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "32") (term "0,1,1,0,0,0,0"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "exLeft" (formula "32") (inst "sk=i_1_12"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "32"))
                     (rule "disjointDefinition" (formula "36"))
                     (rule "castedGetAny" (formula "34") (term "0"))
                     (rule "lenOfSeqConcat" (formula "33") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0"))
                     (rule "add_zero_left" (formula "33") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "getOfSeqConcat" (formula "34") (term "0"))
                     (rule "polySimp_elimSub" (formula "34") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "34") (term "2,0"))
                     (rule "castDel" (formula "34") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "34") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "35") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_16"))
                     (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                     (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "67")) (ifInst ""  (formula "66")))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                     (rule "applyEqReverse" (formula "36") (term "1,0,0,0,0") (ifseqformula "35"))
                     (rule "hideAuxiliaryEq" (formula "35"))
                     (rule "nnf_imp2or" (formula "35") (term "0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "35") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "35") (term "1,1,0,0,0"))
                     (rule "shift_paren_or" (formula "45") (term "0"))
                     (rule "inEqSimp_or_tautInEq3" (formula "45") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0,0"))
                     (rule "add_literals" (formula "45") (term "1,0,1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "0,1,0,0"))
                     (rule "leq_literals" (formula "45") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "true_left" (formula "45"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "56") (inst "s=s") (inst "i=i_1"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "replaceKnownSelect_taclet27_0" (formula "56") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet28_0" (formula "56") (term "0,1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,1,0,0,0,1,0") (ifseqformula "50"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,1,0,0,0,1,0") (ifseqformula "29"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "56"))
                     (rule "exLeft" (formula "56") (inst "sk=i_1_13"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "56"))
                     (rule "inEqSimp_ltToLeq" (formula "57"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "57") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "56"))
                     (rule "disjointDefinition" (formula "60"))
                     (rule "castedGetAny" (formula "58") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                     (rule "polySimp_elimOne" (formula "57") (term "0"))
                     (rule "pullOutSelect" (formula "59") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_17"))
                     (rule "applyEq" (formula "58") (term "1") (ifseqformula "59"))
                     (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "69")))
                     (rule "replaceKnownSelect_taclet29_0" (formula "59") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet30_0" (formula "59") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "59") (term "0,0,0") (ifseqformula "29"))
                     (rule "replace_known_left" (formula "59") (term "1,0,0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "68")))
                     (rule "applyEqReverse" (formula "60") (term "1,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "pullOutSelect" (formula "58") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_8"))
                     (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "58"))
                     (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "58"))
                     (rule "replaceKnownSelect_taclet3_0" (formula "58") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "58") (term "0"))
                     (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "58"))
                     (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "58"))
                     (rule "hideAuxiliaryEq" (formula "58"))
                     (rule "lenOfSeqConcat" (formula "57") (term "0"))
                     (builtin "One Step Simplification" (formula "57"))
                     (rule "polySimp_addComm0" (formula "57") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "57"))
                     (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                     (rule "mul_literals" (formula "57") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "57") (term "0"))
                     (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                     (rule "add_literals" (formula "57") (term "0,0,0"))
                     (rule "add_zero_left" (formula "57") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "57"))
                     (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                     (rule "polySimp_elimOne" (formula "57") (term "0"))
                     (rule "getOfSeqConcat" (formula "58") (term "0"))
                     (rule "polySimp_elimSub" (formula "58") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "58") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "58") (term "2,0"))
                     (rule "castDel" (formula "58") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "58") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "58") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "58") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "59") (term "0"))
                     (rule "nnf_notAnd" (formula "59") (term "0,0"))
                     (builtin "One Step Simplification" (formula "59"))
                     (rule "nnf_notAnd" (formula "59") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "59") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "59") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "59") (term "0,1,1,0,0,0"))
                     (rule "commute_or_2" (formula "35") (term "0,0"))
                     (rule "commuteIntersection" (formula "60") (term "0"))
                     (rule "commuteIntersection" (formula "36") (term "0"))
                     (rule "intersectWithSingleton" (formula "36") (term "0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "notLeft" (formula "36"))
                     (rule "ifthenelse_split" (formula "40") (term "0"))
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "38") (term "1,0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "61") (term "2") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                        (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "41"))
                        (rule "hideAuxiliaryEq" (formula "41"))
                        (rule "disjointAndSubset_4" (formula "41") (ifseqformula "24"))
                        (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "disjointAndSubset_4" (formula "41") (ifseqformula "25"))
                        (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointAndSubset_4" (formula "41") (ifseqformula "27"))
                        (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "disjointAndSubset_4" (formula "41") (ifseqformula "26"))
                        (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "41"))
                        (rule "true_left" (formula "41"))
                        (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "disjointNotInOtherLocset2" (formula "40") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "60"))
                        (rule "eqSymm" (formula "60"))
                        (rule "cut_direct" (formula "66") (term "1"))
                        (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "notRight" (formula "67"))
                           (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "eqSymm" (formula "62"))
                           (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "eqSymm" (formula "62"))
                           (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "eqSymm" (formula "62"))
                           (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "eqSymm" (formula "62"))
                           (rule "cut_direct" (formula "78") (term "0,0"))
                           (branch "CUT: o_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "79"))
                              (rule "false_right" (formula "79"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "79")))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "CUT: o_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "79"))
                              (rule "notRight" (formula "79"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "79"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "80")))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                        (branch "CUT: de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "67"))
                           (rule "false_right" (formula "67"))
                           (rule "cut_direct" (formula "77") (term "0,0"))
                           (branch "CUT: o_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "78"))
                              (rule "false_right" (formula "78"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "78"))
                              (rule "notRight" (formula "78"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "40"))
                        (rule "applyEqReverse" (formula "60") (term "2") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "38"))
                        (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "36"))
                        (rule "hideAuxiliaryEq" (formula "36"))
                        (rule "cut_direct" (formula "72") (term "0,0"))
                        (branch "CUT: o_3 = null TRUE"
                           (builtin "One Step Simplification" (formula "73"))
                           (rule "false_right" (formula "73"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "73")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_3 = null FALSE"
                           (builtin "One Step Simplification" (formula "73"))
                           (rule "notRight" (formula "73"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "73"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "74")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Null Reference (v_arr_1 = null)"
                  (rule "false_right" (formula "74"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (v_arr_1 != null, but x_2 Out of Bounds!)"
                  (rule "false_right" (formula "74"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "19"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                  (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "49"))
                  (rule "lenOfSeqConcat" (formula "46") (term "0"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "polySimp_homoEq" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0"))
                  (rule "add_zero_left" (formula "46") (term "0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                  (rule "add_literals" (formula "46") (term "1,0"))
                  (rule "times_zero_1" (formula "46") (term "0"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "48"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "47"))
                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "47"))
                  (rule "lenOfSeqConcat" (formula "43") (term "0"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "polySimp_addComm0" (formula "43") (term "0"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                  (rule "mul_literals" (formula "40") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                  (rule "leq_literals" (formula "40") (term "0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                  (rule "andLeft" (formula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
               (branch "Array Store Exception (incompatible dynamic element type of v_arr_1 and v)"
                  (rule "false_right" (formula "74"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "8")))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "array_store_known_dynamic_array_type" (formula "62") (ifseqformula "16"))
                  (rule "orRight" (formula "62"))
                  (rule "instanceof_static_type" (formula "62") (term "0"))
                  (builtin "One Step Simplification" (formula "62"))
                  (rule "closeTrue" (formula "62"))
               )
            )
            (branch "Exceptional Post (Voter)"
               (builtin "One Step Simplification" (formula "63"))
               (builtin "One Step Simplification" (formula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,1,0,1") (ifseqformula "33"))
               (rule "andLeft" (formula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,0,0") (ifseqformula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0,0") (ifseqformula "33"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1,0,1,0") (ifseqformula "54"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,1,0,1,0") (ifseqformula "33"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "56"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "57"))
               (rule "andLeft" (formula "56"))
               (rule "andLeft" (formula "55"))
               (rule "andLeft" (formula "60"))
               (rule "andLeft" (formula "57"))
               (rule "notLeft" (formula "55"))
               (rule "close" (formula "63") (ifseqformula "62"))
            )
            (branch "Pre (Voter)"
               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "36")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1") (ifseqformula "33"))
               (rule "wellFormedAnonEQ" (formula "61") (term "0") (ifseqformula "33"))
               (rule "replace_known_left" (formula "61") (term "1,1") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "1")) (ifInst ""  (formula "32")) (ifInst ""  (formula "55")))
               (rule "closeTrue" (formula "61"))
            )
         )
      )
      (branch "Null Reference (_choices1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_choices1 != null, but _i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
         (rule "false_right" (formula "60"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
         (rule "apply_eq_boolean_rigid" (formula "2") (term "1") (ifseqformula "51"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "notLeft" (formula "2"))
         (rule "ifEqualsTRUE" (formula "50"))
         (rule "orRight" (formula "50"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "15"))
         (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "46"))
         (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "46"))
         (rule "lenOfSeqConcat" (formula "43") (term "0"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "polySimp_homoEq" (formula "43"))
         (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
         (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "43") (term "1,0"))
         (rule "mul_literals" (formula "43") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "43") (term "0"))
         (rule "polySimp_addComm1" (formula "43") (term "0,0"))
         (rule "add_literals" (formula "43") (term "0,0,0"))
         (rule "add_zero_left" (formula "43") (term "0,0"))
         (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
         (rule "add_literals" (formula "43") (term "1,0"))
         (rule "times_zero_1" (formula "43") (term "0"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "true_left" (formula "43"))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
         (rule "applyEq" (formula "43") (term "0,0,1") (ifseqformula "44"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
         (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
         (rule "qeq_literals" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
   )
)
(branch "Exceptional Post (registerSender)"
   (builtin "One Step Simplification" (formula "32"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "andLeft" (formula "32"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "35"))
   (rule "notLeft" (formula "33"))
   (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "34"))
   (rule "true_left" (formula "34"))
   (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "35"))
   (builtin "One Step Simplification" (formula "34"))
   (rule "commute_or_2" (formula "34"))
   (rule "commute_or_2" (formula "34") (term "0"))
   (rule "commute_or_2" (formula "34"))
   (rule "commute_or_2" (formula "34") (term "0,0"))
   (rule "commute_or_2" (formula "34") (term "0"))
   (rule "commute_or_2" (formula "34"))
   (rule "commute_or" (formula "34") (term "0,0,0"))
   (rule "commute_or_2" (formula "34") (term "0,0"))
   (rule "commute_or_2" (formula "34") (term "0"))
   (rule "commuteUnion" (formula "32") (term "1,1,0"))
   (rule "commuteUnion" (formula "32") (term "1,0"))
   (rule "methodCallThrow" (formula "40") (term "1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "tryCatchThrow" (formula "40") (term "1"))
   (rule "ifElseUnfold" (formula "40") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "40") (term "1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "replace_known_right" (formula "40") (term "0,0,1,0") (ifseqformula "35"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "39"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "ifElseSplit" (formula "41"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "42"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "41"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "instanceof_static_type" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "41") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "41"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "41"))
            (rule "assignment" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "emptyModality" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
            (rule "eqSymm" (formula "41") (term "1,0,0,1"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
            (rule "applyEq" (formula "20") (term "1") (ifseqformula "22"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0,0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or_2" (formula "36") (term "0,0,0"))
            (rule "commute_or_2" (formula "36") (term "0,0"))
            (rule "commute_or_2" (formula "36") (term "0"))
            (rule "commute_or" (formula "36") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "36") (term "0,0,0"))
            (rule "commute_or_2" (formula "36") (term "0,0"))
            (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "36"))
            (rule "allRight" (formula "36") (inst "sk=f_2"))
            (rule "allRight" (formula "36") (inst "sk=o_2"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "37"))
            (rule "orRight" (formula "38"))
            (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_2_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
            (rule "eqSymm" (formula "42"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "40"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (rule "false_right" (formula "42"))
            (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "36")))
            (rule "instanceof_static_type" (formula "41") (term "0"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "closeTrue" (formula "41"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
         (rule "notLeft" (formula "1"))
         (rule "instanceof_static_type" (formula "36") (term "0"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "closeTrue" (formula "36"))
      )
   )
)
(branch "Pre (registerSender)"
   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")))
   (rule "eqSymm" (formula "35"))
   (rule "close" (formula "35") (ifseqformula "23"))
)
)

}
