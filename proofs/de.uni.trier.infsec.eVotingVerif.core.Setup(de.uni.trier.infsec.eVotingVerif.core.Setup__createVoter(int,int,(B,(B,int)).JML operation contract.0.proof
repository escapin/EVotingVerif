\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Apr 30 13:43:16 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=40000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Apr 30 13:43:16 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createVoter(int,int,[B,[B,int)].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createVoter(int,int,[B,[B,int)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "82363052bb928f8b6795f34d3e8dba8c10bb6837"))

(autoModeTime "14886")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "27") (term "1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "17"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
(builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "23"))
(builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "disjointDefinition" (formula "27") (term "0,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "disjointDefinition" (formula "27") (term "0,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "disjointDefinition" (formula "19"))
(rule "disjointDefinition" (formula "20"))
(rule "disjointDefinition" (formula "21"))
(rule "disjointDefinition" (formula "22"))
(rule "assignment" (formula "27") (term "1"))
(builtin "One Step Simplification" (formula "27"))
(rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "11"))
(rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "12"))
(rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
(rule "elementOfUnion" (formula "27") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "27") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "0,1,1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "27") (term "1,1,1,0,0,0,0,1,0,1"))
(rule "commute_and" (formula "15") (term "1,0"))
(rule "commute_and" (formula "16") (term "1,0"))
(rule "commute_and" (formula "15") (term "0,0"))
(rule "commute_and" (formula "16") (term "0,0"))
(rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_createVoter,savedHeapBefore_createVoter"))
(builtin "One Step Simplification" (formula "27"))
(rule "variableDeclarationAssign" (formula "27") (term "1"))
(rule "variableDeclaration" (formula "27") (term "1") (newnames "sender"))
(builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_registerSender,result,exc_0,heapAfter_registerSender,anon_heap_registerSender") (contract "de.uni.trier.infsec.functionalities.smt.SMT[de.uni.trier.infsec.functionalities.smt.SMT::registerSender(int)].JML operation contract.0"))
(branch "Post (registerSender)"
   (builtin "One Step Simplification" (formula "24"))
   (builtin "One Step Simplification" (formula "29"))
   (rule "andLeft" (formula "24"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "24"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "typeEqDerived" (formula "27") (term "0,1,1,1") (ifseqformula "25"))
   (rule "typeEqDerived" (formula "27") (term "0,1,0,1,1") (ifseqformula "25"))
   (rule "typeEqDerived" (formula "27") (term "0,1,0,0,1,1") (ifseqformula "25"))
   (rule "typeEqDerived" (formula "27") (term "0,1,0,0,0,1,1") (ifseqformula "25"))
   (rule "typeEqDerived" (formula "27") (term "0,0,0,0,0,1,1") (ifseqformula "25"))
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "28"))
   (rule "notLeft" (formula "28"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "33"))
   (rule "notLeft" (formula "34"))
   (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "34"))
   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")))
   (rule "assignment" (formula "40") (term "1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "variableDeclarationAssign" (formula "40") (term "1"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "choice0"))
   (rule "assignment_array2" (formula "40"))
   (branch "Normal Execution (_choices0 != null)"
      (builtin "One Step Simplification" (formula "40"))
      (rule "pullOutSelect" (formula "40") (term "0,1,0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "5")))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "choice1"))
      (rule "assignment_array2" (formula "41"))
      (branch "Normal Execution (_choices1 != null)"
         (builtin "One Step Simplification" (formula "41"))
         (rule "pullOutSelect" (formula "41") (term "0,1,0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "7")))
         (rule "variableDeclarationAssign" (formula "42") (term "1"))
         (rule "variableDeclaration" (formula "42") (term "1") (newnames "choice"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "disjointAllFields" (formula "2") (term "0,0,0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "disjointAllFields" (formula "1") (term "0,0,0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "disjointAndSubset_3" (formula "30") (ifseqformula "24"))
         (rule "intersectAllFieldsFreshLocs" (formula "30") (term "0"))
         (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")))
         (rule "disjointAndSubset_3" (formula "31") (ifseqformula "21"))
         (rule "intersectAllFieldsFreshLocs" (formula "31") (term "0"))
         (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "4")))
         (rule "disjointAndSubset_3" (formula "32") (ifseqformula "22"))
         (rule "intersectAllFieldsFreshLocs" (formula "32") (term "0"))
         (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "disjointAndSubset_3" (formula "33") (ifseqformula "23"))
         (rule "intersectAllFieldsFreshLocs" (formula "33") (term "0"))
         (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "43")))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
         (rule "elementOfSingleton" (formula "2") (term "0,0"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
         (rule "applyEqReverse" (formula "46") (term "0,1,0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
         (rule "applyEqReverse" (formula "45") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
         (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "32"))
         (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "32"))
         (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "32"))
         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "32"))
         (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0"))
         (rule "disjointAndSubset_3" (formula "33") (ifseqformula "21"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_3" (formula "33") (ifseqformula "19"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_3" (formula "33") (ifseqformula "20"))
         (rule "intersectAllFieldsFreshLocs" (formula "33") (term "0"))
         (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_3" (formula "33") (ifseqformula "22"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "elementOfUnion" (formula "32") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_0"))
         (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "eqSymm" (formula "35"))
         (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "hideAuxiliaryEq" (formula "35"))
         (rule "elementOfUnion" (formula "34") (term "0,0"))
         (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_0"))
         (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "eqSymm" (formula "36"))
         (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
         (rule "hideAuxiliaryEq" (formula "36"))
         (rule "elementOfUnion" (formula "34") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_0"))
         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "eqSymm" (formula "37"))
         (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "hideAuxiliaryEq" (formula "37"))
         (rule "elementOfUnion" (formula "35") (term "0,0"))
         (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_0"))
         (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "eqSymm" (formula "38"))
         (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "hideAuxiliaryEq" (formula "38"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "eqSymm" (formula "39"))
         (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "elementOfUnion" (formula "36") (term "0,0"))
         (rule "elementOfUnion" (formula "35") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "37") (term "0,0"))
         (rule "elementOfUnion" (formula "38") (term "0,0"))
         (rule "elementOfUnion" (formula "36") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "36") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfUnion" (formula "37") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "37") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "elementOfUnion" (formula "38") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "38") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "elementOfSingleton" (formula "38") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "commuteUnion" (formula "24") (term "1,1,0"))
         (rule "commuteUnion" (formula "33") (term "1"))
         (rule "disjointAndSubset_4" (formula "33") (ifseqformula "21"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_4" (formula "33") (ifseqformula "19"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_4" (formula "33") (ifseqformula "20"))
         (rule "intersectAllFieldsFreshLocs" (formula "33") (term "0"))
         (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
         (rule "true_left" (formula "33"))
         (rule "disjointAndSubset_4" (formula "33") (ifseqformula "22"))
         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "true_left" (formula "33"))
         (rule "condition_not_simple" (formula "45") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "45") (term "1"))
         (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_1"))
         (rule "activeUseStaticFieldReadAccess" (formula "45") (term "1"))
         (rule "assignment_read_static_attribute" (formula "45") (term "1"))
         (builtin "One Step Simplification" (formula "45"))
         (rule "pullOutSelect" (formula "45") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_secret_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "1,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commuteUnion" (formula "25") (term "1,0"))
         (rule "arrayLengthIsAnInt" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "12") (term "0"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
         (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "arrayLengthNotNegative" (formula "13") (term "0"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
         (rule "arrayLengthNotNegative" (formula "15") (term "0"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
         (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "lenNonNegative" (formula "19") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "19"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
         (rule "lenNonNegative" (formula "20") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "20"))
         (rule "lenNonNegative" (formula "18") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
         (rule "condition_simple" (formula "47") (term "1"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "eval_order_array_access1" (formula "47") (term "1") (inst "#v0=v_arr"))
         (rule "variableDeclarationAssign" (formula "47") (term "1"))
         (rule "variableDeclaration" (formula "47") (term "1") (newnames "v_arr"))
         (rule "assignment_read_attribute_this" (formula "47"))
         (builtin "One Step Simplification" (formula "47"))
         (rule "pullOutSelect" (formula "47") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "4")))
         (rule "eval_order_array_access3" (formula "48") (inst "#v1=v") (inst "#v2=x") (inst "#v0=v_arr_1"))
         (branch "ArrayIndexOutOfBounds (_i<0 | _i>=v_arr.length)"
            (rule "andRight" (formula "48"))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "9")))
               (rule "closeTrue" (formula "48"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "48"))
               (rule "inEqSimp_ltRight" (formula "48"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "11"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "11") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "disjointAllFields" (formula "2") (term "1,0,0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfUnion" (formula "2") (term "0,0"))
               (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
               (rule "elementOfSingleton" (formula "2") (term "0,0"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
               (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Normal Execution"
            (rule "variableDeclarationAssign" (formula "48") (term "1"))
            (rule "variableDeclaration" (formula "48") (term "1") (newnames "v_arr_1"))
            (rule "assignment" (formula "48") (term "1"))
            (builtin "One Step Simplification" (formula "48"))
            (rule "variableDeclarationAssign" (formula "48") (term "1"))
            (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_2"))
            (rule "assignment" (formula "48") (term "1"))
            (builtin "One Step Simplification" (formula "48"))
            (rule "variableDeclarationAssign" (formula "48") (term "1"))
            (rule "variableDeclaration" (formula "48") (term "1") (newnames "v"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
            (rule "applyEqReverse" (formula "48") (term "0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_Voter,self_0,exc_1,heapAfter_Voter,anon_heap_Voter") (contract "de.uni.trier.infsec.eVotingVerif.core.Voter[de.uni.trier.infsec.eVotingVerif.core.Voter::Voter(byte,de.uni.trier.infsec.functionalities.smt.Sender)].JML normal_behavior operation contract.0"))
            (branch "Post (Voter)"
               (builtin "One Step Simplification" (formula "42"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,1,0,1") (ifseqformula "26"))
               (rule "andLeft" (formula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0,1,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0,1,0") (ifseqformula "26"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "48"))
               (rule "andLeft" (formula "45"))
               (rule "notLeft" (formula "44"))
               (rule "andLeft" (formula "49"))
               (rule "notLeft" (formula "44"))
               (rule "notLeft" (formula "48"))
               (rule "orRight" (formula "50"))
               (rule "eqSymm" (formula "46"))
               (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "50"))
               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "51")))
               (rule "assignment" (formula "59") (term "1"))
               (builtin "One Step Simplification" (formula "59"))
               (rule "assignment_to_reference_array_component" (formula "59"))
               (branch "Normal Execution (v_arr_1 != null)"
                  (builtin "One Step Simplification" (formula "59"))
                  (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0") (ifseqformula "26"))
                  (rule "eqSymm" (formula "48"))
                  (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "48"))
                  (rule "hideAuxiliaryEq" (formula "48"))
                  (rule "replace_known_right" (formula "47") (term "1,0,0,0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")))
                  (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                  (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "46") (term "1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_right" (formula "46") (term "0,0,0,0") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                  (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "46"))
                  (rule "hideAuxiliaryEq" (formula "46"))
                  (rule "methodCallEmpty" (formula "59") (term "1"))
                  (rule "tryEmpty" (formula "59") (term "1"))
                  (rule "emptyModality" (formula "59") (term "1"))
                  (rule "andRight" (formula "59"))
                  (branch "Case 1"
                     (rule "andRight" (formula "59"))
                     (branch "Case 1"
                        (rule "impRight" (formula "59"))
                        (rule "andRight" (formula "60"))
                        (branch "Case 1"
                           (rule "andRight" (formula "60"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "true_left" (formula "1"))
                              (rule "notRight" (formula "59"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "close" (formula "52") (ifseqformula "2"))
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "true_left" (formula "1"))
                              (rule "notRight" (formula "59"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                              (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "54") (ifseqformula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "60"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "60") (userinteraction))
                              (rule "andRight" (formula "60"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "60"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "60"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_18"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "ifEqualsNull" (formula "2"))
                                    (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_13"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                    (rule "eqSymm" (formula "2") (term "0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0,1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0,1") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "49"))
                                    (rule "close" (formula "55") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "59") (term "1,1,1"))
                                    (rule "dismissNonSelectedField" (formula "59") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "pullOutSelect" (formula "59") (term "1") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_sender_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_14"))
                                    (rule "applyEq" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0,0,0,1,0,0") (inst "selectSK=arr_19"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "51"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "59") (term "1") (ifseqformula "47"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "48"))
                                    (rule "replaceKnownSelect_taclet18_0" (formula "48") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "48") (term "1,1,0"))
                                    (rule "replaceKnownSelect_taclet18_0" (formula "48") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "48") (term "0,0,0,0"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "notLeft" (formula "48"))
                                    (rule "disjointDefinition" (formula "49"))
                                    (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "replaceKnownSelect_taclet4_0" (formula "49") (term "0"))
                                    (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "replaceKnownSelect_taclet4_0" (formula "29") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "exLeft" (formula "29") (inst "sk=i_1_11"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "andLeft" (formula "29"))
                                    (rule "inEqSimp_ltToLeq" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29"))
                                    (rule "disjointDefinition" (formula "33"))
                                    (rule "castedGetAny" (formula "31") (term "0"))
                                    (rule "lenOfSeqConcat" (formula "30") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "0"))
                                    (rule "getOfSeqConcat" (formula "31") (term "0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "31") (term "2,0"))
                                    (rule "castDel" (formula "31") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "31") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "32") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_11"))
                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                    (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                                    (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "nnf_imp2or" (formula "32") (term "0"))
                                    (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "32") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "32") (term "1,1,0,0,0"))
                                    (rule "commute_or" (formula "16") (term "0,0"))
                                    (rule "commute_or" (formula "17") (term "0,0"))
                                    (rule "commute_and" (formula "16") (term "1,0"))
                                    (rule "commute_and" (formula "17") (term "1,0"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "64") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0,0"))
                                    (rule "castedGetAny" (formula "64") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "64") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "64") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "1,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "1,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "0,0,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "0,1,1,0,0,0,1,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "1,1,0,0,0,1,0") (ifseqformula "46"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "64") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "0,0,1,0,0,1,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "64") (term "0,0,1,0,0,0"))
                                    (rule "disjointDefinition" (formula "64") (term "1"))
                                    (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0"))
                                    (rule "pullOutSelect" (formula "64") (term "1,0,0,0,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_12"))
                                    (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "replaceKnownSelect_taclet32_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                    (rule "applyEqReverse" (formula "65") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "65") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "64") (term "0,0,1,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_8"))
                                    (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet7_0" (formula "1") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "65") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "65") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "lenOfSeqConcat" (formula "64") (term "1,1,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "polySimp_addComm0" (formula "64") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "1,1,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,1,1,0,0,0"))
                                    (rule "add_zero_left" (formula "64") (term "1,1,0,0,0"))
                                    (rule "getOfSeqConcat" (formula "64") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "64") (term "1,2,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "64") (term "1,2,0,1,0,0"))
                                    (rule "getOfSeqSingleton" (formula "64") (term "2,0,1,0,0"))
                                    (rule "castDel" (formula "64") (term "1,2,0,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "64") (term "0,2,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,0,2,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,0,2,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,1,0,0"))
                                    (rule "nnf_imp2or" (formula "64") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "nnf_notAnd" (formula "64") (term "0,0,0,1"))
                                    (rule "nnf_notOr" (formula "64") (term "1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "64") (term "1,1,0,0,0,1"))
                                    (rule "nnf_notOr" (formula "64") (term "0,1,1,0,0,0,1"))
                                    (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "52") (inst "s=s") (inst "i=i_1"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "replaceKnownSelect_taclet30_0" (formula "52") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "52") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "52") (term "1,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "52") (term "1,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet34_0" (formula "52") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "0,1,1,0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "1,1,0,0,0,1,0") (ifseqformula "46"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "52") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "0,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "0,1,1,0,0,0,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "exLeft" (formula "52") (inst "sk=i_1_12"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "andLeft" (formula "52"))
                                    (rule "inEqSimp_ltToLeq" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "52"))
                                    (rule "disjointDefinition" (formula "56"))
                                    (rule "castedGetAny" (formula "54") (term "0"))
                                    (rule "lenOfSeqConcat" (formula "53") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "53") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                    (rule "add_literals" (formula "53") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "53") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "53"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                    (rule "getOfSeqConcat" (formula "54") (term "0"))
                                    (rule "polySimp_elimSub" (formula "54") (term "1,2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                    (rule "getOfSeqSingleton" (formula "54") (term "2,0"))
                                    (rule "castDel" (formula "54") (term "1,2,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "54") (term "0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                                    (rule "nnf_imp2or" (formula "55") (term "0"))
                                    (rule "nnf_notAnd" (formula "55") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                                    (rule "nnf_notOr" (formula "55") (term "1,0,0,0"))
                                    (rule "nnf_notOr" (formula "55") (term "1,1,0,0,0"))
                                    (rule "nnf_notOr" (formula "55") (term "0,1,1,0,0,0"))
                                    (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "nnf_ex2all" (formula "67"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0"))
                                    (rule "commuteIntersection" (formula "57") (term "0"))
                                    (rule "commuteIntersection" (formula "34") (term "0"))
                                    (rule "intersectWithSingleton" (formula "34") (term "0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "(null, secret) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                       (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "36") (term "1,0,1") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "58") (term "2") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "disjointAndSubset_4" (formula "39") (ifseqformula "24"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "disjointAndSubset_4" (formula "39") (ifseqformula "22"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "disjointAndSubset_4" (formula "39") (ifseqformula "23"))
                                          (rule "intersectAllFieldsFreshLocs" (formula "39") (term "0"))
                                          (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                                          (rule "true_left" (formula "39"))
                                          (rule "disjointAndSubset_4" (formula "39") (ifseqformula "25"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "cut_direct" (formula "36") (term "0"))
                                          (branch "CUT: self.voters.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "cnf_rightDist" (formula "17") (term "0"))
                                             (rule "cnf_rightDist" (formula "18") (term "0"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "42") (inst "iv=iv"))
                                             (rule "andLeft" (formula "42"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                             (rule "lenOfSeqConcat" (formula "42") (term "1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "polySimp_addComm0" (formula "42") (term "1"))
                                             (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "44"))
                                             (rule "lenOfSeqConcat" (formula "42") (term "0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "polySimp_homoEq" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                             (rule "add_literals" (formula "42") (term "1,0"))
                                             (rule "times_zero_1" (formula "42") (term "0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "applyEq" (formula "42") (term "0,0,1,0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "distr_forallAnd" (formula "17"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "distr_forallAnd" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "commute_or_2" (formula "58") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "34") (term "2,0"))
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 TRUE"
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                (rule "add_literals" (formula "33") (term "1,0"))
                                                (rule "times_zero_1" (formula "33") (term "0"))
                                                (rule "leq_literals" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "57") (term "0,0,2,0") (ifseqformula "33"))
                                                (rule "eqSymm" (formula "57") (term "0,2,0"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "56"))
                                                (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                (rule "leq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "34"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "58") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "56"))
                                                (rule "times_zero_1" (formula "55") (term "0,0"))
                                                (rule "add_zero_left" (formula "55") (term "0"))
                                                (rule "commute_or" (formula "18") (term "0"))
                                                (rule "commute_or" (formula "20") (term "0"))
                                                (rule "commute_or_2" (formula "58") (term "0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "commute_or" (formula "58") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "58") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0"))
                                                (rule "distr_forallAnd" (formula "35"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "castDel" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "35") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "commute_or" (formula "35") (term "0"))
                                                (rule "cnf_rightDist" (formula "58") (term "0"))
                                                (rule "distr_forallAnd" (formula "58"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "castDel" (formula "58") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "58") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "commute_or" (formula "58") (term "0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0"))
                                                (rule "distr_forallAnd" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "commute_or_2" (formula "35") (term "0"))
                                                (rule "shift_paren_or" (formula "36") (term "0"))
                                                (rule "commute_or" (formula "36") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0"))
                                                (rule "distr_forallAnd" (formula "59"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "shift_paren_or" (formula "60") (term "0"))
                                                (rule "commute_or" (formula "60") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0"))
                                                (rule "distr_forallAnd" (formula "59"))
                                                (rule "andLeft" (formula "59"))
                                                (rule "commute_or_2" (formula "59") (term "0"))
                                                (rule "shift_paren_or" (formula "60") (term "0"))
                                                (rule "commute_or" (formula "60") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "54") (term "0"))
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE TRUE"
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                   (rule "distr_forallAnd" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "0"))
                                                   (rule "shift_paren_or" (formula "1") (term "0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "2") (term "0"))
                                                   (rule "distr_forallAnd" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "commute_or_2" (formula "3") (term "0"))
                                                   (rule "shift_paren_or" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0,0,0"))
                                                   (rule "castDel" (formula "2") (term "0,1,0"))
                                                   (rule "castDel" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "2") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1"))
                                                   (rule "qeq_literals" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE FALSE"
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                   (rule "distr_forallAnd" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "0"))
                                                   (rule "shift_paren_or" (formula "1") (term "0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "2") (term "0"))
                                                   (rule "distr_forallAnd" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "commute_or_2" (formula "3") (term "0"))
                                                   (rule "shift_paren_or" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0,1,0"))
                                                   (rule "castDel" (formula "2") (term "0,0,0"))
                                                   (rule "castDel" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "2") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1"))
                                                   (rule "qeq_literals" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "34"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "60"))
                                                (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "33"))
                                                (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "60") (term "0,0"))
                                                (rule "leq_literals" (formula "60") (term "0"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "commute_or" (formula "18") (term "0"))
                                                (rule "commute_or" (formula "20") (term "0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                (rule "commute_or_2" (formula "58") (term "0"))
                                                (rule "commute_or" (formula "35") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "commute_or" (formula "58") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "58") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or_2" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "36") (term "0"))
                                                (rule "distr_forallAnd" (formula "36"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "commute_or" (formula "36") (term "0"))
                                                (rule "cnf_rightDist" (formula "59") (term "0"))
                                                (rule "distr_forallAnd" (formula "59"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "castDel" (formula "59") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "59") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "59") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "commute_or" (formula "59") (term "0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2"))
                                                (rule "ifthenelse_split" (formula "58") (term "2,0"))
                                                (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 TRUE"
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57"))
                                                   (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                                   (rule "add_literals" (formula "57") (term "1,0"))
                                                   (rule "times_zero_1" (formula "57") (term "0"))
                                                   (rule "leq_literals" (formula "57"))
                                                   (rule "true_left" (formula "57"))
                                                   (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                                   (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "58") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "eqSymm" (formula "58"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "35") (term "1") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "58"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "56"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 FALSE"
                                                   (rule "inEqSimp_strengthen1" (formula "57") (ifseqformula "61"))
                                                   (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "57"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                   (rule "add_literals" (formula "61") (term "0,0"))
                                                   (rule "leq_literals" (formula "61") (term "0"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "36") (term "0"))
                                                   (rule "distr_forallAnd" (formula "36"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "commute_or_2" (formula "36") (term "0"))
                                                   (rule "cnf_rightDist" (formula "60") (term "0"))
                                                   (rule "distr_forallAnd" (formula "60"))
                                                   (rule "andLeft" (formula "60"))
                                                   (rule "shift_paren_or" (formula "37") (term "0"))
                                                   (rule "shift_paren_or" (formula "61") (term "0"))
                                                   (rule "commute_or" (formula "37") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "55") (term "0"))
                                                   (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE TRUE"
                                                      (rule "eqSymm" (formula "56"))
                                                      (rule "commute_or" (formula "62") (term "0,0"))
                                                      (rule "cnf_rightDist" (formula "61") (term "0"))
                                                      (rule "distr_forallAnd" (formula "61"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "commute_or_2" (formula "61") (term "0"))
                                                      (rule "shift_paren_or" (formula "62") (term "0"))
                                                      (rule "commute_or" (formula "62") (term "0,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "61"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "60"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "35"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "61") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "61"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0"))
                                                      (rule "add_literals" (formula "61") (term "0"))
                                                      (rule "leq_literals" (formula "61"))
                                                      (rule "closeFalse" (formula "61"))
                                                   )
                                                   (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE FALSE"
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "commute_or" (formula "61") (term "0,0"))
                                                      (rule "cnf_rightDist" (formula "60") (term "0"))
                                                      (rule "distr_forallAnd" (formula "60"))
                                                      (rule "andLeft" (formula "60"))
                                                      (rule "commute_or_2" (formula "60") (term "0"))
                                                      (rule "shift_paren_or" (formula "61") (term "0"))
                                                      (rule "commute_or" (formula "61") (term "0,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "59"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "35"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "60") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "60"))
                                                      (rule "inEqSimp_homoInEq1" (formula "60"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "60") (term "0"))
                                                      (rule "add_literals" (formula "60") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "60") (term "1,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0"))
                                                      (rule "leq_literals" (formula "60"))
                                                      (rule "closeFalse" (formula "60"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: self.voters.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "referencedObjectIsCreatedRight" (formula "57") (ifseqformula "67"))
                                             (rule "close" (formula "57") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0,1") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "54") (term "2") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "cnf_rightDist" (formula "17") (term "0"))
                                          (rule "cnf_rightDist" (formula "18") (term "0"))
                                          (rule "distr_forallAnd" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "distr_forallAnd" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "37") (inst "iv=iv"))
                                          (rule "andLeft" (formula "37"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "37") (term "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_addComm0" (formula "37") (term "1"))
                                          (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "39"))
                                          (rule "lenOfSeqConcat" (formula "37") (term "0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_homoEq" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "37") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                          (rule "add_literals" (formula "37") (term "1,0"))
                                          (rule "times_zero_1" (formula "37") (term "0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                          (rule "lenOfSeqConcat" (formula "37") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "commute_or_2" (formula "51") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0"))
                                          (rule "commute_or" (formula "20") (term "0"))
                                          (rule "ifthenelse_split" (formula "34") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 TRUE"
                                             (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "34"))
                                             (rule "eqSymm" (formula "51") (term "0,2,0"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "50"))
                                             (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "33"))
                                             (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                             (rule "add_literals" (formula "33") (term "1,0"))
                                             (rule "times_zero_1" (formula "33") (term "0"))
                                             (rule "leq_literals" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                             (rule "leq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                             (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "50") (term "1") (ifseqformula "34"))
                                             (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                             (rule "times_zero_1" (formula "48") (term "0,0"))
                                             (rule "add_zero_left" (formula "48") (term "0"))
                                             (rule "commute_or_2" (formula "51") (term "0"))
                                             (rule "commute_or" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "35") (term "0"))
                                             (rule "distr_forallAnd" (formula "35"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "castDel" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "35") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "commute_or" (formula "35") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0"))
                                             (rule "distr_forallAnd" (formula "51"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "castDel" (formula "51") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "51") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "51") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "commute_or" (formula "51") (term "0"))
                                             (rule "cnf_rightDist" (formula "35") (term "0"))
                                             (rule "distr_forallAnd" (formula "35"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "shift_paren_or" (formula "36") (term "0"))
                                             (rule "commute_or" (formula "36") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0"))
                                             (rule "distr_forallAnd" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "shift_paren_or" (formula "53") (term "0"))
                                             (rule "commute_or" (formula "53") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0"))
                                             (rule "distr_forallAnd" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "commute_or_2" (formula "52") (term "0"))
                                             (rule "shift_paren_or" (formula "53") (term "0"))
                                             (rule "commute_or" (formula "53") (term "0,0"))
                                             (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                             (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                             (rule "ifthenelse_split" (formula "47") (term "0"))
                                             (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE TRUE"
                                                (rule "eqSymm" (formula "48"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0"))
                                                (rule "distr_forallAnd" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "commute_or_2" (formula "3") (term "0"))
                                                (rule "shift_paren_or" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,1,0"))
                                                (rule "castDel" (formula "2") (term "0,1"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "qeq_literals" (formula "2") (term "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE FALSE"
                                                (rule "eqSymm" (formula "47"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0"))
                                                (rule "distr_forallAnd" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "commute_or_2" (formula "3") (term "0"))
                                                (rule "shift_paren_or" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "castDel" (formula "2") (term "0,1,0"))
                                                (rule "castDel" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "2") (term "0,1"))
                                                (rule "qeq_literals" (formula "2") (term "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "33") (ifseqformula "53"))
                                             (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradEq7" (formula "53") (ifseqformula "33"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0"))
                                             (rule "leq_literals" (formula "53") (term "0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "false_right" (formula "53"))
                                             (rule "commute_or_2" (formula "51") (term "0"))
                                             (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                             (rule "commute_or" (formula "35") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "35") (term "0,0"))
                                             (rule "commute_or" (formula "51") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0"))
                                             (rule "distr_forallAnd" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "commute_or_2" (formula "2") (term "0"))
                                             (rule "shift_paren_or" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "36") (term "0"))
                                             (rule "distr_forallAnd" (formula "36"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "castDel" (formula "36") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "commute_or" (formula "36") (term "0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0"))
                                             (rule "distr_forallAnd" (formula "52"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "commute_or" (formula "52") (term "0"))
                                             (rule "commute_or" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "commute_or_2" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "0,0,0"))
                                             (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0"))
                                             (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "commute_or" (formula "2"))
                                             (rule "cnf_rightDist" (formula "36") (term "0"))
                                             (rule "distr_forallAnd" (formula "36"))
                                             (rule "andLeft" (formula "36"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "cnf_rightDist" (formula "53") (term "0"))
                                             (rule "distr_forallAnd" (formula "53"))
                                             (rule "andLeft" (formula "53"))
                                             (rule "shift_paren_or" (formula "37") (term "0"))
                                             (rule "shift_paren_or" (formula "54") (term "0"))
                                             (rule "commute_or" (formula "37") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "52") (term "2,0"))
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 TRUE"
                                                (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                                (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                                (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                                (rule "leq_literals" (formula "53") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                                (rule "inEqSimp_homoInEq1" (formula "51"))
                                                (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                                                (rule "add_literals" (formula "51") (term "1,0"))
                                                (rule "times_zero_1" (formula "51") (term "0"))
                                                (rule "leq_literals" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "35") (term "1") (ifseqformula "52"))
                                                (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "53") (term "1,0,1,0,0") (ifseqformula "52"))
                                                (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "52"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "50"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "51") (ifseqformula "56"))
                                                (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "51"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                                (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "56") (term "0,0"))
                                                (rule "leq_literals" (formula "56") (term "0"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "commute_or" (formula "54") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "53") (term "0"))
                                                (rule "distr_forallAnd" (formula "53"))
                                                (rule "andLeft" (formula "53"))
                                                (rule "commute_or_2" (formula "53") (term "0"))
                                                (rule "shift_paren_or" (formula "54") (term "0"))
                                                (rule "commute_or" (formula "54") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "48") (term "0"))
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE TRUE"
                                                   (rule "eqSymm" (formula "49"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "54"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "36"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "2") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "53") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "53") (term "0"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "closeFalse" (formula "53"))
                                                )
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret@anon_heap_registerSender«anonHeapFunction» = TRUE FALSE"
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "53"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "35"))
                                                   (rule "qeq_literals" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "52") (term "0"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "closeFalse" (formula "52"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "(null, secret) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                       (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "37") (term "0"))
                                       (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "56") (term "1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "35") (term "1,0,1") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "58") (term "2") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "disjointAndSubset_4" (formula "38") (ifseqformula "21"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "disjointAndSubset_4" (formula "38") (ifseqformula "22"))
                                          (rule "intersectAllFieldsFreshLocs" (formula "38") (term "0"))
                                          (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "35")))
                                          (rule "true_left" (formula "38"))
                                          (rule "disjointAndSubset_4" (formula "38") (ifseqformula "24"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "disjointAndSubset_4" (formula "38") (ifseqformula "23"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "cut_direct" (formula "35") (term "0"))
                                          (branch "CUT: self.voters.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "cnf_rightDist" (formula "16") (term "0"))
                                             (rule "cnf_rightDist" (formula "17") (term "0"))
                                             (rule "distr_forallAnd" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "distr_forallAnd" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                             (rule "andLeft" (formula "43"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "1"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1"))
                                             (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "44"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "commute_or_2" (formula "57") (term "0,0"))
                                             (rule "commute_or" (formula "17") (term "0"))
                                             (rule "commute_or" (formula "19") (term "0"))
                                             (rule "ifthenelse_split" (formula "33") (term "2,0"))
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 TRUE"
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_commuteGeq" (formula "56"))
                                                (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0"))
                                                (rule "leq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "57") (term "0,0,2,0") (ifseqformula "33"))
                                                (rule "eqSymm" (formula "57") (term "0,2,0"))
                                                (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,0"))
                                                (rule "times_zero_1" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "33"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "32"))
                                                (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                                (rule "times_zero_1" (formula "54") (term "0,0"))
                                                (rule "add_zero_left" (formula "54") (term "0"))
                                                (rule "commute_or_2" (formula "57") (term "0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "34") (term "0"))
                                                (rule "distr_forallAnd" (formula "34"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "castDel" (formula "34") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "34") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "34") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "commute_or" (formula "34") (term "0"))
                                                (rule "cnf_rightDist" (formula "57") (term "0"))
                                                (rule "distr_forallAnd" (formula "57"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "castDel" (formula "57") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "57") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "commute_or" (formula "57") (term "0"))
                                                (rule "cnf_rightDist" (formula "34") (term "0"))
                                                (rule "distr_forallAnd" (formula "34"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "commute_or_2" (formula "34") (term "0"))
                                                (rule "shift_paren_or" (formula "35") (term "0"))
                                                (rule "commute_or" (formula "35") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "58") (term "0"))
                                                (rule "distr_forallAnd" (formula "58"))
                                                (rule "andLeft" (formula "58"))
                                                (rule "shift_paren_or" (formula "59") (term "0"))
                                                (rule "commute_or" (formula "59") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "58") (term "0"))
                                                (rule "distr_forallAnd" (formula "58"))
                                                (rule "andLeft" (formula "58"))
                                                (rule "commute_or_2" (formula "58") (term "0"))
                                                (rule "shift_paren_or" (formula "59") (term "0"))
                                                (rule "commute_or" (formula "59") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "53") (term "0"))
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                   (rule "distr_forallAnd" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "0"))
                                                   (rule "shift_paren_or" (formula "1") (term "0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "2") (term "0"))
                                                   (rule "distr_forallAnd" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "commute_or_2" (formula "3") (term "0"))
                                                   (rule "shift_paren_or" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0,1,0"))
                                                   (rule "castDel" (formula "2") (term "0,0,0"))
                                                   (rule "castDel" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "2") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,1"))
                                                   (rule "qeq_literals" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "33") (term "0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "closeFalse" (formula "33"))
                                                )
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "1") (term "0"))
                                                   (rule "distr_forallAnd" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "0"))
                                                   (rule "shift_paren_or" (formula "1") (term "0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or" (formula "2") (term "1,1,0"))
                                                   (rule "cnf_rightDist" (formula "2") (term "0"))
                                                   (rule "distr_forallAnd" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "commute_or_2" (formula "3") (term "0"))
                                                   (rule "shift_paren_or" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0,1"))
                                                   (rule "castDel" (formula "2") (term "0,0,0"))
                                                   (rule "castDel" (formula "2") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                   (rule "add_literals" (formula "2") (term "0,1"))
                                                   (rule "qeq_literals" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                   (rule "add_literals" (formula "2") (term "0,1"))
                                                   (rule "leq_literals" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "33"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "32") (ifseqformula "59"))
                                                (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "32"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0"))
                                                (rule "leq_literals" (formula "59") (term "0"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "commute_or_2" (formula "57") (term "0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or_2" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "35") (term "0"))
                                                (rule "distr_forallAnd" (formula "35"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "commute_or" (formula "35") (term "0"))
                                                (rule "cnf_rightDist" (formula "58") (term "0"))
                                                (rule "distr_forallAnd" (formula "58"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "castDel" (formula "58") (term "1,0,0,1,0,0"))
                                                (rule "castDel" (formula "58") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "commute_or" (formula "58") (term "0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2"))
                                                (rule "cnf_rightDist" (formula "35") (term "0"))
                                                (rule "distr_forallAnd" (formula "35"))
                                                (rule "andLeft" (formula "35"))
                                                (rule "commute_or_2" (formula "35") (term "0"))
                                                (rule "ifthenelse_split" (formula "58") (term "2,0"))
                                                (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 TRUE"
                                                   (rule "applyEq" (formula "59") (term "0,0,0") (ifseqformula "58"))
                                                   (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                   (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "59") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "59") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "59"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                                                   (rule "inEqSimp_homoInEq1" (formula "57"))
                                                   (rule "polySimp_pullOutFactor1" (formula "57") (term "0"))
                                                   (rule "add_literals" (formula "57") (term "1,0"))
                                                   (rule "times_zero_1" (formula "57") (term "0"))
                                                   (rule "leq_literals" (formula "57"))
                                                   (rule "true_left" (formula "57"))
                                                   (rule "applyEq" (formula "33") (term "0") (ifseqformula "57"))
                                                   (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "57"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "57"))
                                                   (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "59") (term "1,0,1,0,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "34") (term "1") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "58"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,1,0") (ifseqformula "58"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "56"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 FALSE"
                                                   (rule "inEqSimp_strengthen1" (formula "57") (ifseqformula "61"))
                                                   (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "58"))
                                                   (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "57"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "61") (term "0,0"))
                                                   (rule "leq_literals" (formula "61") (term "0"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "cnf_rightDist" (formula "59") (term "0"))
                                                   (rule "distr_forallAnd" (formula "59"))
                                                   (rule "andLeft" (formula "59"))
                                                   (rule "shift_paren_or" (formula "36") (term "0"))
                                                   (rule "shift_paren_or" (formula "60") (term "0"))
                                                   (rule "commute_or" (formula "36") (term "0,0"))
                                                   (rule "commute_or" (formula "60") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "54") (term "0"))
                                                   (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                                      (rule "eqSymm" (formula "55"))
                                                      (rule "cnf_rightDist" (formula "60") (term "0"))
                                                      (rule "distr_forallAnd" (formula "60"))
                                                      (rule "andLeft" (formula "60"))
                                                      (rule "commute_or_2" (formula "60") (term "0"))
                                                      (rule "shift_paren_or" (formula "61") (term "0"))
                                                      (rule "commute_or" (formula "61") (term "0,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "60"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "60"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "1") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "34"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "59") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "59") (term "0"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "closeFalse" (formula "59"))
                                                   )
                                                   (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                                      (rule "eqSymm" (formula "54"))
                                                      (rule "cnf_rightDist" (formula "59") (term "0"))
                                                      (rule "distr_forallAnd" (formula "59"))
                                                      (rule "andLeft" (formula "59"))
                                                      (rule "commute_or_2" (formula "59") (term "0"))
                                                      (rule "shift_paren_or" (formula "60") (term "0"))
                                                      (rule "commute_or" (formula "60") (term "0,0"))
                                                      (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "59"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "34"))
                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "59"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "1") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "35") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0"))
                                                      (rule "leq_literals" (formula "35"))
                                                      (rule "closeFalse" (formula "35"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: self.voters.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "67"))
                                             (rule "close" (formula "56") (ifseqformula "2"))
                                          )
                                       )
                                       (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEqReverse" (formula "35") (term "1,0,1") (ifseqformula "37"))
                                          (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "37"))
                                          (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEqReverse" (formula "54") (term "2") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "cnf_rightDist" (formula "17") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "distr_forallAnd" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                          (rule "andLeft" (formula "36"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                          (rule "lenOfSeqConcat" (formula "36") (term "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "polySimp_addComm0" (formula "36") (term "1"))
                                          (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "38"))
                                          (rule "lenOfSeqConcat" (formula "36") (term "0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "polySimp_homoEq" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                                          (rule "add_literals" (formula "36") (term "1,0"))
                                          (rule "times_zero_1" (formula "36") (term "0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                                          (rule "lenOfSeqConcat" (formula "36") (term "0,1,0,0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or_2" (formula "50") (term "0,0"))
                                          (rule "commute_or" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "19") (term "0"))
                                          (rule "ifthenelse_split" (formula "33") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 TRUE"
                                             (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                             (rule "add_literals" (formula "32") (term "1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0"))
                                             (rule "leq_literals" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "32"))
                                             (rule "inEqSimp_commuteGeq" (formula "48"))
                                             (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "32"))
                                             (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                             (rule "applyEq" (formula "49") (term "0,0,2,0") (ifseqformula "32"))
                                             (rule "eqSymm" (formula "49") (term "0,2,0"))
                                             (rule "applyEq" (formula "1") (term "1,1,0,0,0,1,0") (ifseqformula "32"))
                                             (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "32"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "applyEq" (formula "49") (term "1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "1") (term "1,0,2,0,0,1,0") (ifseqformula "32"))
                                             (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                             (rule "times_zero_1" (formula "47") (term "0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "50") (term "0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "34") (term "0"))
                                             (rule "distr_forallAnd" (formula "34"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "castDel" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "34") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "34") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "commute_or" (formula "34") (term "0"))
                                             (rule "cnf_rightDist" (formula "50") (term "0"))
                                             (rule "distr_forallAnd" (formula "50"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "castDel" (formula "50") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "50") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "50") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "commute_or" (formula "50") (term "0"))
                                             (rule "cnf_rightDist" (formula "34") (term "0"))
                                             (rule "distr_forallAnd" (formula "34"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "shift_paren_or" (formula "35") (term "0"))
                                             (rule "commute_or" (formula "35") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0"))
                                             (rule "distr_forallAnd" (formula "51"))
                                             (rule "andLeft" (formula "51"))
                                             (rule "shift_paren_or" (formula "52") (term "0"))
                                             (rule "commute_or" (formula "52") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0"))
                                             (rule "distr_forallAnd" (formula "51"))
                                             (rule "andLeft" (formula "51"))
                                             (rule "commute_or_2" (formula "51") (term "0"))
                                             (rule "shift_paren_or" (formula "52") (term "0"))
                                             (rule "commute_or" (formula "52") (term "0,0"))
                                             (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                             (rule "nnf_notOr" (formula "1") (term "1,1,1,0"))
                                             (rule "ifthenelse_split" (formula "46") (term "0"))
                                             (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                                (rule "eqSymm" (formula "47"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0"))
                                                (rule "distr_forallAnd" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "commute_or_2" (formula "3") (term "0"))
                                                (rule "shift_paren_or" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,1"))
                                                (rule "castDel" (formula "2") (term "0,1,0"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "qeq_literals" (formula "2") (term "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "leq_literals" (formula "2") (term "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "closeFalse" (formula "33"))
                                             )
                                             (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                                (rule "eqSymm" (formula "46"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0"))
                                                (rule "distr_forallAnd" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "0"))
                                                (rule "shift_paren_or" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0"))
                                                (rule "distr_forallAnd" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "commute_or_2" (formula "3") (term "0"))
                                                (rule "shift_paren_or" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "typeEqDerived2" (formula "2") (term "0,0,1") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0,0,0"))
                                                (rule "castDel" (formula "2") (term "0,1,0"))
                                                (rule "castDel" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,1,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "qeq_literals" (formula "2") (term "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_11 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "32") (ifseqformula "52"))
                                             (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "32"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0"))
                                             (rule "leq_literals" (formula "52") (term "0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "commute_or_2" (formula "50") (term "0"))
                                             (rule "ifthenelse_to_or_left2" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1,0"))
                                             (rule "commute_or" (formula "34") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "34") (term "0,0"))
                                             (rule "commute_or" (formula "50") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "50") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0"))
                                             (rule "distr_forallAnd" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "commute_or_2" (formula "2") (term "0"))
                                             (rule "shift_paren_or" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption3" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "35") (term "0"))
                                             (rule "distr_forallAnd" (formula "35"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "castDel" (formula "35") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "commute_or" (formula "35") (term "0"))
                                             (rule "cnf_rightDist" (formula "51") (term "0"))
                                             (rule "distr_forallAnd" (formula "51"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "castDel" (formula "51") (term "1,0,0,1,0,0"))
                                             (rule "castDel" (formula "51") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "51") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "commute_or" (formula "51") (term "0"))
                                             (rule "commute_or" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_or_antiSymm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "commute_or_2" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "0,0,0"))
                                             (rule "castDel" (formula "2") (term "0,0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0"))
                                             (rule "instanceof_static_type" (formula "2") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "commute_or" (formula "2"))
                                             (rule "cnf_rightDist" (formula "35") (term "0"))
                                             (rule "distr_forallAnd" (formula "35"))
                                             (rule "andLeft" (formula "35"))
                                             (rule "commute_or_2" (formula "35") (term "0"))
                                             (rule "cnf_rightDist" (formula "52") (term "0"))
                                             (rule "distr_forallAnd" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "shift_paren_or" (formula "36") (term "0"))
                                             (rule "shift_paren_or" (formula "53") (term "0"))
                                             (rule "commute_or" (formula "36") (term "0,0"))
                                             (rule "commute_or" (formula "53") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "51") (term "2,0"))
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 TRUE"
                                                (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "51"))
                                                (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                                (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "52") (term "0,0,0"))
                                                (rule "leq_literals" (formula "52") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                                (rule "inEqSimp_homoInEq1" (formula "50"))
                                                (rule "polySimp_pullOutFactor1" (formula "50") (term "0"))
                                                (rule "add_literals" (formula "50") (term "1,0"))
                                                (rule "times_zero_1" (formula "50") (term "0"))
                                                (rule "leq_literals" (formula "50"))
                                                (rule "true_left" (formula "50"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "50"))
                                                (rule "applyEq" (formula "34") (term "1") (ifseqformula "51"))
                                                (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "53") (term "1,0,1,0") (ifseqformula "51"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,0") (ifseqformula "51"))
                                                (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "49") (term "0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "closeFalse" (formula "49"))
                                             )
                                             (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_sender_ids.length = i_1_12 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "50") (ifseqformula "55"))
                                                (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "50"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0"))
                                                (rule "leq_literals" (formula "55") (term "0"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "cnf_rightDist" (formula "52") (term "0"))
                                                (rule "distr_forallAnd" (formula "52"))
                                                (rule "andLeft" (formula "52"))
                                                (rule "commute_or_2" (formula "52") (term "0"))
                                                (rule "shift_paren_or" (formula "53") (term "0"))
                                                (rule "commute_or" (formula "53") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "47") (term "0"))
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE TRUE"
                                                   (rule "eqSymm" (formula "48"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "2") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "52"))
                                                   (rule "qeq_literals" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "34") (term "0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "closeFalse" (formula "34"))
                                                )
                                                (branch " de.uni.trier.infsec.eVotingVerif.core.Setup.secret = TRUE FALSE"
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "allLeft" (formula "1") (inst "t=i_1_12"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "2") (inst "t=i_1_11"))
                                                   (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "51"))
                                                   (rule "qeq_literals" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "35"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "2") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "52") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "52"))
                                                   (rule "inEqSimp_homoInEq1" (formula "52"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                   (rule "add_literals" (formula "52") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "52") (term "1,0"))
                                                   (rule "add_literals" (formula "52") (term "0"))
                                                   (rule "leq_literals" (formula "52"))
                                                   (rule "closeFalse" (formula "52"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "59") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                 (rule "disjointDefinition" (formula "59"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_20"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "pullOutSelect" (formula "60") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "61") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_15"))
                                 (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                 (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                 (rule "eqSymm" (formula "2") (term "0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "61") (term "0,1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (inst "s=s") (inst "i=i_1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "replaceKnownSelect_taclet4_0" (formula "29") (term "0,1"))
                                 (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "exLeft" (formula "29") (inst "sk=i_1_13"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "inEqSimp_ltToLeq" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "disjointDefinition" (formula "33"))
                                 (rule "castedGetAny" (formula "31") (term "0"))
                                 (rule "lenOfSeqConcat" (formula "30") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "0"))
                                 (rule "getOfSeqConcat" (formula "31") (term "0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "getOfSeqSingleton" (formula "31") (term "2,0"))
                                 (rule "castDel" (formula "31") (term "1,2,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "31") (term "0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,2,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                 (rule "pullOutSelect" (formula "32") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_13"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                 (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                 (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0,0,0,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                 (rule "nnf_notOr" (formula "32") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "32") (term "1,1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "52"))
                                 (rule "replaceKnownSelect_taclet25_0" (formula "52") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet26_0" (formula "52") (term "0,1"))
                                 (rule "replaceKnownSelect_taclet18_0" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownSelect_taclet18_0" (formula "52") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "52") (term "0,0,0,0"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "andLeft" (formula "52"))
                                 (rule "notLeft" (formula "52"))
                                 (rule "disjointDefinition" (formula "53"))
                                 (rule "close" (formula "64") (ifseqformula "53"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "60"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "60"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "1"))
                                    (rule "notRight" (formula "59"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_5"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet18_0" (formula "2") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "2") (term "1,0"))
                                    (rule "close" (formula "56") (ifseqformula "2"))
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (builtin "One Step Simplification" (formula "60"))
                                    (rule "true_left" (formula "1"))
                                    (rule "notRight" (formula "59"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_4"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                    (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "replaceKnownSelect_taclet18_0" (formula "2") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "2") (term "0"))
                                    (rule "close" (formula "55") (ifseqformula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "60"))
                                 (branch "Case 1"
                                    (rule "allLeft" (formula "17") (inst "t=i") (userinteraction))
                                    (rule "allLeft" (formula "19") (inst "t=i") (userinteraction))
                                    (rule "ifthenelse_split" (formula "49") (term "0") (userinteraction))
                                    (branch " de_uni_trier_infsec_eVotingVerif_core_Setup_secret_0«selectSK» = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "true_left" (formula "1"))
                                       (rule "eqSymm" (formula "49"))
                                       (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "9")))
                                       (rule "andLeft" (formula "18"))
                                       (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "9")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,1,1,0,1"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "50"))
                                       (rule "ifEqualsTRUE" (formula "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "mul_literals" (formula "19") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1"))
                                       (rule "mul_literals" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "64") (term "1,1"))
                                       (rule "mul_literals" (formula "64") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "64") (term "1,1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                       (rule "times_zero_1" (formula "17") (term "0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "pullOutSelect" (formula "64") (term "0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_5"))
                                       (rule "applyEq" (formula "65") (term "0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                       (rule "inEqSimp_homoInEq0" (formula "65") (term "1"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1"))
                                       (rule "mul_literals" (formula "65") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,1"))
                                       (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=arr_16"))
                                       (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                       (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_17"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_12"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "2") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "2") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "3") (term "0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,0,0,1,0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "60"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "67") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEqReverse" (formula "67") (term "1,1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "64"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,1,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "65") (term "1"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "52"))
                                       (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "53"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch " de_uni_trier_infsec_eVotingVerif_core_Setup_secret_0«selectSK» = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "true_left" (formula "1"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "9")))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "64") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,1,1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "64") (term "1,0,1"))
                                       (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "ifEqualsTRUE" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1"))
                                       (rule "mul_literals" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "65") (term "1,1"))
                                       (rule "mul_literals" (formula "65") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "65") (term "1,1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "pullOutSelect" (formula "65") (term "1,1,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_11"))
                                       (rule "applyEq" (formula "66") (term "1,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "66") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "66") (term "1,1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "65") (term "0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_4"))
                                       (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                       (rule "inEqSimp_homoInEq0" (formula "66") (term "1"))
                                       (rule "polySimp_addComm1" (formula "66") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "66") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "66") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1"))
                                       (rule "mul_literals" (formula "66") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "66") (term "1,1,1"))
                                       (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=arr_15"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "57")))
                                       (rule "applyEqReverse" (formula "66") (term "1,1,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "66") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "65") (term "1"))
                                       (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                       (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "49"))
                                       (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_leqRight" (formula "65"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "50"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "60"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "1,1,1"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "pullOutSelect" (formula "59") (term "2,0") (inst "selectSK=arr_12"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                                       (rule "replaceKnownSelect_taclet1_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "60") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=arr_13"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_secret_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet15_0" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_choice_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                       (rule "eqSymm" (formula "60"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_10"))
                                       (rule "applyEq" (formula "2") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,0,0") (inst "selectSK=arr_14"))
                                       (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "60")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "60"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "true_left" (formula "1"))
                                          (rule "notRight" (formula "59"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_9"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                          (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Voter_voted_1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "ifEqualsTRUE" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0,1,0,1,0,0") (inst "selectSK=arr_11"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "51")) (ifInst ""  (formula "54")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "60"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_6"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "29") (inst "s=s") (inst "i=i_1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "replaceKnownSelect_taclet4_0" (formula "29") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet7_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,1,1,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "29") (term "0,0,0,1,0,0,0"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "exLeft" (formula "29") (inst "sk=i_1_9"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "andLeft" (formula "29"))
                                             (rule "inEqSimp_ltToLeq" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "disjointDefinition" (formula "33"))
                                             (rule "castedGetAny" (formula "31") (term "0"))
                                             (rule "lenOfSeqConcat" (formula "30") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "getOfSeqConcat" (formula "31") (term "0"))
                                             (rule "polySimp_elimSub" (formula "31") (term "1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                             (rule "getOfSeqSingleton" (formula "31") (term "2,0"))
                                             (rule "castDel" (formula "31") (term "1,2,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "31") (term "0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "32") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_9"))
                                             (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                             (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
                                             (rule "applyEqReverse" (formula "33") (term "1,0,0,0,0") (ifseqformula "32"))
                                             (rule "hideAuxiliaryEq" (formula "32"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,0,0,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,1,0,0,0"))
                                             (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "52"))
                                             (rule "replaceKnownSelect_taclet24_0" (formula "52") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "52") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet18_0" (formula "52") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "52") (term "1,1,0"))
                                             (rule "replaceKnownSelect_taclet18_0" (formula "52") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "52") (term "0,0,0,0"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "notLeft" (formula "52"))
                                             (rule "disjointDefinition" (formula "53"))
                                             (rule "commuteUnion" (formula "64") (term "1"))
                                             (rule "close" (formula "64") (ifseqformula "39"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "60"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "59") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_5"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "1"))
                                                (rule "close" (formula "60") (ifseqformula "32"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "60"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "59") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                   (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Setup_voters_8"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                                   (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_4"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "notLeft" (formula "32"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "48") (ifseqformula "57"))
                                                   (rule "close" (formula "48") (ifseqformula "2"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "60"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "59") (inst "iv=iv"))
                                                      (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_1"))
                                                      (rule "applyEq" (formula "60") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet5_0" (formula "1") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "60") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "closeTrue" (formula "60"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "60"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "59") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "59") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                         (rule "getOfSeqConcat" (formula "59") (term "1,1,0,1"))
                                                         (rule "eqSymm" (formula "59") (term "1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "59") (term "1,2,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "1,2,0,1,0,1"))
                                                         (rule "getOfSeqSingleton" (formula "59") (term "2,0,1,0,1"))
                                                         (rule "castDel" (formula "59") (term "2,2,0,1,0,1"))
                                                         (rule "castDel" (formula "59") (term "1,2,0,1,0,1"))
                                                         (rule "polySimp_sepPosMonomial" (formula "59") (term "0,2,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,0,2,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,0,2,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,1,0,1"))
                                                         (rule "pullOutSelect" (formula "59") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_7"))
                                                         (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "60") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet7_0" (formula "1") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "lenOfSeqConcat" (formula "59") (term "1,1,1,0,0,1"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "add_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "59") (term "1,1,0,0,1"))
                                                         (rule "lenOfSeqConcat" (formula "59") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "polySimp_homoEq" (formula "59") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                         (rule "add_literals" (formula "59") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "59") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "59") (term "0,0"))
                                                         (rule "add_literals" (formula "59") (term "1,0,0"))
                                                         (rule "times_zero_1" (formula "59") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "allRight" (formula "59") (inst "sk=iv_1"))
                                                         (rule "impRight" (formula "59"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "61") (term "0,2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                                                         (rule "getOfSeqConcat" (formula "61") (term "1"))
                                                         (rule "eqSymm" (formula "61"))
                                                         (rule "polySimp_elimSub" (formula "61") (term "1,2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                         (rule "getOfSeqSingleton" (formula "61") (term "2,0"))
                                                         (rule "castDel" (formula "61") (term "1,2,0"))
                                                         (rule "castDel" (formula "61") (term "2,2,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "61") (term "0,2,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,0,2,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,0,2,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "closeTrue" (formula "61"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "60"))
                                                         (branch "Case 1"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "60"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "eqSymm" (formula "59"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "59") (inst "iv=iv"))
                                                            (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1"))
                                                            (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "20"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                            (rule "pullOutSelect" (formula "59") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_1"))
                                                            (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet9_0" (formula "1") (term "0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "60") (term "0,0,1,0,1") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "21")))
                                                            (rule "closeTrue" (formula "60"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "60"))
                                                            (branch "Case 1"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "59") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1"))
                                                               (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "18"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                               (rule "pullOutSelect" (formula "59") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_1"))
                                                               (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet11_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "60") (term "0,0,1,0,1") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "19")))
                                                               (rule "closeTrue" (formula "60"))
                                                            )
                                                            (branch "Case 2"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "eqSymm" (formula "59"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "59") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "59") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,1"))
                                                               (rule "pullOutSelect" (formula "59") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_1"))
                                                               (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replaceKnownSelect_taclet13_0" (formula "1") (term "0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "allRight" (formula "60") (inst "sk=iv_0"))
                                                               (rule "impRight" (formula "60"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "62") (term "0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "62"))
                                                               (rule "closeTrue" (formula "62"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "59"))
                        (rule "orRight" (formula "60"))
                        (rule "orRight" (formula "60"))
                        (rule "orRight" (formula "60"))
                        (rule "orRight" (formula "60"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "59"))
                     (rule "allRight" (formula "59") (inst "sk=f_0"))
                     (rule "allRight" (formula "59") (inst "sk=o_0"))
                     (rule "orRight" (formula "59"))
                     (rule "orRight" (formula "59"))
                     (rule "orRight" (formula "59"))
                     (rule "orRight" (formula "60"))
                     (rule "orRight" (formula "61"))
                     (rule "eqSymm" (formula "64"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "65"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "62"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "64"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "63"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_notAnd" (formula "17") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                     (rule "commute_and" (formula "60"))
                     (rule "commute_and" (formula "63"))
                     (rule "commute_and" (formula "62"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Sender" (formula "30") (inst "s=s") (inst "i=i_1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "replaceKnownSelect_taclet4_0" (formula "30") (term "0,1"))
                     (rule "replaceKnownSelect_taclet7_0" (formula "30") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet7_0" (formula "30") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1,0,0,0,1,0") (ifseqformula "27"))
                     (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "30") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "30") (term "0,1,1,0,0,0,0"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "exLeft" (formula "30") (inst "sk=i_1_10"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "inEqSimp_ltToLeq" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "30"))
                     (rule "disjointDefinition" (formula "34"))
                     (rule "castedGetAny" (formula "32") (term "0"))
                     (rule "lenOfSeqConcat" (formula "31") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0"))
                     (rule "add_zero_left" (formula "31") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0"))
                     (rule "getOfSeqConcat" (formula "32") (term "0"))
                     (rule "polySimp_elimSub" (formula "32") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "32") (term "2,0"))
                     (rule "castDel" (formula "32") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "32") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "33") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Sender_id_10"))
                     (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                     (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "33"))
                     (rule "applyEqReverse" (formula "34") (term "1,0,0,0,0") (ifseqformula "33"))
                     (rule "hideAuxiliaryEq" (formula "33"))
                     (rule "nnf_imp2or" (formula "33") (term "0"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "33") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "33") (term "1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Voter" (formula "53"))
                     (rule "replaceKnownSelect_taclet18_0" (formula "53") (term "1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "53") (term "1,1,0"))
                     (rule "replaceKnownSelect_taclet18_0" (formula "53") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "53") (term "0,0,0,0"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "notLeft" (formula "53"))
                     (rule "disjointDefinition" (formula "54"))
                     (rule "pullOutSelect" (formula "54") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "replaceKnownSelect_taclet4_0" (formula "54") (term "0"))
                     (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "54"))
                     (rule "hideAuxiliaryEq" (formula "54"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_or" (formula "18") (term "0,0"))
                     (rule "commute_and" (formula "17") (term "1,0"))
                     (rule "commute_and" (formula "18") (term "1,0"))
                     (rule "commute_or_2" (formula "33") (term "0,0"))
                     (rule "commute_or_2" (formula "33") (term "0"))
                     (rule "commuteIntersection" (formula "34") (term "0"))
                     (rule "intersectWithSingleton" (formula "34") (term "0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "commute_or" (formula "33") (term "0,0,0"))
                     (rule "commute_or_2" (formula "33") (term "0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "(null, secret) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "eqSymm" (formula "54"))
                        (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "eqSymm" (formula "54"))
                        (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "eqSymm" (formula "54"))
                        (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "eqSymm" (formula "54"))
                        (rule "ifthenelse_split" (formula "38") (term "0"))
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "36") (term "1,0,1") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "55") (term "2") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "39"))
                           (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "39"))
                           (rule "hideAuxiliaryEq" (formula "39"))
                           (rule "disjointAndSubset_4" (formula "39") (ifseqformula "22"))
                           (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "disjointAndSubset_4" (formula "39") (ifseqformula "23"))
                           (rule "intersectAllFieldsFreshLocs" (formula "39") (term "0"))
                           (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "64"))
                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                           (rule "true_left" (formula "39"))
                           (rule "disjointAndSubset_4" (formula "39") (ifseqformula "25"))
                           (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "disjointAndSubset_4" (formula "39") (ifseqformula "24"))
                           (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "eqSymm" (formula "54"))
                           (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "eqSymm" (formula "54"))
                           (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "eqSymm" (formula "54"))
                           (rule "disjointNotInOtherLocset2" (formula "38") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "eqSymm" (formula "54"))
                           (rule "cnf_rightDist" (formula "17") (term "0"))
                           (rule "distr_forallAnd" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "cnf_rightDist" (formula "19") (term "0"))
                           (rule "distr_forallAnd" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "cut_direct" (formula "71") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "72"))
                              (rule "false_right" (formula "72"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "72"))
                              (rule "notRight" (formula "72"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")) (ifInst ""  (formula "73")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "true_left" (formula "39"))
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "54") (term "2") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "36") (term "1,0,1") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "37"))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "36"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "eqSymm" (formula "48"))
                           (rule "cnf_rightDist" (formula "17") (term "0"))
                           (rule "distr_forallAnd" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "commute_or" (formula "18") (term "0"))
                           (rule "cnf_rightDist" (formula "19") (term "0"))
                           (rule "distr_forallAnd" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "commute_or" (formula "20") (term "0"))
                           (rule "cut_direct" (formula "66") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "67"))
                              (rule "false_right" (formula "67"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "67")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "67"))
                              (rule "notRight" (formula "67"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "(null, secret) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "50") (term "0,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "37") (term "0"))
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "35") (term "1,0,1") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "34") (term "1,0") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "55") (term "2") (ifseqformula "38"))
                           (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "38"))
                           (rule "hideAuxiliaryEq" (formula "38"))
                           (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eqSymm" (formula "53"))
                           (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eqSymm" (formula "53"))
                           (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eqSymm" (formula "53"))
                           (rule "disjointNotInOtherLocset2" (formula "37") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eqSymm" (formula "53"))
                           (rule "disjointAndSubset_4" (formula "38") (ifseqformula "23"))
                           (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "disjointAndSubset_4" (formula "38") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "disjointAndSubset_4" (formula "38") (ifseqformula "22"))
                           (rule "intersectAllFieldsFreshLocs" (formula "38") (term "0"))
                           (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "64"))
                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "35")))
                           (rule "true_left" (formula "38"))
                           (rule "disjointAndSubset_4" (formula "38") (ifseqformula "24"))
                           (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "cnf_rightDist" (formula "16") (term "0"))
                           (rule "distr_forallAnd" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "cnf_rightDist" (formula "18") (term "0"))
                           (rule "distr_forallAnd" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "commute_or" (formula "17") (term "0"))
                           (rule "cut_direct" (formula "71") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "72"))
                              (rule "false_right" (formula "72"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "72"))
                              (rule "notRight" (formula "72"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "72"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "73")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "(null, rep) ∊ de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "37"))
                           (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "37"))
                           (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "36"))
                           (rule "applyEqReverse" (formula "53") (term "2") (ifseqformula "35"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEqReverse" (formula "34") (term "1,0,1") (ifseqformula "35"))
                           (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "cnf_rightDist" (formula "16") (term "0"))
                           (rule "distr_forallAnd" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17") (term "0"))
                           (rule "cnf_rightDist" (formula "18") (term "0"))
                           (rule "distr_forallAnd" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "commute_or" (formula "19") (term "0"))
                           (rule "cut_direct" (formula "66") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "67"))
                              (rule "false_right" (formula "67"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "67")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "67"))
                              (rule "notRight" (formula "67"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "67"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "68")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
               )
               (branch "Null Reference (v_arr_1 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (v_arr_1 != null, but x_2 Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "false_right" (formula "60"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Array Store Exception (incompatible dynamic element type of v_arr_1 and v)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "9")))
                  (rule "false_right" (formula "60"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "array_store_known_dynamic_array_type" (formula "50") (ifseqformula "15"))
                  (rule "orRight" (formula "50"))
                  (rule "instanceof_static_type" (formula "50") (term "0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "closeTrue" (formula "50"))
               )
            )
            (branch "Exceptional Post (Voter)"
               (builtin "One Step Simplification" (formula "49"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,1,0,1") (ifseqformula "26"))
               (rule "andLeft" (formula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1,0,1,0") (ifseqformula "42"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1,0,1,0") (ifseqformula "26"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "43"))
               (rule "andLeft" (formula "45"))
               (rule "andLeft" (formula "47"))
               (rule "notLeft" (formula "43"))
               (rule "close" (formula "49") (ifseqformula "48"))
            )
            (branch "Pre (Voter)"
               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "29")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "1") (ifseqformula "26"))
               (rule "wellFormedAnonEQ" (formula "47") (term "0") (ifseqformula "26"))
               (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "25")) (ifInst ""  (formula "42")) (ifInst ""  (formula "28")))
               (rule "closeTrue" (formula "47"))
            )
         )
      )
      (branch "Null Reference (_choices1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_choices1 != null, but _i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
         (builtin "One Step Simplification" (formula "42"))
         (rule "false_right" (formula "42"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "14"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
   )
   (branch "Null Reference (_choices0 = null)"
      (rule "false_right" (formula "41"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (_choices0 != null, but _i Out of Bounds!)"
      (rule "false_right" (formula "41"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (registerSender)"
   (builtin "One Step Simplification" (formula "29"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "25"))
   (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "27"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "commute_or_2" (formula "26"))
   (rule "commute_or_2" (formula "26") (term "0"))
   (rule "commute_or_2" (formula "26"))
   (rule "commute_or_2" (formula "26") (term "0,0"))
   (rule "commute_or_2" (formula "26") (term "0"))
   (rule "commute_or_2" (formula "26"))
   (rule "commute_or" (formula "26") (term "0,0,0"))
   (rule "commute_or_2" (formula "26") (term "0,0"))
   (rule "commute_or_2" (formula "26") (term "0"))
   (rule "commuteUnion" (formula "24") (term "1,1,0"))
   (rule "commuteUnion" (formula "24") (term "1,0"))
   (rule "methodCallThrow" (formula "32") (term "1"))
   (builtin "One Step Simplification" (formula "32"))
   (rule "tryCatchThrow" (formula "32") (term "1"))
   (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "32") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "32") (term "1"))
   (builtin "One Step Simplification" (formula "32"))
   (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "27"))
   (builtin "One Step Simplification" (formula "32"))
   (rule "arrayLengthNotNegative" (formula "11") (term "0"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
   (rule "arrayLengthIsAnInt" (formula "12") (term "0"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "arrayLengthNotNegative" (formula "12") (term "0"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
   (rule "arrayLengthIsAnInt" (formula "11") (term "0"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "arrayLengthNotNegative" (formula "14") (term "0"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
   (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "lenNonNegative" (formula "18") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
   (rule "lenNonNegative" (formula "19") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "lenNonNegative" (formula "17") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "17"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
   (rule "ifElseSplit" (formula "33"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "34"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "34"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "33"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
         (rule "instanceof_static_type" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "33") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "33"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "33"))
            (rule "assignment" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "emptyModality" (formula "33") (term "1"))
            (rule "andRight" (formula "33"))
            (branch "Case 1"
               (rule "andRight" (formula "33"))
               (branch "Case 1"
                  (rule "impRight" (formula "33"))
                  (rule "andRight" (formula "34"))
                  (branch "Case 1"
                     (rule "andRight" (formula "34"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "34"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "34"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "34"))
                        (branch "Case 1"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "34"))
                           (branch "Case 1"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "34"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "34"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "34"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "34"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "34"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "34"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "34"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "34"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "34"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "33"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (builtin "One Step Simplification" (formula "38"))
                  (builtin "One Step Simplification" (formula "37"))
                  (builtin "One Step Simplification" (formula "36"))
                  (builtin "One Step Simplification" (formula "35"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "1"))
                  (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                  (rule "closeFalse" (formula "27"))
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "33"))
               (rule "allRight" (formula "33") (inst "sk=f_1"))
               (rule "allRight" (formula "33") (inst "sk=o_1"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "34"))
               (rule "orRight" (formula "35"))
               (rule "eqSymm" (formula "38"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_1_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
               (rule "eqSymm" (formula "39"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (rule "orRight" (formula "33"))
            (rule "false_right" (formula "35"))
            (builtin "One Step Simplification" (formula "34"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
            (rule "false_right" (formula "33"))
            (rule "instanceof_static_type" (formula "33") (term "0"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "closeTrue" (formula "33"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
         (rule "notLeft" (formula "1"))
         (rule "instanceof_static_type" (formula "28") (term "0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "closeTrue" (formula "28"))
      )
   )
)
(branch "Pre (registerSender)"
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "18")) (ifInst ""  (formula "1")))
   (rule "eqSymm" (formula "27"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "8") (term "0"))
   (rule "applyEq" (formula "27") (term "0") (ifseqformula "17"))
   (rule "eqSymm" (formula "27"))
   (rule "close" (formula "27") (ifseqformula "18"))
)
)

}
